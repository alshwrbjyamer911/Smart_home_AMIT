
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003a48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000003ae  00800060  00003a48  00003adc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  0080040e  0080040e  00003e8a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003e8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003ebc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000348  00000000  00000000  00003ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000027af  00000000  00000000  00004240  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001020  00000000  00000000  000069ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000297b  00000000  00000000  00007a0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b60  00000000  00000000  0000a38c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a02  00000000  00000000  0000aeec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001747  00000000  00000000  0000b8ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a0  00000000  00000000  0000d035  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 f4 13 	jmp	0x27e8	; 0x27e8 <__vector_1>
       8:	0c 94 4f 15 	jmp	0x2a9e	; 0x2a9e <__vector_2>
       c:	0c 94 80 15 	jmp	0x2b00	; 0x2b00 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 b7 18 	jmp	0x316e	; 0x316e <__vector_10>
      2c:	0c 94 86 18 	jmp	0x310c	; 0x310c <__vector_11>
      30:	0c 94 56 17 	jmp	0x2eac	; 0x2eac <__vector_12>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	14 e0       	ldi	r17, 0x04	; 4
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e4       	ldi	r30, 0x48	; 72
      68:	fa e3       	ldi	r31, 0x3A	; 58
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 30       	cpi	r26, 0x0E	; 14
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	24 e0       	ldi	r18, 0x04	; 4
      78:	ae e0       	ldi	r26, 0x0E	; 14
      7a:	b4 e0       	ldi	r27, 0x04	; 4
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 31       	cpi	r26, 0x19	; 25
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 22 1d 	jmp	0x3a44	; 0x3a44 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "EXT_INT.h"
#include "GI_INT.h"
#include "LCD_INT.h"

int main(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
      9a:	c6 54       	subi	r28, 0x46	; 70
      9c:	d1 09       	sbc	r29, r1
      9e:	0f b6       	in	r0, 0x3f	; 63
      a0:	f8 94       	cli
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	0f be       	out	0x3f, r0	; 63
      a6:	cd bf       	out	0x3d, r28	; 61
	
	//DIO_setPinDir(DIO_PIND2,DIO_INPUT);
	DIO_setPinDir(DIO_PINB0,DIO_OUTPUT);
      a8:	61 e0       	ldi	r22, 0x01	; 1
      aa:	88 e0       	ldi	r24, 0x08	; 8
      ac:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA0,DIO_OUTPUT);
      b0:	61 e0       	ldi	r22, 0x01	; 1
      b2:	80 e0       	ldi	r24, 0x00	; 0
      b4:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA1,DIO_OUTPUT);
      b8:	61 e0       	ldi	r22, 0x01	; 1
      ba:	81 e0       	ldi	r24, 0x01	; 1
      bc:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA2,DIO_OUTPUT);
      c0:	61 e0       	ldi	r22, 0x01	; 1
      c2:	82 e0       	ldi	r24, 0x02	; 2
      c4:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA3,DIO_OUTPUT);
      c8:	61 e0       	ldi	r22, 0x01	; 1
      ca:	83 e0       	ldi	r24, 0x03	; 3
      cc:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA4,DIO_OUTPUT);
      d0:	61 e0       	ldi	r22, 0x01	; 1
      d2:	84 e0       	ldi	r24, 0x04	; 4
      d4:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>


	SPI_Init();
      d8:	0e 94 e6 15 	call	0x2bcc	; 0x2bcc <SPI_Init>
	UART_init();
      dc:	0e 94 0f 1a 	call	0x341e	; 0x341e <UART_init>
	I2C_init(MASTER);
      e0:	81 e0       	ldi	r24, 0x01	; 1
      e2:	0e 94 c2 15 	call	0x2b84	; 0x2b84 <I2C_init>
	GI_enable();
      e6:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <GI_enable>
	EXT0_init(EXT_RISING);
      ea:	83 e0       	ldi	r24, 0x03	; 3
      ec:	0e 94 89 13 	call	0x2712	; 0x2712 <EXT0_init>
	
	
	u8 adminuser[5]="admin";
      f0:	85 e0       	ldi	r24, 0x05	; 5
      f2:	eb e0       	ldi	r30, 0x0B	; 11
      f4:	f3 e0       	ldi	r31, 0x03	; 3
      f6:	de 01       	movw	r26, r28
      f8:	d4 96       	adiw	r26, 0x34	; 52
      fa:	01 90       	ld	r0, Z+
      fc:	0d 92       	st	X+, r0
      fe:	8a 95       	dec	r24
     100:	e1 f7       	brne	.-8      	; 0xfa <main+0x68>
	u8 adminpassword[4]="1234";
     102:	81 e3       	ldi	r24, 0x31	; 49
     104:	92 e3       	ldi	r25, 0x32	; 50
     106:	9a af       	std	Y+58, r25	; 0x3a
     108:	89 af       	std	Y+57, r24	; 0x39
     10a:	83 e3       	ldi	r24, 0x33	; 51
     10c:	94 e3       	ldi	r25, 0x34	; 52
     10e:	9c af       	std	Y+60, r25	; 0x3c
     110:	8b af       	std	Y+59, r24	; 0x3b
	DIO_setPinDir(DIO_PIND3,DIO_OUTPUT);
     112:	61 e0       	ldi	r22, 0x01	; 1
     114:	8b e1       	ldi	r24, 0x1B	; 27
     116:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
	//saving admin username
	for(int b=0; b<5; b++)
     11a:	1a 82       	std	Y+2, r1	; 0x02
     11c:	19 82       	std	Y+1, r1	; 0x01
     11e:	85 c0       	rjmp	.+266    	; 0x22a <main+0x198>
	{
		EEPROM_writeData(adminuser[b],b);
     120:	49 81       	ldd	r20, Y+1	; 0x01
     122:	5a 81       	ldd	r21, Y+2	; 0x02
     124:	9e 01       	movw	r18, r28
     126:	2c 5c       	subi	r18, 0xCC	; 204
     128:	3f 4f       	sbci	r19, 0xFF	; 255
     12a:	89 81       	ldd	r24, Y+1	; 0x01
     12c:	9a 81       	ldd	r25, Y+2	; 0x02
     12e:	82 0f       	add	r24, r18
     130:	93 1f       	adc	r25, r19
     132:	fc 01       	movw	r30, r24
     134:	80 81       	ld	r24, Z
     136:	ba 01       	movw	r22, r20
     138:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
     13c:	80 e0       	ldi	r24, 0x00	; 0
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	a0 ea       	ldi	r26, 0xA0	; 160
     142:	b1 e4       	ldi	r27, 0x41	; 65
     144:	8a 8b       	std	Y+18, r24	; 0x12
     146:	9b 8b       	std	Y+19, r25	; 0x13
     148:	ac 8b       	std	Y+20, r26	; 0x14
     14a:	bd 8b       	std	Y+21, r27	; 0x15

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     14c:	20 e0       	ldi	r18, 0x00	; 0
     14e:	30 e0       	ldi	r19, 0x00	; 0
     150:	4a e7       	ldi	r20, 0x7A	; 122
     152:	55 e4       	ldi	r21, 0x45	; 69
     154:	6a 89       	ldd	r22, Y+18	; 0x12
     156:	7b 89       	ldd	r23, Y+19	; 0x13
     158:	8c 89       	ldd	r24, Y+20	; 0x14
     15a:	9d 89       	ldd	r25, Y+21	; 0x15
     15c:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     160:	dc 01       	movw	r26, r24
     162:	cb 01       	movw	r24, r22
     164:	8e 8b       	std	Y+22, r24	; 0x16
     166:	9f 8b       	std	Y+23, r25	; 0x17
     168:	a8 8f       	std	Y+24, r26	; 0x18
     16a:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
     16c:	20 e0       	ldi	r18, 0x00	; 0
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	40 e8       	ldi	r20, 0x80	; 128
     172:	5f e3       	ldi	r21, 0x3F	; 63
     174:	6e 89       	ldd	r22, Y+22	; 0x16
     176:	7f 89       	ldd	r23, Y+23	; 0x17
     178:	88 8d       	ldd	r24, Y+24	; 0x18
     17a:	99 8d       	ldd	r25, Y+25	; 0x19
     17c:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     180:	88 23       	and	r24, r24
     182:	2c f4       	brge	.+10     	; 0x18e <main+0xfc>
		__ticks = 1;
     184:	81 e0       	ldi	r24, 0x01	; 1
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	9b 8f       	std	Y+27, r25	; 0x1b
     18a:	8a 8f       	std	Y+26, r24	; 0x1a
     18c:	3f c0       	rjmp	.+126    	; 0x20c <main+0x17a>
	else if (__tmp > 65535)
     18e:	20 e0       	ldi	r18, 0x00	; 0
     190:	3f ef       	ldi	r19, 0xFF	; 255
     192:	4f e7       	ldi	r20, 0x7F	; 127
     194:	57 e4       	ldi	r21, 0x47	; 71
     196:	6e 89       	ldd	r22, Y+22	; 0x16
     198:	7f 89       	ldd	r23, Y+23	; 0x17
     19a:	88 8d       	ldd	r24, Y+24	; 0x18
     19c:	99 8d       	ldd	r25, Y+25	; 0x19
     19e:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     1a2:	18 16       	cp	r1, r24
     1a4:	4c f5       	brge	.+82     	; 0x1f8 <main+0x166>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	40 e2       	ldi	r20, 0x20	; 32
     1ac:	51 e4       	ldi	r21, 0x41	; 65
     1ae:	6a 89       	ldd	r22, Y+18	; 0x12
     1b0:	7b 89       	ldd	r23, Y+19	; 0x13
     1b2:	8c 89       	ldd	r24, Y+20	; 0x14
     1b4:	9d 89       	ldd	r25, Y+21	; 0x15
     1b6:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     1ba:	dc 01       	movw	r26, r24
     1bc:	cb 01       	movw	r24, r22
     1be:	bc 01       	movw	r22, r24
     1c0:	cd 01       	movw	r24, r26
     1c2:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     1c6:	dc 01       	movw	r26, r24
     1c8:	cb 01       	movw	r24, r22
     1ca:	9b 8f       	std	Y+27, r25	; 0x1b
     1cc:	8a 8f       	std	Y+26, r24	; 0x1a
     1ce:	0f c0       	rjmp	.+30     	; 0x1ee <main+0x15c>
     1d0:	80 e9       	ldi	r24, 0x90	; 144
     1d2:	91 e0       	ldi	r25, 0x01	; 1
     1d4:	9d 8f       	std	Y+29, r25	; 0x1d
     1d6:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1d8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     1da:	9d 8d       	ldd	r25, Y+29	; 0x1d
     1dc:	01 97       	sbiw	r24, 0x01	; 1
     1de:	f1 f7       	brne	.-4      	; 0x1dc <main+0x14a>
     1e0:	9d 8f       	std	Y+29, r25	; 0x1d
     1e2:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1e4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     1e6:	9b 8d       	ldd	r25, Y+27	; 0x1b
     1e8:	01 97       	sbiw	r24, 0x01	; 1
     1ea:	9b 8f       	std	Y+27, r25	; 0x1b
     1ec:	8a 8f       	std	Y+26, r24	; 0x1a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ee:	8a 8d       	ldd	r24, Y+26	; 0x1a
     1f0:	9b 8d       	ldd	r25, Y+27	; 0x1b
     1f2:	89 2b       	or	r24, r25
     1f4:	69 f7       	brne	.-38     	; 0x1d0 <main+0x13e>
     1f6:	14 c0       	rjmp	.+40     	; 0x220 <main+0x18e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1f8:	6e 89       	ldd	r22, Y+22	; 0x16
     1fa:	7f 89       	ldd	r23, Y+23	; 0x17
     1fc:	88 8d       	ldd	r24, Y+24	; 0x18
     1fe:	99 8d       	ldd	r25, Y+25	; 0x19
     200:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     204:	dc 01       	movw	r26, r24
     206:	cb 01       	movw	r24, r22
     208:	9b 8f       	std	Y+27, r25	; 0x1b
     20a:	8a 8f       	std	Y+26, r24	; 0x1a
     20c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     20e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     210:	9f 8f       	std	Y+31, r25	; 0x1f
     212:	8e 8f       	std	Y+30, r24	; 0x1e
     214:	8e 8d       	ldd	r24, Y+30	; 0x1e
     216:	9f 8d       	ldd	r25, Y+31	; 0x1f
     218:	01 97       	sbiw	r24, 0x01	; 1
     21a:	f1 f7       	brne	.-4      	; 0x218 <main+0x186>
     21c:	9f 8f       	std	Y+31, r25	; 0x1f
     21e:	8e 8f       	std	Y+30, r24	; 0x1e
	
	u8 adminuser[5]="admin";
	u8 adminpassword[4]="1234";
	DIO_setPinDir(DIO_PIND3,DIO_OUTPUT);
	//saving admin username
	for(int b=0; b<5; b++)
     220:	89 81       	ldd	r24, Y+1	; 0x01
     222:	9a 81       	ldd	r25, Y+2	; 0x02
     224:	01 96       	adiw	r24, 0x01	; 1
     226:	9a 83       	std	Y+2, r25	; 0x02
     228:	89 83       	std	Y+1, r24	; 0x01
     22a:	89 81       	ldd	r24, Y+1	; 0x01
     22c:	9a 81       	ldd	r25, Y+2	; 0x02
     22e:	05 97       	sbiw	r24, 0x05	; 5
     230:	0c f4       	brge	.+2      	; 0x234 <main+0x1a2>
     232:	76 cf       	rjmp	.-276    	; 0x120 <main+0x8e>
	{
		EEPROM_writeData(adminuser[b],b);
		_delay_ms(20);

	}
	for(int b=0,j=5; b<4; b++,j++)
     234:	1c 82       	std	Y+4, r1	; 0x04
     236:	1b 82       	std	Y+3, r1	; 0x03
     238:	85 e0       	ldi	r24, 0x05	; 5
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	9e 83       	std	Y+6, r25	; 0x06
     23e:	8d 83       	std	Y+5, r24	; 0x05
     240:	8a c0       	rjmp	.+276    	; 0x356 <main+0x2c4>
	{
		EEPROM_writeData(adminpassword[b],j);
     242:	4d 81       	ldd	r20, Y+5	; 0x05
     244:	5e 81       	ldd	r21, Y+6	; 0x06
     246:	9e 01       	movw	r18, r28
     248:	27 5c       	subi	r18, 0xC7	; 199
     24a:	3f 4f       	sbci	r19, 0xFF	; 255
     24c:	8b 81       	ldd	r24, Y+3	; 0x03
     24e:	9c 81       	ldd	r25, Y+4	; 0x04
     250:	82 0f       	add	r24, r18
     252:	93 1f       	adc	r25, r19
     254:	fc 01       	movw	r30, r24
     256:	80 81       	ld	r24, Z
     258:	ba 01       	movw	r22, r20
     25a:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	a0 ea       	ldi	r26, 0xA0	; 160
     264:	b1 e4       	ldi	r27, 0x41	; 65
     266:	8a 87       	std	Y+10, r24	; 0x0a
     268:	9b 87       	std	Y+11, r25	; 0x0b
     26a:	ac 87       	std	Y+12, r26	; 0x0c
     26c:	bd 87       	std	Y+13, r27	; 0x0d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     26e:	20 e0       	ldi	r18, 0x00	; 0
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	4a e7       	ldi	r20, 0x7A	; 122
     274:	55 e4       	ldi	r21, 0x45	; 69
     276:	6a 85       	ldd	r22, Y+10	; 0x0a
     278:	7b 85       	ldd	r23, Y+11	; 0x0b
     27a:	8c 85       	ldd	r24, Y+12	; 0x0c
     27c:	9d 85       	ldd	r25, Y+13	; 0x0d
     27e:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     282:	dc 01       	movw	r26, r24
     284:	cb 01       	movw	r24, r22
     286:	88 a3       	std	Y+32, r24	; 0x20
     288:	99 a3       	std	Y+33, r25	; 0x21
     28a:	aa a3       	std	Y+34, r26	; 0x22
     28c:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	40 e8       	ldi	r20, 0x80	; 128
     294:	5f e3       	ldi	r21, 0x3F	; 63
     296:	68 a1       	ldd	r22, Y+32	; 0x20
     298:	79 a1       	ldd	r23, Y+33	; 0x21
     29a:	8a a1       	ldd	r24, Y+34	; 0x22
     29c:	9b a1       	ldd	r25, Y+35	; 0x23
     29e:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     2a2:	88 23       	and	r24, r24
     2a4:	2c f4       	brge	.+10     	; 0x2b0 <main+0x21e>
		__ticks = 1;
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	9d a3       	std	Y+37, r25	; 0x25
     2ac:	8c a3       	std	Y+36, r24	; 0x24
     2ae:	3f c0       	rjmp	.+126    	; 0x32e <main+0x29c>
	else if (__tmp > 65535)
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	3f ef       	ldi	r19, 0xFF	; 255
     2b4:	4f e7       	ldi	r20, 0x7F	; 127
     2b6:	57 e4       	ldi	r21, 0x47	; 71
     2b8:	68 a1       	ldd	r22, Y+32	; 0x20
     2ba:	79 a1       	ldd	r23, Y+33	; 0x21
     2bc:	8a a1       	ldd	r24, Y+34	; 0x22
     2be:	9b a1       	ldd	r25, Y+35	; 0x23
     2c0:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     2c4:	18 16       	cp	r1, r24
     2c6:	4c f5       	brge	.+82     	; 0x31a <main+0x288>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2c8:	20 e0       	ldi	r18, 0x00	; 0
     2ca:	30 e0       	ldi	r19, 0x00	; 0
     2cc:	40 e2       	ldi	r20, 0x20	; 32
     2ce:	51 e4       	ldi	r21, 0x41	; 65
     2d0:	6a 85       	ldd	r22, Y+10	; 0x0a
     2d2:	7b 85       	ldd	r23, Y+11	; 0x0b
     2d4:	8c 85       	ldd	r24, Y+12	; 0x0c
     2d6:	9d 85       	ldd	r25, Y+13	; 0x0d
     2d8:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     2dc:	dc 01       	movw	r26, r24
     2de:	cb 01       	movw	r24, r22
     2e0:	bc 01       	movw	r22, r24
     2e2:	cd 01       	movw	r24, r26
     2e4:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     2e8:	dc 01       	movw	r26, r24
     2ea:	cb 01       	movw	r24, r22
     2ec:	9d a3       	std	Y+37, r25	; 0x25
     2ee:	8c a3       	std	Y+36, r24	; 0x24
     2f0:	0f c0       	rjmp	.+30     	; 0x310 <main+0x27e>
     2f2:	80 e9       	ldi	r24, 0x90	; 144
     2f4:	91 e0       	ldi	r25, 0x01	; 1
     2f6:	9f a3       	std	Y+39, r25	; 0x27
     2f8:	8e a3       	std	Y+38, r24	; 0x26
     2fa:	8e a1       	ldd	r24, Y+38	; 0x26
     2fc:	9f a1       	ldd	r25, Y+39	; 0x27
     2fe:	01 97       	sbiw	r24, 0x01	; 1
     300:	f1 f7       	brne	.-4      	; 0x2fe <main+0x26c>
     302:	9f a3       	std	Y+39, r25	; 0x27
     304:	8e a3       	std	Y+38, r24	; 0x26
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     306:	8c a1       	ldd	r24, Y+36	; 0x24
     308:	9d a1       	ldd	r25, Y+37	; 0x25
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	9d a3       	std	Y+37, r25	; 0x25
     30e:	8c a3       	std	Y+36, r24	; 0x24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     310:	8c a1       	ldd	r24, Y+36	; 0x24
     312:	9d a1       	ldd	r25, Y+37	; 0x25
     314:	89 2b       	or	r24, r25
     316:	69 f7       	brne	.-38     	; 0x2f2 <main+0x260>
     318:	14 c0       	rjmp	.+40     	; 0x342 <main+0x2b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     31a:	68 a1       	ldd	r22, Y+32	; 0x20
     31c:	79 a1       	ldd	r23, Y+33	; 0x21
     31e:	8a a1       	ldd	r24, Y+34	; 0x22
     320:	9b a1       	ldd	r25, Y+35	; 0x23
     322:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     326:	dc 01       	movw	r26, r24
     328:	cb 01       	movw	r24, r22
     32a:	9d a3       	std	Y+37, r25	; 0x25
     32c:	8c a3       	std	Y+36, r24	; 0x24
     32e:	8c a1       	ldd	r24, Y+36	; 0x24
     330:	9d a1       	ldd	r25, Y+37	; 0x25
     332:	99 a7       	std	Y+41, r25	; 0x29
     334:	88 a7       	std	Y+40, r24	; 0x28
     336:	88 a5       	ldd	r24, Y+40	; 0x28
     338:	99 a5       	ldd	r25, Y+41	; 0x29
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <main+0x2a8>
     33e:	99 a7       	std	Y+41, r25	; 0x29
     340:	88 a7       	std	Y+40, r24	; 0x28
	{
		EEPROM_writeData(adminuser[b],b);
		_delay_ms(20);

	}
	for(int b=0,j=5; b<4; b++,j++)
     342:	8b 81       	ldd	r24, Y+3	; 0x03
     344:	9c 81       	ldd	r25, Y+4	; 0x04
     346:	01 96       	adiw	r24, 0x01	; 1
     348:	9c 83       	std	Y+4, r25	; 0x04
     34a:	8b 83       	std	Y+3, r24	; 0x03
     34c:	8d 81       	ldd	r24, Y+5	; 0x05
     34e:	9e 81       	ldd	r25, Y+6	; 0x06
     350:	01 96       	adiw	r24, 0x01	; 1
     352:	9e 83       	std	Y+6, r25	; 0x06
     354:	8d 83       	std	Y+5, r24	; 0x05
     356:	8b 81       	ldd	r24, Y+3	; 0x03
     358:	9c 81       	ldd	r25, Y+4	; 0x04
     35a:	04 97       	sbiw	r24, 0x04	; 4
     35c:	0c f4       	brge	.+2      	; 0x360 <main+0x2ce>
     35e:	71 cf       	rjmp	.-286    	; 0x242 <main+0x1b0>
	{
		EEPROM_writeData(adminpassword[b],j);
		_delay_ms(20);

	}
    u8 wrongPass=0;
     360:	1f 82       	std	Y+7, r1	; 0x07
// 	//_delay_ms(30);
// 
// }
u8 userchoice[10];
u8 flag1;
u8 back=0;
     362:	19 86       	std	Y+9, r1	; 0x09
while (1)
{
	if (wrongPass!=3)
     364:	8f 81       	ldd	r24, Y+7	; 0x07
     366:	83 30       	cpi	r24, 0x03	; 3
     368:	09 f4       	brne	.+2      	; 0x36c <main+0x2da>
     36a:	0e c2       	rjmp	.+1052   	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
	{	
		if(adminLogin())
     36c:	0e 94 40 04 	call	0x880	; 0x880 <adminLogin>
     370:	88 23       	and	r24, r24
     372:	09 f4       	brne	.+2      	; 0x376 <main+0x2e4>
     374:	01 c2       	rjmp	.+1026   	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
		{
			wrongPass=0;
     376:	1f 82       	std	Y+7, r1	; 0x07
			UART_sendString("Welcome Home.\r ");
     378:	80 e6       	ldi	r24, 0x60	; 96
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
			flag1=1;
     380:	81 e0       	ldi	r24, 0x01	; 1
     382:	88 87       	std	Y+8, r24	; 0x08
		while (flag1)
     384:	f4 c1       	rjmp	.+1000   	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
		{
				UART_sendString(" press a to add an online user\r press b to add an offline user\r press c to delete online user\r press d to delete offline user\r press e to Control devices\r press s to sign out\r");
     386:	80 e7       	ldi	r24, 0x70	; 112
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
				adminInput(userchoice);
     38e:	ce 01       	movw	r24, r28
     390:	cd 96       	adiw	r24, 0x3d	; 61
     392:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
				if ((!(strcmp(userchoice,"a"))))
     396:	ce 01       	movw	r24, r28
     398:	cd 96       	adiw	r24, 0x3d	; 61
     39a:	60 e2       	ldi	r22, 0x20	; 32
     39c:	71 e0       	ldi	r23, 0x01	; 1
     39e:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     3a2:	89 2b       	or	r24, r25
     3a4:	71 f4       	brne	.+28     	; 0x3c2 <main+0x330>
					{
						if (addOnlineUser())
     3a6:	0e 94 e7 04 	call	0x9ce	; 0x9ce <addOnlineUser>
     3aa:	88 23       	and	r24, r24
     3ac:	29 f0       	breq	.+10     	; 0x3b8 <main+0x326>
						{
							UART_sendString("User added successfully \r");
     3ae:	82 e2       	ldi	r24, 0x22	; 34
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     3b6:	db c1       	rjmp	.+950    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
						}
						else
						{
							UART_sendString("Error\r ");
     3b8:	8c e3       	ldi	r24, 0x3C	; 60
     3ba:	91 e0       	ldi	r25, 0x01	; 1
     3bc:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     3c0:	d6 c1       	rjmp	.+940    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
						}	
					}
				else if ((!(strcmp(userchoice,"b"))))
     3c2:	ce 01       	movw	r24, r28
     3c4:	cd 96       	adiw	r24, 0x3d	; 61
     3c6:	64 e4       	ldi	r22, 0x44	; 68
     3c8:	71 e0       	ldi	r23, 0x01	; 1
     3ca:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     3ce:	89 2b       	or	r24, r25
     3d0:	71 f4       	brne	.+28     	; 0x3ee <main+0x35c>
					{	
						if (addOfflineUser())
     3d2:	0e 94 61 06 	call	0xcc2	; 0xcc2 <addOfflineUser>
     3d6:	88 23       	and	r24, r24
     3d8:	29 f0       	breq	.+10     	; 0x3e4 <main+0x352>
						{
							UART_sendString("User added successfully\r ");
     3da:	86 e4       	ldi	r24, 0x46	; 70
     3dc:	91 e0       	ldi	r25, 0x01	; 1
     3de:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     3e2:	c5 c1       	rjmp	.+906    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
						}
						else
						{
							UART_sendString("Error\r ");
     3e4:	8c e3       	ldi	r24, 0x3C	; 60
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     3ec:	c0 c1       	rjmp	.+896    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
						}
					}
				else if ((!(strcmp(userchoice,"c"))))
     3ee:	ce 01       	movw	r24, r28
     3f0:	cd 96       	adiw	r24, 0x3d	; 61
     3f2:	60 e6       	ldi	r22, 0x60	; 96
     3f4:	71 e0       	ldi	r23, 0x01	; 1
     3f6:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     3fa:	89 2b       	or	r24, r25
     3fc:	71 f4       	brne	.+28     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
					{
						if (deleteOnlineUser())
     3fe:	0e 94 db 07 	call	0xfb6	; 0xfb6 <deleteOnlineUser>
     402:	88 23       	and	r24, r24
     404:	29 f0       	breq	.+10     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
						{
							UART_sendString("User deleted successfully \r");
     406:	82 e6       	ldi	r24, 0x62	; 98
     408:	91 e0       	ldi	r25, 0x01	; 1
     40a:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     40e:	af c1       	rjmp	.+862    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
						}
						else
						{
							UART_sendString("Error \r");
     410:	8e e7       	ldi	r24, 0x7E	; 126
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     418:	aa c1       	rjmp	.+852    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
							
						}
					}
				else if ((!(strcmp(userchoice,"d"))))
     41a:	ce 01       	movw	r24, r28
     41c:	cd 96       	adiw	r24, 0x3d	; 61
     41e:	66 e8       	ldi	r22, 0x86	; 134
     420:	71 e0       	ldi	r23, 0x01	; 1
     422:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     426:	89 2b       	or	r24, r25
     428:	71 f4       	brne	.+28     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
				{
					if (deleteOfflineUser())
     42a:	0e 94 bd 09 	call	0x137a	; 0x137a <deleteOfflineUser>
     42e:	88 23       	and	r24, r24
     430:	29 f0       	breq	.+10     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
					{
						UART_sendString("User deleted successfully \r");
     432:	82 e6       	ldi	r24, 0x62	; 98
     434:	91 e0       	ldi	r25, 0x01	; 1
     436:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     43a:	99 c1       	rjmp	.+818    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
					}
					else
					{
						UART_sendString("Error \r");
     43c:	8e e7       	ldi	r24, 0x7E	; 126
     43e:	91 e0       	ldi	r25, 0x01	; 1
     440:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     444:	94 c1       	rjmp	.+808    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
						
					}
				}

				else if((!(strcmp(userchoice,"e"))))
     446:	ce 01       	movw	r24, r28
     448:	cd 96       	adiw	r24, 0x3d	; 61
     44a:	68 e8       	ldi	r22, 0x88	; 136
     44c:	71 e0       	ldi	r23, 0x01	; 1
     44e:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     452:	89 2b       	or	r24, r25
     454:	09 f0       	breq	.+2      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     456:	7d c1       	rjmp	.+762    	; 0x752 <__EEPROM_REGION_LENGTH__+0x352>
					{
						LCD_init();
     458:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <LCD_init>
						back=1;
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	89 87       	std	Y+9, r24	; 0x09
						while (back==1)
     460:	73 c1       	rjmp	.+742    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
						{
							UART_sendString("Write the number of the led then on or off to control it\rPress a number between 1 and 5 to control the dimming\rWrite off to turn dimmer off\r Write open or close to control the door\r Press b to go back\r");
     462:	8a e8       	ldi	r24, 0x8A	; 138
     464:	91 e0       	ldi	r25, 0x01	; 1
     466:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
							adminInput(userchoice);
     46a:	ce 01       	movw	r24, r28
     46c:	cd 96       	adiw	r24, 0x3d	; 61
     46e:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
							if ((!(strcmp(userchoice,"off"))))
     472:	ce 01       	movw	r24, r28
     474:	cd 96       	adiw	r24, 0x3d	; 61
     476:	64 e5       	ldi	r22, 0x54	; 84
     478:	72 e0       	ldi	r23, 0x02	; 2
     47a:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     47e:	89 2b       	or	r24, r25
     480:	61 f4       	brne	.+24     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
							{
								LED_DIMMER(0);
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
								LCD_goto(10,2);
     488:	62 e0       	ldi	r22, 0x02	; 2
     48a:	8a e0       	ldi	r24, 0x0A	; 10
     48c:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("      ");
     490:	88 e5       	ldi	r24, 0x58	; 88
     492:	92 e0       	ldi	r25, 0x02	; 2
     494:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     498:	57 c1       	rjmp	.+686    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
								
							}
							else if ((!(strcmp(userchoice,"1"))))
     49a:	ce 01       	movw	r24, r28
     49c:	cd 96       	adiw	r24, 0x3d	; 61
     49e:	6f e5       	ldi	r22, 0x5F	; 95
     4a0:	72 e0       	ldi	r23, 0x02	; 2
     4a2:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     4a6:	89 2b       	or	r24, r25
     4a8:	61 f4       	brne	.+24     	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
							{
								LED_DIMMER(1);
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
								LCD_goto(10,2);
     4b0:	62 e0       	ldi	r22, 0x02	; 2
     4b2:	8a e0       	ldi	r24, 0x0A	; 10
     4b4:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("Dim L1");
     4b8:	81 e6       	ldi	r24, 0x61	; 97
     4ba:	92 e0       	ldi	r25, 0x02	; 2
     4bc:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     4c0:	43 c1       	rjmp	.+646    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
								
							}
							else if ((!(strcmp(userchoice,"2"))))
     4c2:	ce 01       	movw	r24, r28
     4c4:	cd 96       	adiw	r24, 0x3d	; 61
     4c6:	68 e6       	ldi	r22, 0x68	; 104
     4c8:	72 e0       	ldi	r23, 0x02	; 2
     4ca:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     4ce:	89 2b       	or	r24, r25
     4d0:	61 f4       	brne	.+24     	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
							{
								LED_DIMMER(2);
     4d2:	82 e0       	ldi	r24, 0x02	; 2
     4d4:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
								LCD_goto(10,2);
     4d8:	62 e0       	ldi	r22, 0x02	; 2
     4da:	8a e0       	ldi	r24, 0x0A	; 10
     4dc:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("Dim L2");
     4e0:	8a e6       	ldi	r24, 0x6A	; 106
     4e2:	92 e0       	ldi	r25, 0x02	; 2
     4e4:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     4e8:	2f c1       	rjmp	.+606    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"3"))))
     4ea:	ce 01       	movw	r24, r28
     4ec:	cd 96       	adiw	r24, 0x3d	; 61
     4ee:	61 e7       	ldi	r22, 0x71	; 113
     4f0:	72 e0       	ldi	r23, 0x02	; 2
     4f2:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     4f6:	89 2b       	or	r24, r25
     4f8:	61 f4       	brne	.+24     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
							{
								LED_DIMMER(3);
     4fa:	83 e0       	ldi	r24, 0x03	; 3
     4fc:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
								LCD_goto(10,2);
     500:	62 e0       	ldi	r22, 0x02	; 2
     502:	8a e0       	ldi	r24, 0x0A	; 10
     504:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("Dim L3");
     508:	83 e7       	ldi	r24, 0x73	; 115
     50a:	92 e0       	ldi	r25, 0x02	; 2
     50c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     510:	1b c1       	rjmp	.+566    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"4"))))
     512:	ce 01       	movw	r24, r28
     514:	cd 96       	adiw	r24, 0x3d	; 61
     516:	6a e7       	ldi	r22, 0x7A	; 122
     518:	72 e0       	ldi	r23, 0x02	; 2
     51a:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     51e:	89 2b       	or	r24, r25
     520:	61 f4       	brne	.+24     	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
							{
								LED_DIMMER(4);
     522:	84 e0       	ldi	r24, 0x04	; 4
     524:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
								LCD_goto(10,2);
     528:	62 e0       	ldi	r22, 0x02	; 2
     52a:	8a e0       	ldi	r24, 0x0A	; 10
     52c:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("Dim L4");
     530:	8c e7       	ldi	r24, 0x7C	; 124
     532:	92 e0       	ldi	r25, 0x02	; 2
     534:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     538:	07 c1       	rjmp	.+526    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"5"))))
     53a:	ce 01       	movw	r24, r28
     53c:	cd 96       	adiw	r24, 0x3d	; 61
     53e:	63 e8       	ldi	r22, 0x83	; 131
     540:	72 e0       	ldi	r23, 0x02	; 2
     542:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     546:	89 2b       	or	r24, r25
     548:	61 f4       	brne	.+24     	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
							{
								LED_DIMMER(5);
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
								LCD_goto(10,2);
     550:	62 e0       	ldi	r22, 0x02	; 2
     552:	8a e0       	ldi	r24, 0x0A	; 10
     554:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("Dim L5");
     558:	85 e8       	ldi	r24, 0x85	; 133
     55a:	92 e0       	ldi	r25, 0x02	; 2
     55c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     560:	f3 c0       	rjmp	.+486    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"1 on"))))
     562:	ce 01       	movw	r24, r28
     564:	cd 96       	adiw	r24, 0x3d	; 61
     566:	6c e8       	ldi	r22, 0x8C	; 140
     568:	72 e0       	ldi	r23, 0x02	; 2
     56a:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     56e:	89 2b       	or	r24, r25
     570:	69 f4       	brne	.+26     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
							{
								DIO_setPinValue(DIO_PINA0,DIO_HIGH);
     572:	61 e0       	ldi	r22, 0x01	; 1
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(0,2);
     57a:	62 e0       	ldi	r22, 0x02	; 2
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("L1");
     582:	81 e9       	ldi	r24, 0x91	; 145
     584:	92 e0       	ldi	r25, 0x02	; 2
     586:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     58a:	de c0       	rjmp	.+444    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"2 on"))))
     58c:	ce 01       	movw	r24, r28
     58e:	cd 96       	adiw	r24, 0x3d	; 61
     590:	64 e9       	ldi	r22, 0x94	; 148
     592:	72 e0       	ldi	r23, 0x02	; 2
     594:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     598:	89 2b       	or	r24, r25
     59a:	69 f4       	brne	.+26     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
							{
								DIO_setPinValue(DIO_PINA1,DIO_HIGH);
     59c:	61 e0       	ldi	r22, 0x01	; 1
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(2,2);
     5a4:	62 e0       	ldi	r22, 0x02	; 2
     5a6:	82 e0       	ldi	r24, 0x02	; 2
     5a8:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("L2");
     5ac:	89 e9       	ldi	r24, 0x99	; 153
     5ae:	92 e0       	ldi	r25, 0x02	; 2
     5b0:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     5b4:	c9 c0       	rjmp	.+402    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"3 on"))))
     5b6:	ce 01       	movw	r24, r28
     5b8:	cd 96       	adiw	r24, 0x3d	; 61
     5ba:	6c e9       	ldi	r22, 0x9C	; 156
     5bc:	72 e0       	ldi	r23, 0x02	; 2
     5be:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     5c2:	89 2b       	or	r24, r25
     5c4:	69 f4       	brne	.+26     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
							{
								DIO_setPinValue(DIO_PINA2,DIO_HIGH);
     5c6:	61 e0       	ldi	r22, 0x01	; 1
     5c8:	82 e0       	ldi	r24, 0x02	; 2
     5ca:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(4,2);
     5ce:	62 e0       	ldi	r22, 0x02	; 2
     5d0:	84 e0       	ldi	r24, 0x04	; 4
     5d2:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("L3");
     5d6:	81 ea       	ldi	r24, 0xA1	; 161
     5d8:	92 e0       	ldi	r25, 0x02	; 2
     5da:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     5de:	b4 c0       	rjmp	.+360    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"4 on"))))
     5e0:	ce 01       	movw	r24, r28
     5e2:	cd 96       	adiw	r24, 0x3d	; 61
     5e4:	64 ea       	ldi	r22, 0xA4	; 164
     5e6:	72 e0       	ldi	r23, 0x02	; 2
     5e8:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     5ec:	89 2b       	or	r24, r25
     5ee:	69 f4       	brne	.+26     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
							{
								DIO_setPinValue(DIO_PINA3,DIO_HIGH);
     5f0:	61 e0       	ldi	r22, 0x01	; 1
     5f2:	83 e0       	ldi	r24, 0x03	; 3
     5f4:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(6,2);
     5f8:	62 e0       	ldi	r22, 0x02	; 2
     5fa:	86 e0       	ldi	r24, 0x06	; 6
     5fc:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("L4");
     600:	89 ea       	ldi	r24, 0xA9	; 169
     602:	92 e0       	ldi	r25, 0x02	; 2
     604:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     608:	9f c0       	rjmp	.+318    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"5 on"))))
     60a:	ce 01       	movw	r24, r28
     60c:	cd 96       	adiw	r24, 0x3d	; 61
     60e:	6c ea       	ldi	r22, 0xAC	; 172
     610:	72 e0       	ldi	r23, 0x02	; 2
     612:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     616:	89 2b       	or	r24, r25
     618:	69 f4       	brne	.+26     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
							{
								DIO_setPinValue(DIO_PINA4,DIO_HIGH);
     61a:	61 e0       	ldi	r22, 0x01	; 1
     61c:	84 e0       	ldi	r24, 0x04	; 4
     61e:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(8,2);
     622:	62 e0       	ldi	r22, 0x02	; 2
     624:	88 e0       	ldi	r24, 0x08	; 8
     626:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("L5");
     62a:	81 eb       	ldi	r24, 0xB1	; 177
     62c:	92 e0       	ldi	r25, 0x02	; 2
     62e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     632:	8a c0       	rjmp	.+276    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"1 off"))))
     634:	ce 01       	movw	r24, r28
     636:	cd 96       	adiw	r24, 0x3d	; 61
     638:	64 eb       	ldi	r22, 0xB4	; 180
     63a:	72 e0       	ldi	r23, 0x02	; 2
     63c:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     640:	89 2b       	or	r24, r25
     642:	69 f4       	brne	.+26     	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
							{
								DIO_setPinValue(DIO_PINA0,DIO_LOW);
     644:	60 e0       	ldi	r22, 0x00	; 0
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(0,2);
     64c:	62 e0       	ldi	r22, 0x02	; 2
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("  ");
     654:	8a eb       	ldi	r24, 0xBA	; 186
     656:	92 e0       	ldi	r25, 0x02	; 2
     658:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     65c:	75 c0       	rjmp	.+234    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"2 off"))))
     65e:	ce 01       	movw	r24, r28
     660:	cd 96       	adiw	r24, 0x3d	; 61
     662:	6d eb       	ldi	r22, 0xBD	; 189
     664:	72 e0       	ldi	r23, 0x02	; 2
     666:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     66a:	89 2b       	or	r24, r25
     66c:	69 f4       	brne	.+26     	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
							{
								DIO_setPinValue(DIO_PINA1,DIO_LOW);
     66e:	60 e0       	ldi	r22, 0x00	; 0
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(2,2);
     676:	62 e0       	ldi	r22, 0x02	; 2
     678:	82 e0       	ldi	r24, 0x02	; 2
     67a:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("  ");
     67e:	8a eb       	ldi	r24, 0xBA	; 186
     680:	92 e0       	ldi	r25, 0x02	; 2
     682:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     686:	60 c0       	rjmp	.+192    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"3 off"))))
     688:	ce 01       	movw	r24, r28
     68a:	cd 96       	adiw	r24, 0x3d	; 61
     68c:	63 ec       	ldi	r22, 0xC3	; 195
     68e:	72 e0       	ldi	r23, 0x02	; 2
     690:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     694:	89 2b       	or	r24, r25
     696:	69 f4       	brne	.+26     	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
							{
								DIO_setPinValue(DIO_PINA2,DIO_LOW);
     698:	60 e0       	ldi	r22, 0x00	; 0
     69a:	82 e0       	ldi	r24, 0x02	; 2
     69c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(4,2);
     6a0:	62 e0       	ldi	r22, 0x02	; 2
     6a2:	84 e0       	ldi	r24, 0x04	; 4
     6a4:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("  ");
     6a8:	8a eb       	ldi	r24, 0xBA	; 186
     6aa:	92 e0       	ldi	r25, 0x02	; 2
     6ac:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     6b0:	4b c0       	rjmp	.+150    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"4 off"))))
     6b2:	ce 01       	movw	r24, r28
     6b4:	cd 96       	adiw	r24, 0x3d	; 61
     6b6:	69 ec       	ldi	r22, 0xC9	; 201
     6b8:	72 e0       	ldi	r23, 0x02	; 2
     6ba:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     6be:	89 2b       	or	r24, r25
     6c0:	69 f4       	brne	.+26     	; 0x6dc <__EEPROM_REGION_LENGTH__+0x2dc>
							{
								DIO_setPinValue(DIO_PINA3,DIO_LOW);
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	83 e0       	ldi	r24, 0x03	; 3
     6c6:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(6,2);
     6ca:	62 e0       	ldi	r22, 0x02	; 2
     6cc:	86 e0       	ldi	r24, 0x06	; 6
     6ce:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("  ");
     6d2:	8a eb       	ldi	r24, 0xBA	; 186
     6d4:	92 e0       	ldi	r25, 0x02	; 2
     6d6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     6da:	36 c0       	rjmp	.+108    	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"5 off"))))
     6dc:	ce 01       	movw	r24, r28
     6de:	cd 96       	adiw	r24, 0x3d	; 61
     6e0:	6f ec       	ldi	r22, 0xCF	; 207
     6e2:	72 e0       	ldi	r23, 0x02	; 2
     6e4:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     6e8:	89 2b       	or	r24, r25
     6ea:	69 f4       	brne	.+26     	; 0x706 <__EEPROM_REGION_LENGTH__+0x306>
							{
								DIO_setPinValue(DIO_PINA4,DIO_LOW);
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	84 e0       	ldi	r24, 0x04	; 4
     6f0:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
								LCD_goto(8,2);
     6f4:	62 e0       	ldi	r22, 0x02	; 2
     6f6:	88 e0       	ldi	r24, 0x08	; 8
     6f8:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
								LCD_writeStr("  ");
     6fc:	8a eb       	ldi	r24, 0xBA	; 186
     6fe:	92 e0       	ldi	r25, 0x02	; 2
     700:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
     704:	21 c0       	rjmp	.+66     	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"open"))))
     706:	ce 01       	movw	r24, r28
     708:	cd 96       	adiw	r24, 0x3d	; 61
     70a:	65 ed       	ldi	r22, 0xD5	; 213
     70c:	72 e0       	ldi	r23, 0x02	; 2
     70e:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     712:	89 2b       	or	r24, r25
     714:	21 f4       	brne	.+8      	; 0x71e <__EEPROM_REGION_LENGTH__+0x31e>
							{
								Door(0);
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	0e 94 9f 0b 	call	0x173e	; 0x173e <Door>
     71c:	15 c0       	rjmp	.+42     	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"close"))))
     71e:	ce 01       	movw	r24, r28
     720:	cd 96       	adiw	r24, 0x3d	; 61
     722:	6a ed       	ldi	r22, 0xDA	; 218
     724:	72 e0       	ldi	r23, 0x02	; 2
     726:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     72a:	89 2b       	or	r24, r25
     72c:	21 f4       	brne	.+8      	; 0x736 <__EEPROM_REGION_LENGTH__+0x336>
							{
								Door(1);
     72e:	81 e0       	ldi	r24, 0x01	; 1
     730:	0e 94 9f 0b 	call	0x173e	; 0x173e <Door>
     734:	09 c0       	rjmp	.+18     	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							}
							else if ((!(strcmp(userchoice,"b"))))
     736:	ce 01       	movw	r24, r28
     738:	cd 96       	adiw	r24, 0x3d	; 61
     73a:	64 e4       	ldi	r22, 0x44	; 68
     73c:	71 e0       	ldi	r23, 0x01	; 1
     73e:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     742:	89 2b       	or	r24, r25
     744:	09 f4       	brne	.+2      	; 0x748 <__EEPROM_REGION_LENGTH__+0x348>
							{
								back=0;
     746:	19 86       	std	Y+9, r1	; 0x09

				else if((!(strcmp(userchoice,"e"))))
					{
						LCD_init();
						back=1;
						while (back==1)
     748:	89 85       	ldd	r24, Y+9	; 0x09
     74a:	81 30       	cpi	r24, 0x01	; 1
     74c:	09 f4       	brne	.+2      	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
     74e:	89 ce       	rjmp	.-750    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     750:	0e c0       	rjmp	.+28     	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
							{
								back=0;
							}
						}
					}
				else if ((!(strcmp(userchoice,"s"))))
     752:	ce 01       	movw	r24, r28
     754:	cd 96       	adiw	r24, 0x3d	; 61
     756:	60 ee       	ldi	r22, 0xE0	; 224
     758:	72 e0       	ldi	r23, 0x02	; 2
     75a:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <strcmp>
     75e:	89 2b       	or	r24, r25
     760:	11 f4       	brne	.+4      	; 0x766 <__EEPROM_REGION_LENGTH__+0x366>
					{
						flag1=0;
     762:	18 86       	std	Y+8, r1	; 0x08
     764:	04 c0       	rjmp	.+8      	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
					//UART_sendString("wrong input\r ");
					}
				else
					{
						UART_sendString("wrong input\r ");
     766:	82 ee       	ldi	r24, 0xE2	; 226
     768:	92 e0       	ldi	r25, 0x02	; 2
     76a:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
		if(adminLogin())
		{
			wrongPass=0;
			UART_sendString("Welcome Home.\r ");
			flag1=1;
		while (flag1)
     76e:	88 85       	ldd	r24, Y+8	; 0x08
     770:	88 23       	and	r24, r24
     772:	09 f0       	breq	.+2      	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
     774:	08 ce       	rjmp	.-1008   	; 0x386 <main+0x2f4>
     776:	f6 cd       	rjmp	.-1044   	; 0x364 <main+0x2d2>
					}
				}
			}
		else
		{
   			UART_sendString("Wrong Username or Password");
     778:	80 ef       	ldi	r24, 0xF0	; 240
     77a:	92 e0       	ldi	r25, 0x02	; 2
     77c:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
			wrongPass++;
     780:	8f 81       	ldd	r24, Y+7	; 0x07
     782:	8f 5f       	subi	r24, 0xFF	; 255
     784:	8f 83       	std	Y+7, r24	; 0x07
     786:	ee cd       	rjmp	.-1060   	; 0x364 <main+0x2d2>
		}
		}
		
else
{
	DIO_setPinValue(DIO_PINA2,DIO_HIGH);
     788:	61 e0       	ldi	r22, 0x01	; 1
     78a:	82 e0       	ldi	r24, 0x02	; 2
     78c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	aa ef       	ldi	r26, 0xFA	; 250
     796:	b4 e4       	ldi	r27, 0x44	; 68
     798:	8e 87       	std	Y+14, r24	; 0x0e
     79a:	9f 87       	std	Y+15, r25	; 0x0f
     79c:	a8 8b       	std	Y+16, r26	; 0x10
     79e:	b9 8b       	std	Y+17, r27	; 0x11

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7a0:	20 e0       	ldi	r18, 0x00	; 0
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	4a e7       	ldi	r20, 0x7A	; 122
     7a6:	55 e4       	ldi	r21, 0x45	; 69
     7a8:	6e 85       	ldd	r22, Y+14	; 0x0e
     7aa:	7f 85       	ldd	r23, Y+15	; 0x0f
     7ac:	88 89       	ldd	r24, Y+16	; 0x10
     7ae:	99 89       	ldd	r25, Y+17	; 0x11
     7b0:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     7b4:	dc 01       	movw	r26, r24
     7b6:	cb 01       	movw	r24, r22
     7b8:	8a a7       	std	Y+42, r24	; 0x2a
     7ba:	9b a7       	std	Y+43, r25	; 0x2b
     7bc:	ac a7       	std	Y+44, r26	; 0x2c
     7be:	bd a7       	std	Y+45, r27	; 0x2d
	if (__tmp < 1.0)
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	40 e8       	ldi	r20, 0x80	; 128
     7c6:	5f e3       	ldi	r21, 0x3F	; 63
     7c8:	6a a5       	ldd	r22, Y+42	; 0x2a
     7ca:	7b a5       	ldd	r23, Y+43	; 0x2b
     7cc:	8c a5       	ldd	r24, Y+44	; 0x2c
     7ce:	9d a5       	ldd	r25, Y+45	; 0x2d
     7d0:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     7d4:	88 23       	and	r24, r24
     7d6:	2c f4       	brge	.+10     	; 0x7e2 <__EEPROM_REGION_LENGTH__+0x3e2>
		__ticks = 1;
     7d8:	81 e0       	ldi	r24, 0x01	; 1
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	9f a7       	std	Y+47, r25	; 0x2f
     7de:	8e a7       	std	Y+46, r24	; 0x2e
     7e0:	3f c0       	rjmp	.+126    	; 0x860 <__stack+0x1>
	else if (__tmp > 65535)
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	3f ef       	ldi	r19, 0xFF	; 255
     7e6:	4f e7       	ldi	r20, 0x7F	; 127
     7e8:	57 e4       	ldi	r21, 0x47	; 71
     7ea:	6a a5       	ldd	r22, Y+42	; 0x2a
     7ec:	7b a5       	ldd	r23, Y+43	; 0x2b
     7ee:	8c a5       	ldd	r24, Y+44	; 0x2c
     7f0:	9d a5       	ldd	r25, Y+45	; 0x2d
     7f2:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     7f6:	18 16       	cp	r1, r24
     7f8:	4c f5       	brge	.+82     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	40 e2       	ldi	r20, 0x20	; 32
     800:	51 e4       	ldi	r21, 0x41	; 65
     802:	6e 85       	ldd	r22, Y+14	; 0x0e
     804:	7f 85       	ldd	r23, Y+15	; 0x0f
     806:	88 89       	ldd	r24, Y+16	; 0x10
     808:	99 89       	ldd	r25, Y+17	; 0x11
     80a:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     80e:	dc 01       	movw	r26, r24
     810:	cb 01       	movw	r24, r22
     812:	bc 01       	movw	r22, r24
     814:	cd 01       	movw	r24, r26
     816:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     81a:	dc 01       	movw	r26, r24
     81c:	cb 01       	movw	r24, r22
     81e:	9f a7       	std	Y+47, r25	; 0x2f
     820:	8e a7       	std	Y+46, r24	; 0x2e
     822:	0f c0       	rjmp	.+30     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
     824:	80 e9       	ldi	r24, 0x90	; 144
     826:	91 e0       	ldi	r25, 0x01	; 1
     828:	99 ab       	std	Y+49, r25	; 0x31
     82a:	88 ab       	std	Y+48, r24	; 0x30
     82c:	88 a9       	ldd	r24, Y+48	; 0x30
     82e:	99 a9       	ldd	r25, Y+49	; 0x31
     830:	01 97       	sbiw	r24, 0x01	; 1
     832:	f1 f7       	brne	.-4      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     834:	99 ab       	std	Y+49, r25	; 0x31
     836:	88 ab       	std	Y+48, r24	; 0x30
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     838:	8e a5       	ldd	r24, Y+46	; 0x2e
     83a:	9f a5       	ldd	r25, Y+47	; 0x2f
     83c:	01 97       	sbiw	r24, 0x01	; 1
     83e:	9f a7       	std	Y+47, r25	; 0x2f
     840:	8e a7       	std	Y+46, r24	; 0x2e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     842:	8e a5       	ldd	r24, Y+46	; 0x2e
     844:	9f a5       	ldd	r25, Y+47	; 0x2f
     846:	89 2b       	or	r24, r25
     848:	69 f7       	brne	.-38     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     84a:	14 c0       	rjmp	.+40     	; 0x874 <__stack+0x15>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     84c:	6a a5       	ldd	r22, Y+42	; 0x2a
     84e:	7b a5       	ldd	r23, Y+43	; 0x2b
     850:	8c a5       	ldd	r24, Y+44	; 0x2c
     852:	9d a5       	ldd	r25, Y+45	; 0x2d
     854:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     858:	dc 01       	movw	r26, r24
     85a:	cb 01       	movw	r24, r22
     85c:	9f a7       	std	Y+47, r25	; 0x2f
     85e:	8e a7       	std	Y+46, r24	; 0x2e
     860:	8e a5       	ldd	r24, Y+46	; 0x2e
     862:	9f a5       	ldd	r25, Y+47	; 0x2f
     864:	9b ab       	std	Y+51, r25	; 0x33
     866:	8a ab       	std	Y+50, r24	; 0x32
     868:	8a a9       	ldd	r24, Y+50	; 0x32
     86a:	9b a9       	ldd	r25, Y+51	; 0x33
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	f1 f7       	brne	.-4      	; 0x86c <__stack+0xd>
     870:	9b ab       	std	Y+51, r25	; 0x33
     872:	8a ab       	std	Y+50, r24	; 0x32
	_delay_ms(2000);
	DIO_setPinValue(DIO_PINA2,DIO_LOW);
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	82 e0       	ldi	r24, 0x02	; 2
     878:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
	wrongPass=0;
     87c:	1f 82       	std	Y+7, r1	; 0x07
}

}
     87e:	72 cd       	rjmp	.-1308   	; 0x364 <main+0x2d2>

00000880 <adminLogin>:
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	cd b7       	in	r28, 0x3d	; 61
     888:	de b7       	in	r29, 0x3e	; 62
     88a:	29 97       	sbiw	r28, 0x09	; 9
     88c:	0f b6       	in	r0, 0x3f	; 63
     88e:	f8 94       	cli
     890:	de bf       	out	0x3e, r29	; 62
     892:	0f be       	out	0x3f, r0	; 63
     894:	cd bf       	out	0x3d, r28	; 61
     896:	81 e1       	ldi	r24, 0x11	; 17
     898:	93 e0       	ldi	r25, 0x03	; 3
     89a:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     89e:	ce 01       	movw	r24, r28
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     8a6:	89 e1       	ldi	r24, 0x19	; 25
     8a8:	93 e0       	ldi	r25, 0x03	; 3
     8aa:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     8ae:	ce 01       	movw	r24, r28
     8b0:	06 96       	adiw	r24, 0x06	; 6
     8b2:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     8b6:	19 81       	ldd	r17, Y+1	; 0x01
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     8c0:	18 17       	cp	r17, r24
     8c2:	d1 f5       	brne	.+116    	; 0x938 <adminLogin+0xb8>
     8c4:	1a 81       	ldd	r17, Y+2	; 0x02
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     8ce:	18 17       	cp	r17, r24
     8d0:	99 f5       	brne	.+102    	; 0x938 <adminLogin+0xb8>
     8d2:	1b 81       	ldd	r17, Y+3	; 0x03
     8d4:	82 e0       	ldi	r24, 0x02	; 2
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     8dc:	18 17       	cp	r17, r24
     8de:	61 f5       	brne	.+88     	; 0x938 <adminLogin+0xb8>
     8e0:	1c 81       	ldd	r17, Y+4	; 0x04
     8e2:	83 e0       	ldi	r24, 0x03	; 3
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     8ea:	18 17       	cp	r17, r24
     8ec:	29 f5       	brne	.+74     	; 0x938 <adminLogin+0xb8>
     8ee:	1d 81       	ldd	r17, Y+5	; 0x05
     8f0:	84 e0       	ldi	r24, 0x04	; 4
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     8f8:	18 17       	cp	r17, r24
     8fa:	f1 f4       	brne	.+60     	; 0x938 <adminLogin+0xb8>
     8fc:	1e 81       	ldd	r17, Y+6	; 0x06
     8fe:	85 e0       	ldi	r24, 0x05	; 5
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     906:	18 17       	cp	r17, r24
     908:	b9 f4       	brne	.+46     	; 0x938 <adminLogin+0xb8>
     90a:	1f 81       	ldd	r17, Y+7	; 0x07
     90c:	86 e0       	ldi	r24, 0x06	; 6
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     914:	18 17       	cp	r17, r24
     916:	81 f4       	brne	.+32     	; 0x938 <adminLogin+0xb8>
     918:	18 85       	ldd	r17, Y+8	; 0x08
     91a:	87 e0       	ldi	r24, 0x07	; 7
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     922:	18 17       	cp	r17, r24
     924:	49 f4       	brne	.+18     	; 0x938 <adminLogin+0xb8>
     926:	19 85       	ldd	r17, Y+9	; 0x09
     928:	88 e0       	ldi	r24, 0x08	; 8
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     930:	18 17       	cp	r17, r24
     932:	11 f4       	brne	.+4      	; 0x938 <adminLogin+0xb8>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	01 c0       	rjmp	.+2      	; 0x93a <adminLogin+0xba>
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	29 96       	adiw	r28, 0x09	; 9
     93c:	0f b6       	in	r0, 0x3f	; 63
     93e:	f8 94       	cli
     940:	de bf       	out	0x3e, r29	; 62
     942:	0f be       	out	0x3f, r0	; 63
     944:	cd bf       	out	0x3d, r28	; 61
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	1f 91       	pop	r17
     94c:	08 95       	ret

0000094e <adminInput>:
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	00 d0       	rcall	.+0      	; 0x954 <adminInput+0x6>
     954:	00 d0       	rcall	.+0      	; 0x956 <adminInput+0x8>
     956:	cd b7       	in	r28, 0x3d	; 61
     958:	de b7       	in	r29, 0x3e	; 62
     95a:	9c 83       	std	Y+4, r25	; 0x04
     95c:	8b 83       	std	Y+3, r24	; 0x03
     95e:	19 82       	std	Y+1, r1	; 0x01
     960:	1a 82       	std	Y+2, r1	; 0x02
     962:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <__data_end>
     966:	18 c0       	rjmp	.+48     	; 0x998 <adminInput+0x4a>
     968:	0e 94 97 1a 	call	0x352e	; 0x352e <UART_receiveData>
     96c:	89 83       	std	Y+1, r24	; 0x01
     96e:	89 81       	ldd	r24, Y+1	; 0x01
     970:	8d 33       	cpi	r24, 0x3D	; 61
     972:	91 f0       	breq	.+36     	; 0x998 <adminInput+0x4a>
     974:	8a 81       	ldd	r24, Y+2	; 0x02
     976:	88 2f       	mov	r24, r24
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	2b 81       	ldd	r18, Y+3	; 0x03
     97c:	3c 81       	ldd	r19, Y+4	; 0x04
     97e:	82 0f       	add	r24, r18
     980:	93 1f       	adc	r25, r19
     982:	29 81       	ldd	r18, Y+1	; 0x01
     984:	fc 01       	movw	r30, r24
     986:	20 83       	st	Z, r18
     988:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
     98c:	8f 5f       	subi	r24, 0xFF	; 255
     98e:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <__data_end>
     992:	8a 81       	ldd	r24, Y+2	; 0x02
     994:	8f 5f       	subi	r24, 0xFF	; 255
     996:	8a 83       	std	Y+2, r24	; 0x02
     998:	89 81       	ldd	r24, Y+1	; 0x01
     99a:	8d 33       	cpi	r24, 0x3D	; 61
     99c:	29 f7       	brne	.-54     	; 0x968 <adminInput+0x1a>
     99e:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
     9a2:	88 2f       	mov	r24, r24
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	2b 81       	ldd	r18, Y+3	; 0x03
     9a8:	3c 81       	ldd	r19, Y+4	; 0x04
     9aa:	82 0f       	add	r24, r18
     9ac:	93 1f       	adc	r25, r19
     9ae:	fc 01       	movw	r30, r24
     9b0:	10 82       	st	Z, r1
     9b2:	8d e0       	ldi	r24, 0x0D	; 13
     9b4:	0e 94 4f 1a 	call	0x349e	; 0x349e <UART_sendData>
     9b8:	8a e0       	ldi	r24, 0x0A	; 10
     9ba:	0e 94 4f 1a 	call	0x349e	; 0x349e <UART_sendData>
     9be:	00 00       	nop
     9c0:	0f 90       	pop	r0
     9c2:	0f 90       	pop	r0
     9c4:	0f 90       	pop	r0
     9c6:	0f 90       	pop	r0
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	08 95       	ret

000009ce <addOnlineUser>:
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	cd b7       	in	r28, 0x3d	; 61
     9d4:	de b7       	in	r29, 0x3e	; 62
     9d6:	eb 97       	sbiw	r28, 0x3b	; 59
     9d8:	0f b6       	in	r0, 0x3f	; 63
     9da:	f8 94       	cli
     9dc:	de bf       	out	0x3e, r29	; 62
     9de:	0f be       	out	0x3f, r0	; 63
     9e0:	cd bf       	out	0x3d, r28	; 61
     9e2:	19 82       	std	Y+1, r1	; 0x01
     9e4:	1a 82       	std	Y+2, r1	; 0x02
     9e6:	1b 82       	std	Y+3, r1	; 0x03
     9e8:	86 e2       	ldi	r24, 0x26	; 38
     9ea:	93 e0       	ldi	r25, 0x03	; 3
     9ec:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     9f0:	ce 01       	movw	r24, r28
     9f2:	88 96       	adiw	r24, 0x28	; 40
     9f4:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     9f8:	85 e6       	ldi	r24, 0x65	; 101
     9fa:	89 83       	std	Y+1, r24	; 0x01
     9fc:	ad c0       	rjmp	.+346    	; 0xb58 <addOnlineUser+0x18a>
     9fe:	89 81       	ldd	r24, Y+1	; 0x01
     a00:	88 2f       	mov	r24, r24
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     a08:	8f 3f       	cpi	r24, 0xFF	; 255
     a0a:	09 f0       	breq	.+2      	; 0xa0e <addOnlineUser+0x40>
     a0c:	a2 c0       	rjmp	.+324    	; 0xb52 <addOnlineUser+0x184>
     a0e:	89 81       	ldd	r24, Y+1	; 0x01
     a10:	8a 83       	std	Y+2, r24	; 0x02
     a12:	1d 82       	std	Y+5, r1	; 0x05
     a14:	1c 82       	std	Y+4, r1	; 0x04
     a16:	89 81       	ldd	r24, Y+1	; 0x01
     a18:	88 2f       	mov	r24, r24
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	9f 83       	std	Y+7, r25	; 0x07
     a1e:	8e 83       	std	Y+6, r24	; 0x06
     a20:	8a c0       	rjmp	.+276    	; 0xb36 <addOnlineUser+0x168>
     a22:	4e 81       	ldd	r20, Y+6	; 0x06
     a24:	5f 81       	ldd	r21, Y+7	; 0x07
     a26:	9e 01       	movw	r18, r28
     a28:	28 5d       	subi	r18, 0xD8	; 216
     a2a:	3f 4f       	sbci	r19, 0xFF	; 255
     a2c:	8c 81       	ldd	r24, Y+4	; 0x04
     a2e:	9d 81       	ldd	r25, Y+5	; 0x05
     a30:	82 0f       	add	r24, r18
     a32:	93 1f       	adc	r25, r19
     a34:	fc 01       	movw	r30, r24
     a36:	80 81       	ld	r24, Z
     a38:	ba 01       	movw	r22, r20
     a3a:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	a0 ea       	ldi	r26, 0xA0	; 160
     a44:	b1 e4       	ldi	r27, 0x41	; 65
     a46:	88 8b       	std	Y+16, r24	; 0x10
     a48:	99 8b       	std	Y+17, r25	; 0x11
     a4a:	aa 8b       	std	Y+18, r26	; 0x12
     a4c:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a4e:	20 e0       	ldi	r18, 0x00	; 0
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	4a e7       	ldi	r20, 0x7A	; 122
     a54:	55 e4       	ldi	r21, 0x45	; 69
     a56:	68 89       	ldd	r22, Y+16	; 0x10
     a58:	79 89       	ldd	r23, Y+17	; 0x11
     a5a:	8a 89       	ldd	r24, Y+18	; 0x12
     a5c:	9b 89       	ldd	r25, Y+19	; 0x13
     a5e:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     a62:	dc 01       	movw	r26, r24
     a64:	cb 01       	movw	r24, r22
     a66:	8c 8b       	std	Y+20, r24	; 0x14
     a68:	9d 8b       	std	Y+21, r25	; 0x15
     a6a:	ae 8b       	std	Y+22, r26	; 0x16
     a6c:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     a6e:	20 e0       	ldi	r18, 0x00	; 0
     a70:	30 e0       	ldi	r19, 0x00	; 0
     a72:	40 e8       	ldi	r20, 0x80	; 128
     a74:	5f e3       	ldi	r21, 0x3F	; 63
     a76:	6c 89       	ldd	r22, Y+20	; 0x14
     a78:	7d 89       	ldd	r23, Y+21	; 0x15
     a7a:	8e 89       	ldd	r24, Y+22	; 0x16
     a7c:	9f 89       	ldd	r25, Y+23	; 0x17
     a7e:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     a82:	88 23       	and	r24, r24
     a84:	2c f4       	brge	.+10     	; 0xa90 <addOnlineUser+0xc2>
		__ticks = 1;
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	99 8f       	std	Y+25, r25	; 0x19
     a8c:	88 8f       	std	Y+24, r24	; 0x18
     a8e:	3f c0       	rjmp	.+126    	; 0xb0e <addOnlineUser+0x140>
	else if (__tmp > 65535)
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	3f ef       	ldi	r19, 0xFF	; 255
     a94:	4f e7       	ldi	r20, 0x7F	; 127
     a96:	57 e4       	ldi	r21, 0x47	; 71
     a98:	6c 89       	ldd	r22, Y+20	; 0x14
     a9a:	7d 89       	ldd	r23, Y+21	; 0x15
     a9c:	8e 89       	ldd	r24, Y+22	; 0x16
     a9e:	9f 89       	ldd	r25, Y+23	; 0x17
     aa0:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     aa4:	18 16       	cp	r1, r24
     aa6:	4c f5       	brge	.+82     	; 0xafa <addOnlineUser+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e2       	ldi	r20, 0x20	; 32
     aae:	51 e4       	ldi	r21, 0x41	; 65
     ab0:	68 89       	ldd	r22, Y+16	; 0x10
     ab2:	79 89       	ldd	r23, Y+17	; 0x11
     ab4:	8a 89       	ldd	r24, Y+18	; 0x12
     ab6:	9b 89       	ldd	r25, Y+19	; 0x13
     ab8:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     abc:	dc 01       	movw	r26, r24
     abe:	cb 01       	movw	r24, r22
     ac0:	bc 01       	movw	r22, r24
     ac2:	cd 01       	movw	r24, r26
     ac4:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     ac8:	dc 01       	movw	r26, r24
     aca:	cb 01       	movw	r24, r22
     acc:	99 8f       	std	Y+25, r25	; 0x19
     ace:	88 8f       	std	Y+24, r24	; 0x18
     ad0:	0f c0       	rjmp	.+30     	; 0xaf0 <addOnlineUser+0x122>
     ad2:	80 e9       	ldi	r24, 0x90	; 144
     ad4:	91 e0       	ldi	r25, 0x01	; 1
     ad6:	9b 8f       	std	Y+27, r25	; 0x1b
     ad8:	8a 8f       	std	Y+26, r24	; 0x1a
     ada:	8a 8d       	ldd	r24, Y+26	; 0x1a
     adc:	9b 8d       	ldd	r25, Y+27	; 0x1b
     ade:	01 97       	sbiw	r24, 0x01	; 1
     ae0:	f1 f7       	brne	.-4      	; 0xade <addOnlineUser+0x110>
     ae2:	9b 8f       	std	Y+27, r25	; 0x1b
     ae4:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ae6:	88 8d       	ldd	r24, Y+24	; 0x18
     ae8:	99 8d       	ldd	r25, Y+25	; 0x19
     aea:	01 97       	sbiw	r24, 0x01	; 1
     aec:	99 8f       	std	Y+25, r25	; 0x19
     aee:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     af0:	88 8d       	ldd	r24, Y+24	; 0x18
     af2:	99 8d       	ldd	r25, Y+25	; 0x19
     af4:	89 2b       	or	r24, r25
     af6:	69 f7       	brne	.-38     	; 0xad2 <addOnlineUser+0x104>
     af8:	14 c0       	rjmp	.+40     	; 0xb22 <addOnlineUser+0x154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     afa:	6c 89       	ldd	r22, Y+20	; 0x14
     afc:	7d 89       	ldd	r23, Y+21	; 0x15
     afe:	8e 89       	ldd	r24, Y+22	; 0x16
     b00:	9f 89       	ldd	r25, Y+23	; 0x17
     b02:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     b06:	dc 01       	movw	r26, r24
     b08:	cb 01       	movw	r24, r22
     b0a:	99 8f       	std	Y+25, r25	; 0x19
     b0c:	88 8f       	std	Y+24, r24	; 0x18
     b0e:	88 8d       	ldd	r24, Y+24	; 0x18
     b10:	99 8d       	ldd	r25, Y+25	; 0x19
     b12:	9d 8f       	std	Y+29, r25	; 0x1d
     b14:	8c 8f       	std	Y+28, r24	; 0x1c
     b16:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b18:	9d 8d       	ldd	r25, Y+29	; 0x1d
     b1a:	01 97       	sbiw	r24, 0x01	; 1
     b1c:	f1 f7       	brne	.-4      	; 0xb1a <addOnlineUser+0x14c>
     b1e:	9d 8f       	std	Y+29, r25	; 0x1d
     b20:	8c 8f       	std	Y+28, r24	; 0x1c
     b22:	8e 81       	ldd	r24, Y+6	; 0x06
     b24:	9f 81       	ldd	r25, Y+7	; 0x07
     b26:	01 96       	adiw	r24, 0x01	; 1
     b28:	9f 83       	std	Y+7, r25	; 0x07
     b2a:	8e 83       	std	Y+6, r24	; 0x06
     b2c:	8c 81       	ldd	r24, Y+4	; 0x04
     b2e:	9d 81       	ldd	r25, Y+5	; 0x05
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	9d 83       	std	Y+5, r25	; 0x05
     b34:	8c 83       	std	Y+4, r24	; 0x04
     b36:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
     b3a:	28 2f       	mov	r18, r24
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	8c 81       	ldd	r24, Y+4	; 0x04
     b40:	9d 81       	ldd	r25, Y+5	; 0x05
     b42:	82 17       	cp	r24, r18
     b44:	93 07       	cpc	r25, r19
     b46:	0c f4       	brge	.+2      	; 0xb4a <addOnlineUser+0x17c>
     b48:	6c cf       	rjmp	.-296    	; 0xa22 <addOnlineUser+0x54>
     b4a:	8b 81       	ldd	r24, Y+3	; 0x03
     b4c:	8f 5f       	subi	r24, 0xFF	; 255
     b4e:	8b 83       	std	Y+3, r24	; 0x03
     b50:	07 c0       	rjmp	.+14     	; 0xb60 <addOnlineUser+0x192>
     b52:	89 81       	ldd	r24, Y+1	; 0x01
     b54:	8c 5e       	subi	r24, 0xEC	; 236
     b56:	89 83       	std	Y+1, r24	; 0x01
     b58:	89 81       	ldd	r24, Y+1	; 0x01
     b5a:	88 3c       	cpi	r24, 0xC8	; 200
     b5c:	08 f4       	brcc	.+2      	; 0xb60 <addOnlineUser+0x192>
     b5e:	4f cf       	rjmp	.-354    	; 0x9fe <addOnlineUser+0x30>
     b60:	84 e3       	ldi	r24, 0x34	; 52
     b62:	93 e0       	ldi	r25, 0x03	; 3
     b64:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     b68:	ce 01       	movw	r24, r28
     b6a:	c2 96       	adiw	r24, 0x32	; 50
     b6c:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     b70:	8a 81       	ldd	r24, Y+2	; 0x02
     b72:	86 5f       	subi	r24, 0xF6	; 246
     b74:	8a 83       	std	Y+2, r24	; 0x02
     b76:	19 86       	std	Y+9, r1	; 0x09
     b78:	18 86       	std	Y+8, r1	; 0x08
     b7a:	8a 81       	ldd	r24, Y+2	; 0x02
     b7c:	88 2f       	mov	r24, r24
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	9b 87       	std	Y+11, r25	; 0x0b
     b82:	8a 87       	std	Y+10, r24	; 0x0a
     b84:	8a c0       	rjmp	.+276    	; 0xc9a <addOnlineUser+0x2cc>
     b86:	4a 85       	ldd	r20, Y+10	; 0x0a
     b88:	5b 85       	ldd	r21, Y+11	; 0x0b
     b8a:	9e 01       	movw	r18, r28
     b8c:	2e 5c       	subi	r18, 0xCE	; 206
     b8e:	3f 4f       	sbci	r19, 0xFF	; 255
     b90:	88 85       	ldd	r24, Y+8	; 0x08
     b92:	99 85       	ldd	r25, Y+9	; 0x09
     b94:	82 0f       	add	r24, r18
     b96:	93 1f       	adc	r25, r19
     b98:	fc 01       	movw	r30, r24
     b9a:	80 81       	ld	r24, Z
     b9c:	ba 01       	movw	r22, r20
     b9e:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	a0 ea       	ldi	r26, 0xA0	; 160
     ba8:	b1 e4       	ldi	r27, 0x41	; 65
     baa:	8c 87       	std	Y+12, r24	; 0x0c
     bac:	9d 87       	std	Y+13, r25	; 0x0d
     bae:	ae 87       	std	Y+14, r26	; 0x0e
     bb0:	bf 87       	std	Y+15, r27	; 0x0f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     bb2:	20 e0       	ldi	r18, 0x00	; 0
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	4a e7       	ldi	r20, 0x7A	; 122
     bb8:	55 e4       	ldi	r21, 0x45	; 69
     bba:	6c 85       	ldd	r22, Y+12	; 0x0c
     bbc:	7d 85       	ldd	r23, Y+13	; 0x0d
     bbe:	8e 85       	ldd	r24, Y+14	; 0x0e
     bc0:	9f 85       	ldd	r25, Y+15	; 0x0f
     bc2:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     bc6:	dc 01       	movw	r26, r24
     bc8:	cb 01       	movw	r24, r22
     bca:	8e 8f       	std	Y+30, r24	; 0x1e
     bcc:	9f 8f       	std	Y+31, r25	; 0x1f
     bce:	a8 a3       	std	Y+32, r26	; 0x20
     bd0:	b9 a3       	std	Y+33, r27	; 0x21
	if (__tmp < 1.0)
     bd2:	20 e0       	ldi	r18, 0x00	; 0
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	40 e8       	ldi	r20, 0x80	; 128
     bd8:	5f e3       	ldi	r21, 0x3F	; 63
     bda:	6e 8d       	ldd	r22, Y+30	; 0x1e
     bdc:	7f 8d       	ldd	r23, Y+31	; 0x1f
     bde:	88 a1       	ldd	r24, Y+32	; 0x20
     be0:	99 a1       	ldd	r25, Y+33	; 0x21
     be2:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     be6:	88 23       	and	r24, r24
     be8:	2c f4       	brge	.+10     	; 0xbf4 <addOnlineUser+0x226>
		__ticks = 1;
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	9b a3       	std	Y+35, r25	; 0x23
     bf0:	8a a3       	std	Y+34, r24	; 0x22
     bf2:	3f c0       	rjmp	.+126    	; 0xc72 <addOnlineUser+0x2a4>
	else if (__tmp > 65535)
     bf4:	20 e0       	ldi	r18, 0x00	; 0
     bf6:	3f ef       	ldi	r19, 0xFF	; 255
     bf8:	4f e7       	ldi	r20, 0x7F	; 127
     bfa:	57 e4       	ldi	r21, 0x47	; 71
     bfc:	6e 8d       	ldd	r22, Y+30	; 0x1e
     bfe:	7f 8d       	ldd	r23, Y+31	; 0x1f
     c00:	88 a1       	ldd	r24, Y+32	; 0x20
     c02:	99 a1       	ldd	r25, Y+33	; 0x21
     c04:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     c08:	18 16       	cp	r1, r24
     c0a:	4c f5       	brge	.+82     	; 0xc5e <addOnlineUser+0x290>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	40 e2       	ldi	r20, 0x20	; 32
     c12:	51 e4       	ldi	r21, 0x41	; 65
     c14:	6c 85       	ldd	r22, Y+12	; 0x0c
     c16:	7d 85       	ldd	r23, Y+13	; 0x0d
     c18:	8e 85       	ldd	r24, Y+14	; 0x0e
     c1a:	9f 85       	ldd	r25, Y+15	; 0x0f
     c1c:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     c20:	dc 01       	movw	r26, r24
     c22:	cb 01       	movw	r24, r22
     c24:	bc 01       	movw	r22, r24
     c26:	cd 01       	movw	r24, r26
     c28:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     c2c:	dc 01       	movw	r26, r24
     c2e:	cb 01       	movw	r24, r22
     c30:	9b a3       	std	Y+35, r25	; 0x23
     c32:	8a a3       	std	Y+34, r24	; 0x22
     c34:	0f c0       	rjmp	.+30     	; 0xc54 <addOnlineUser+0x286>
     c36:	80 e9       	ldi	r24, 0x90	; 144
     c38:	91 e0       	ldi	r25, 0x01	; 1
     c3a:	9d a3       	std	Y+37, r25	; 0x25
     c3c:	8c a3       	std	Y+36, r24	; 0x24
     c3e:	8c a1       	ldd	r24, Y+36	; 0x24
     c40:	9d a1       	ldd	r25, Y+37	; 0x25
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	f1 f7       	brne	.-4      	; 0xc42 <addOnlineUser+0x274>
     c46:	9d a3       	std	Y+37, r25	; 0x25
     c48:	8c a3       	std	Y+36, r24	; 0x24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c4a:	8a a1       	ldd	r24, Y+34	; 0x22
     c4c:	9b a1       	ldd	r25, Y+35	; 0x23
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	9b a3       	std	Y+35, r25	; 0x23
     c52:	8a a3       	std	Y+34, r24	; 0x22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c54:	8a a1       	ldd	r24, Y+34	; 0x22
     c56:	9b a1       	ldd	r25, Y+35	; 0x23
     c58:	89 2b       	or	r24, r25
     c5a:	69 f7       	brne	.-38     	; 0xc36 <addOnlineUser+0x268>
     c5c:	14 c0       	rjmp	.+40     	; 0xc86 <addOnlineUser+0x2b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c5e:	6e 8d       	ldd	r22, Y+30	; 0x1e
     c60:	7f 8d       	ldd	r23, Y+31	; 0x1f
     c62:	88 a1       	ldd	r24, Y+32	; 0x20
     c64:	99 a1       	ldd	r25, Y+33	; 0x21
     c66:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     c6a:	dc 01       	movw	r26, r24
     c6c:	cb 01       	movw	r24, r22
     c6e:	9b a3       	std	Y+35, r25	; 0x23
     c70:	8a a3       	std	Y+34, r24	; 0x22
     c72:	8a a1       	ldd	r24, Y+34	; 0x22
     c74:	9b a1       	ldd	r25, Y+35	; 0x23
     c76:	9f a3       	std	Y+39, r25	; 0x27
     c78:	8e a3       	std	Y+38, r24	; 0x26
     c7a:	8e a1       	ldd	r24, Y+38	; 0x26
     c7c:	9f a1       	ldd	r25, Y+39	; 0x27
     c7e:	01 97       	sbiw	r24, 0x01	; 1
     c80:	f1 f7       	brne	.-4      	; 0xc7e <addOnlineUser+0x2b0>
     c82:	9f a3       	std	Y+39, r25	; 0x27
     c84:	8e a3       	std	Y+38, r24	; 0x26
     c86:	8a 85       	ldd	r24, Y+10	; 0x0a
     c88:	9b 85       	ldd	r25, Y+11	; 0x0b
     c8a:	01 96       	adiw	r24, 0x01	; 1
     c8c:	9b 87       	std	Y+11, r25	; 0x0b
     c8e:	8a 87       	std	Y+10, r24	; 0x0a
     c90:	88 85       	ldd	r24, Y+8	; 0x08
     c92:	99 85       	ldd	r25, Y+9	; 0x09
     c94:	01 96       	adiw	r24, 0x01	; 1
     c96:	99 87       	std	Y+9, r25	; 0x09
     c98:	88 87       	std	Y+8, r24	; 0x08
     c9a:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
     c9e:	28 2f       	mov	r18, r24
     ca0:	30 e0       	ldi	r19, 0x00	; 0
     ca2:	88 85       	ldd	r24, Y+8	; 0x08
     ca4:	99 85       	ldd	r25, Y+9	; 0x09
     ca6:	82 17       	cp	r24, r18
     ca8:	93 07       	cpc	r25, r19
     caa:	0c f4       	brge	.+2      	; 0xcae <addOnlineUser+0x2e0>
     cac:	6c cf       	rjmp	.-296    	; 0xb86 <addOnlineUser+0x1b8>
     cae:	8b 81       	ldd	r24, Y+3	; 0x03
     cb0:	eb 96       	adiw	r28, 0x3b	; 59
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	f8 94       	cli
     cb6:	de bf       	out	0x3e, r29	; 62
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	df 91       	pop	r29
     cbe:	cf 91       	pop	r28
     cc0:	08 95       	ret

00000cc2 <addOfflineUser>:
     cc2:	cf 93       	push	r28
     cc4:	df 93       	push	r29
     cc6:	cd b7       	in	r28, 0x3d	; 61
     cc8:	de b7       	in	r29, 0x3e	; 62
     cca:	eb 97       	sbiw	r28, 0x3b	; 59
     ccc:	0f b6       	in	r0, 0x3f	; 63
     cce:	f8 94       	cli
     cd0:	de bf       	out	0x3e, r29	; 62
     cd2:	0f be       	out	0x3f, r0	; 63
     cd4:	cd bf       	out	0x3d, r28	; 61
     cd6:	19 82       	std	Y+1, r1	; 0x01
     cd8:	1a 82       	std	Y+2, r1	; 0x02
     cda:	1b 82       	std	Y+3, r1	; 0x03
     cdc:	87 e4       	ldi	r24, 0x47	; 71
     cde:	93 e0       	ldi	r25, 0x03	; 3
     ce0:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     ce4:	ce 01       	movw	r24, r28
     ce6:	88 96       	adiw	r24, 0x28	; 40
     ce8:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     cec:	8b e0       	ldi	r24, 0x0B	; 11
     cee:	89 83       	std	Y+1, r24	; 0x01
     cf0:	ad c0       	rjmp	.+346    	; 0xe4c <addOfflineUser+0x18a>
     cf2:	89 81       	ldd	r24, Y+1	; 0x01
     cf4:	88 2f       	mov	r24, r24
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     cfc:	8f 3f       	cpi	r24, 0xFF	; 255
     cfe:	09 f0       	breq	.+2      	; 0xd02 <addOfflineUser+0x40>
     d00:	a2 c0       	rjmp	.+324    	; 0xe46 <addOfflineUser+0x184>
     d02:	89 81       	ldd	r24, Y+1	; 0x01
     d04:	8a 83       	std	Y+2, r24	; 0x02
     d06:	1d 82       	std	Y+5, r1	; 0x05
     d08:	1c 82       	std	Y+4, r1	; 0x04
     d0a:	89 81       	ldd	r24, Y+1	; 0x01
     d0c:	88 2f       	mov	r24, r24
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	9f 83       	std	Y+7, r25	; 0x07
     d12:	8e 83       	std	Y+6, r24	; 0x06
     d14:	8a c0       	rjmp	.+276    	; 0xe2a <addOfflineUser+0x168>
     d16:	4e 81       	ldd	r20, Y+6	; 0x06
     d18:	5f 81       	ldd	r21, Y+7	; 0x07
     d1a:	9e 01       	movw	r18, r28
     d1c:	28 5d       	subi	r18, 0xD8	; 216
     d1e:	3f 4f       	sbci	r19, 0xFF	; 255
     d20:	8c 81       	ldd	r24, Y+4	; 0x04
     d22:	9d 81       	ldd	r25, Y+5	; 0x05
     d24:	82 0f       	add	r24, r18
     d26:	93 1f       	adc	r25, r19
     d28:	fc 01       	movw	r30, r24
     d2a:	80 81       	ld	r24, Z
     d2c:	ba 01       	movw	r22, r20
     d2e:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 ea       	ldi	r26, 0xA0	; 160
     d38:	b1 e4       	ldi	r27, 0x41	; 65
     d3a:	88 8b       	std	Y+16, r24	; 0x10
     d3c:	99 8b       	std	Y+17, r25	; 0x11
     d3e:	aa 8b       	std	Y+18, r26	; 0x12
     d40:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	4a e7       	ldi	r20, 0x7A	; 122
     d48:	55 e4       	ldi	r21, 0x45	; 69
     d4a:	68 89       	ldd	r22, Y+16	; 0x10
     d4c:	79 89       	ldd	r23, Y+17	; 0x11
     d4e:	8a 89       	ldd	r24, Y+18	; 0x12
     d50:	9b 89       	ldd	r25, Y+19	; 0x13
     d52:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     d56:	dc 01       	movw	r26, r24
     d58:	cb 01       	movw	r24, r22
     d5a:	8c 8b       	std	Y+20, r24	; 0x14
     d5c:	9d 8b       	std	Y+21, r25	; 0x15
     d5e:	ae 8b       	std	Y+22, r26	; 0x16
     d60:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	40 e8       	ldi	r20, 0x80	; 128
     d68:	5f e3       	ldi	r21, 0x3F	; 63
     d6a:	6c 89       	ldd	r22, Y+20	; 0x14
     d6c:	7d 89       	ldd	r23, Y+21	; 0x15
     d6e:	8e 89       	ldd	r24, Y+22	; 0x16
     d70:	9f 89       	ldd	r25, Y+23	; 0x17
     d72:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     d76:	88 23       	and	r24, r24
     d78:	2c f4       	brge	.+10     	; 0xd84 <addOfflineUser+0xc2>
		__ticks = 1;
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	99 8f       	std	Y+25, r25	; 0x19
     d80:	88 8f       	std	Y+24, r24	; 0x18
     d82:	3f c0       	rjmp	.+126    	; 0xe02 <addOfflineUser+0x140>
	else if (__tmp > 65535)
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	3f ef       	ldi	r19, 0xFF	; 255
     d88:	4f e7       	ldi	r20, 0x7F	; 127
     d8a:	57 e4       	ldi	r21, 0x47	; 71
     d8c:	6c 89       	ldd	r22, Y+20	; 0x14
     d8e:	7d 89       	ldd	r23, Y+21	; 0x15
     d90:	8e 89       	ldd	r24, Y+22	; 0x16
     d92:	9f 89       	ldd	r25, Y+23	; 0x17
     d94:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     d98:	18 16       	cp	r1, r24
     d9a:	4c f5       	brge	.+82     	; 0xdee <addOfflineUser+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	40 e2       	ldi	r20, 0x20	; 32
     da2:	51 e4       	ldi	r21, 0x41	; 65
     da4:	68 89       	ldd	r22, Y+16	; 0x10
     da6:	79 89       	ldd	r23, Y+17	; 0x11
     da8:	8a 89       	ldd	r24, Y+18	; 0x12
     daa:	9b 89       	ldd	r25, Y+19	; 0x13
     dac:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     db0:	dc 01       	movw	r26, r24
     db2:	cb 01       	movw	r24, r22
     db4:	bc 01       	movw	r22, r24
     db6:	cd 01       	movw	r24, r26
     db8:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     dbc:	dc 01       	movw	r26, r24
     dbe:	cb 01       	movw	r24, r22
     dc0:	99 8f       	std	Y+25, r25	; 0x19
     dc2:	88 8f       	std	Y+24, r24	; 0x18
     dc4:	0f c0       	rjmp	.+30     	; 0xde4 <addOfflineUser+0x122>
     dc6:	80 e9       	ldi	r24, 0x90	; 144
     dc8:	91 e0       	ldi	r25, 0x01	; 1
     dca:	9b 8f       	std	Y+27, r25	; 0x1b
     dcc:	8a 8f       	std	Y+26, r24	; 0x1a
     dce:	8a 8d       	ldd	r24, Y+26	; 0x1a
     dd0:	9b 8d       	ldd	r25, Y+27	; 0x1b
     dd2:	01 97       	sbiw	r24, 0x01	; 1
     dd4:	f1 f7       	brne	.-4      	; 0xdd2 <addOfflineUser+0x110>
     dd6:	9b 8f       	std	Y+27, r25	; 0x1b
     dd8:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dda:	88 8d       	ldd	r24, Y+24	; 0x18
     ddc:	99 8d       	ldd	r25, Y+25	; 0x19
     dde:	01 97       	sbiw	r24, 0x01	; 1
     de0:	99 8f       	std	Y+25, r25	; 0x19
     de2:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de4:	88 8d       	ldd	r24, Y+24	; 0x18
     de6:	99 8d       	ldd	r25, Y+25	; 0x19
     de8:	89 2b       	or	r24, r25
     dea:	69 f7       	brne	.-38     	; 0xdc6 <addOfflineUser+0x104>
     dec:	14 c0       	rjmp	.+40     	; 0xe16 <addOfflineUser+0x154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dee:	6c 89       	ldd	r22, Y+20	; 0x14
     df0:	7d 89       	ldd	r23, Y+21	; 0x15
     df2:	8e 89       	ldd	r24, Y+22	; 0x16
     df4:	9f 89       	ldd	r25, Y+23	; 0x17
     df6:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     dfa:	dc 01       	movw	r26, r24
     dfc:	cb 01       	movw	r24, r22
     dfe:	99 8f       	std	Y+25, r25	; 0x19
     e00:	88 8f       	std	Y+24, r24	; 0x18
     e02:	88 8d       	ldd	r24, Y+24	; 0x18
     e04:	99 8d       	ldd	r25, Y+25	; 0x19
     e06:	9d 8f       	std	Y+29, r25	; 0x1d
     e08:	8c 8f       	std	Y+28, r24	; 0x1c
     e0a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     e0c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	f1 f7       	brne	.-4      	; 0xe0e <addOfflineUser+0x14c>
     e12:	9d 8f       	std	Y+29, r25	; 0x1d
     e14:	8c 8f       	std	Y+28, r24	; 0x1c
     e16:	8e 81       	ldd	r24, Y+6	; 0x06
     e18:	9f 81       	ldd	r25, Y+7	; 0x07
     e1a:	01 96       	adiw	r24, 0x01	; 1
     e1c:	9f 83       	std	Y+7, r25	; 0x07
     e1e:	8e 83       	std	Y+6, r24	; 0x06
     e20:	8c 81       	ldd	r24, Y+4	; 0x04
     e22:	9d 81       	ldd	r25, Y+5	; 0x05
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	9d 83       	std	Y+5, r25	; 0x05
     e28:	8c 83       	std	Y+4, r24	; 0x04
     e2a:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
     e2e:	28 2f       	mov	r18, r24
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	8c 81       	ldd	r24, Y+4	; 0x04
     e34:	9d 81       	ldd	r25, Y+5	; 0x05
     e36:	82 17       	cp	r24, r18
     e38:	93 07       	cpc	r25, r19
     e3a:	0c f4       	brge	.+2      	; 0xe3e <addOfflineUser+0x17c>
     e3c:	6c cf       	rjmp	.-296    	; 0xd16 <addOfflineUser+0x54>
     e3e:	8b 81       	ldd	r24, Y+3	; 0x03
     e40:	8f 5f       	subi	r24, 0xFF	; 255
     e42:	8b 83       	std	Y+3, r24	; 0x03
     e44:	07 c0       	rjmp	.+14     	; 0xe54 <addOfflineUser+0x192>
     e46:	89 81       	ldd	r24, Y+1	; 0x01
     e48:	8c 5e       	subi	r24, 0xEC	; 236
     e4a:	89 83       	std	Y+1, r24	; 0x01
     e4c:	89 81       	ldd	r24, Y+1	; 0x01
     e4e:	84 36       	cpi	r24, 0x64	; 100
     e50:	08 f4       	brcc	.+2      	; 0xe54 <addOfflineUser+0x192>
     e52:	4f cf       	rjmp	.-354    	; 0xcf2 <addOfflineUser+0x30>
     e54:	86 e5       	ldi	r24, 0x56	; 86
     e56:	93 e0       	ldi	r25, 0x03	; 3
     e58:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     e5c:	ce 01       	movw	r24, r28
     e5e:	c2 96       	adiw	r24, 0x32	; 50
     e60:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     e64:	8a 81       	ldd	r24, Y+2	; 0x02
     e66:	86 5f       	subi	r24, 0xF6	; 246
     e68:	8a 83       	std	Y+2, r24	; 0x02
     e6a:	19 86       	std	Y+9, r1	; 0x09
     e6c:	18 86       	std	Y+8, r1	; 0x08
     e6e:	8a 81       	ldd	r24, Y+2	; 0x02
     e70:	88 2f       	mov	r24, r24
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	9b 87       	std	Y+11, r25	; 0x0b
     e76:	8a 87       	std	Y+10, r24	; 0x0a
     e78:	8a c0       	rjmp	.+276    	; 0xf8e <addOfflineUser+0x2cc>
     e7a:	4a 85       	ldd	r20, Y+10	; 0x0a
     e7c:	5b 85       	ldd	r21, Y+11	; 0x0b
     e7e:	9e 01       	movw	r18, r28
     e80:	2e 5c       	subi	r18, 0xCE	; 206
     e82:	3f 4f       	sbci	r19, 0xFF	; 255
     e84:	88 85       	ldd	r24, Y+8	; 0x08
     e86:	99 85       	ldd	r25, Y+9	; 0x09
     e88:	82 0f       	add	r24, r18
     e8a:	93 1f       	adc	r25, r19
     e8c:	fc 01       	movw	r30, r24
     e8e:	80 81       	ld	r24, Z
     e90:	ba 01       	movw	r22, r20
     e92:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
     e96:	80 e0       	ldi	r24, 0x00	; 0
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	a0 ea       	ldi	r26, 0xA0	; 160
     e9c:	b1 e4       	ldi	r27, 0x41	; 65
     e9e:	8c 87       	std	Y+12, r24	; 0x0c
     ea0:	9d 87       	std	Y+13, r25	; 0x0d
     ea2:	ae 87       	std	Y+14, r26	; 0x0e
     ea4:	bf 87       	std	Y+15, r27	; 0x0f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	4a e7       	ldi	r20, 0x7A	; 122
     eac:	55 e4       	ldi	r21, 0x45	; 69
     eae:	6c 85       	ldd	r22, Y+12	; 0x0c
     eb0:	7d 85       	ldd	r23, Y+13	; 0x0d
     eb2:	8e 85       	ldd	r24, Y+14	; 0x0e
     eb4:	9f 85       	ldd	r25, Y+15	; 0x0f
     eb6:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     eba:	dc 01       	movw	r26, r24
     ebc:	cb 01       	movw	r24, r22
     ebe:	8e 8f       	std	Y+30, r24	; 0x1e
     ec0:	9f 8f       	std	Y+31, r25	; 0x1f
     ec2:	a8 a3       	std	Y+32, r26	; 0x20
     ec4:	b9 a3       	std	Y+33, r27	; 0x21
	if (__tmp < 1.0)
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e8       	ldi	r20, 0x80	; 128
     ecc:	5f e3       	ldi	r21, 0x3F	; 63
     ece:	6e 8d       	ldd	r22, Y+30	; 0x1e
     ed0:	7f 8d       	ldd	r23, Y+31	; 0x1f
     ed2:	88 a1       	ldd	r24, Y+32	; 0x20
     ed4:	99 a1       	ldd	r25, Y+33	; 0x21
     ed6:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
     eda:	88 23       	and	r24, r24
     edc:	2c f4       	brge	.+10     	; 0xee8 <addOfflineUser+0x226>
		__ticks = 1;
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	9b a3       	std	Y+35, r25	; 0x23
     ee4:	8a a3       	std	Y+34, r24	; 0x22
     ee6:	3f c0       	rjmp	.+126    	; 0xf66 <addOfflineUser+0x2a4>
	else if (__tmp > 65535)
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	3f ef       	ldi	r19, 0xFF	; 255
     eec:	4f e7       	ldi	r20, 0x7F	; 127
     eee:	57 e4       	ldi	r21, 0x47	; 71
     ef0:	6e 8d       	ldd	r22, Y+30	; 0x1e
     ef2:	7f 8d       	ldd	r23, Y+31	; 0x1f
     ef4:	88 a1       	ldd	r24, Y+32	; 0x20
     ef6:	99 a1       	ldd	r25, Y+33	; 0x21
     ef8:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
     efc:	18 16       	cp	r1, r24
     efe:	4c f5       	brge	.+82     	; 0xf52 <addOfflineUser+0x290>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	40 e2       	ldi	r20, 0x20	; 32
     f06:	51 e4       	ldi	r21, 0x41	; 65
     f08:	6c 85       	ldd	r22, Y+12	; 0x0c
     f0a:	7d 85       	ldd	r23, Y+13	; 0x0d
     f0c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f0e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f10:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
     f14:	dc 01       	movw	r26, r24
     f16:	cb 01       	movw	r24, r22
     f18:	bc 01       	movw	r22, r24
     f1a:	cd 01       	movw	r24, r26
     f1c:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     f20:	dc 01       	movw	r26, r24
     f22:	cb 01       	movw	r24, r22
     f24:	9b a3       	std	Y+35, r25	; 0x23
     f26:	8a a3       	std	Y+34, r24	; 0x22
     f28:	0f c0       	rjmp	.+30     	; 0xf48 <addOfflineUser+0x286>
     f2a:	80 e9       	ldi	r24, 0x90	; 144
     f2c:	91 e0       	ldi	r25, 0x01	; 1
     f2e:	9d a3       	std	Y+37, r25	; 0x25
     f30:	8c a3       	std	Y+36, r24	; 0x24
     f32:	8c a1       	ldd	r24, Y+36	; 0x24
     f34:	9d a1       	ldd	r25, Y+37	; 0x25
     f36:	01 97       	sbiw	r24, 0x01	; 1
     f38:	f1 f7       	brne	.-4      	; 0xf36 <addOfflineUser+0x274>
     f3a:	9d a3       	std	Y+37, r25	; 0x25
     f3c:	8c a3       	std	Y+36, r24	; 0x24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f3e:	8a a1       	ldd	r24, Y+34	; 0x22
     f40:	9b a1       	ldd	r25, Y+35	; 0x23
     f42:	01 97       	sbiw	r24, 0x01	; 1
     f44:	9b a3       	std	Y+35, r25	; 0x23
     f46:	8a a3       	std	Y+34, r24	; 0x22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f48:	8a a1       	ldd	r24, Y+34	; 0x22
     f4a:	9b a1       	ldd	r25, Y+35	; 0x23
     f4c:	89 2b       	or	r24, r25
     f4e:	69 f7       	brne	.-38     	; 0xf2a <addOfflineUser+0x268>
     f50:	14 c0       	rjmp	.+40     	; 0xf7a <addOfflineUser+0x2b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f52:	6e 8d       	ldd	r22, Y+30	; 0x1e
     f54:	7f 8d       	ldd	r23, Y+31	; 0x1f
     f56:	88 a1       	ldd	r24, Y+32	; 0x20
     f58:	99 a1       	ldd	r25, Y+33	; 0x21
     f5a:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
     f5e:	dc 01       	movw	r26, r24
     f60:	cb 01       	movw	r24, r22
     f62:	9b a3       	std	Y+35, r25	; 0x23
     f64:	8a a3       	std	Y+34, r24	; 0x22
     f66:	8a a1       	ldd	r24, Y+34	; 0x22
     f68:	9b a1       	ldd	r25, Y+35	; 0x23
     f6a:	9f a3       	std	Y+39, r25	; 0x27
     f6c:	8e a3       	std	Y+38, r24	; 0x26
     f6e:	8e a1       	ldd	r24, Y+38	; 0x26
     f70:	9f a1       	ldd	r25, Y+39	; 0x27
     f72:	01 97       	sbiw	r24, 0x01	; 1
     f74:	f1 f7       	brne	.-4      	; 0xf72 <addOfflineUser+0x2b0>
     f76:	9f a3       	std	Y+39, r25	; 0x27
     f78:	8e a3       	std	Y+38, r24	; 0x26
     f7a:	8a 85       	ldd	r24, Y+10	; 0x0a
     f7c:	9b 85       	ldd	r25, Y+11	; 0x0b
     f7e:	01 96       	adiw	r24, 0x01	; 1
     f80:	9b 87       	std	Y+11, r25	; 0x0b
     f82:	8a 87       	std	Y+10, r24	; 0x0a
     f84:	88 85       	ldd	r24, Y+8	; 0x08
     f86:	99 85       	ldd	r25, Y+9	; 0x09
     f88:	01 96       	adiw	r24, 0x01	; 1
     f8a:	99 87       	std	Y+9, r25	; 0x09
     f8c:	88 87       	std	Y+8, r24	; 0x08
     f8e:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
     f92:	28 2f       	mov	r18, r24
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	88 85       	ldd	r24, Y+8	; 0x08
     f98:	99 85       	ldd	r25, Y+9	; 0x09
     f9a:	82 17       	cp	r24, r18
     f9c:	93 07       	cpc	r25, r19
     f9e:	0c f4       	brge	.+2      	; 0xfa2 <addOfflineUser+0x2e0>
     fa0:	6c cf       	rjmp	.-296    	; 0xe7a <addOfflineUser+0x1b8>
     fa2:	8b 81       	ldd	r24, Y+3	; 0x03
     fa4:	eb 96       	adiw	r28, 0x3b	; 59
     fa6:	0f b6       	in	r0, 0x3f	; 63
     fa8:	f8 94       	cli
     faa:	de bf       	out	0x3e, r29	; 62
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	cd bf       	out	0x3d, r28	; 61
     fb0:	df 91       	pop	r29
     fb2:	cf 91       	pop	r28
     fb4:	08 95       	ret

00000fb6 <deleteOnlineUser>:
     fb6:	1f 93       	push	r17
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	cd b7       	in	r28, 0x3d	; 61
     fbe:	de b7       	in	r29, 0x3e	; 62
     fc0:	ec 97       	sbiw	r28, 0x3c	; 60
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	de bf       	out	0x3e, r29	; 62
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	19 82       	std	Y+1, r1	; 0x01
     fce:	1a 82       	std	Y+2, r1	; 0x02
     fd0:	1b 82       	std	Y+3, r1	; 0x03
     fd2:	8a e6       	ldi	r24, 0x6A	; 106
     fd4:	93 e0       	ldi	r25, 0x03	; 3
     fd6:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
     fda:	ce 01       	movw	r24, r28
     fdc:	c3 96       	adiw	r24, 0x33	; 51
     fde:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
     fe2:	85 e6       	ldi	r24, 0x65	; 101
     fe4:	8c 83       	std	Y+4, r24	; 0x04
     fe6:	b1 c0       	rjmp	.+354    	; 0x114a <deleteOnlineUser+0x194>
     fe8:	8c 81       	ldd	r24, Y+4	; 0x04
     fea:	88 2f       	mov	r24, r24
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
     ff2:	8f 3f       	cpi	r24, 0xFF	; 255
     ff4:	09 f4       	brne	.+2      	; 0xff8 <deleteOnlineUser+0x42>
     ff6:	a3 c0       	rjmp	.+326    	; 0x113e <deleteOnlineUser+0x188>
     ff8:	1d 82       	std	Y+5, r1	; 0x05
     ffa:	8c 81       	ldd	r24, Y+4	; 0x04
     ffc:	8e 83       	std	Y+6, r24	; 0x06
     ffe:	99 c0       	rjmp	.+306    	; 0x1132 <deleteOnlineUser+0x17c>
    1000:	8d 81       	ldd	r24, Y+5	; 0x05
    1002:	88 2f       	mov	r24, r24
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	9e 01       	movw	r18, r28
    1008:	2d 5c       	subi	r18, 0xCD	; 205
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	82 0f       	add	r24, r18
    100e:	93 1f       	adc	r25, r19
    1010:	fc 01       	movw	r30, r24
    1012:	10 81       	ld	r17, Z
    1014:	8e 81       	ldd	r24, Y+6	; 0x06
    1016:	88 2f       	mov	r24, r24
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
    101e:	18 17       	cp	r17, r24
    1020:	09 f0       	breq	.+2      	; 0x1024 <deleteOnlineUser+0x6e>
    1022:	80 c0       	rjmp	.+256    	; 0x1124 <deleteOnlineUser+0x16e>
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	8f 5f       	subi	r24, 0xFF	; 255
    1028:	8a 83       	std	Y+2, r24	; 0x02
    102a:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
    102e:	9a 81       	ldd	r25, Y+2	; 0x02
    1030:	98 17       	cp	r25, r24
    1032:	09 f0       	breq	.+2      	; 0x1036 <deleteOnlineUser+0x80>
    1034:	78 c0       	rjmp	.+240    	; 0x1126 <deleteOnlineUser+0x170>
    1036:	8c 81       	ldd	r24, Y+4	; 0x04
    1038:	89 83       	std	Y+1, r24	; 0x01
    103a:	80 e0       	ldi	r24, 0x00	; 0
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	a6 e9       	ldi	r26, 0x96	; 150
    1040:	b3 e4       	ldi	r27, 0x43	; 67
    1042:	89 8b       	std	Y+17, r24	; 0x11
    1044:	9a 8b       	std	Y+18, r25	; 0x12
    1046:	ab 8b       	std	Y+19, r26	; 0x13
    1048:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	4a e7       	ldi	r20, 0x7A	; 122
    1050:	55 e4       	ldi	r21, 0x45	; 69
    1052:	69 89       	ldd	r22, Y+17	; 0x11
    1054:	7a 89       	ldd	r23, Y+18	; 0x12
    1056:	8b 89       	ldd	r24, Y+19	; 0x13
    1058:	9c 89       	ldd	r25, Y+20	; 0x14
    105a:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    105e:	dc 01       	movw	r26, r24
    1060:	cb 01       	movw	r24, r22
    1062:	8d 8b       	std	Y+21, r24	; 0x15
    1064:	9e 8b       	std	Y+22, r25	; 0x16
    1066:	af 8b       	std	Y+23, r26	; 0x17
    1068:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    106a:	20 e0       	ldi	r18, 0x00	; 0
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	40 e8       	ldi	r20, 0x80	; 128
    1070:	5f e3       	ldi	r21, 0x3F	; 63
    1072:	6d 89       	ldd	r22, Y+21	; 0x15
    1074:	7e 89       	ldd	r23, Y+22	; 0x16
    1076:	8f 89       	ldd	r24, Y+23	; 0x17
    1078:	98 8d       	ldd	r25, Y+24	; 0x18
    107a:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    107e:	88 23       	and	r24, r24
    1080:	2c f4       	brge	.+10     	; 0x108c <deleteOnlineUser+0xd6>
		__ticks = 1;
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	9a 8f       	std	Y+26, r25	; 0x1a
    1088:	89 8f       	std	Y+25, r24	; 0x19
    108a:	3f c0       	rjmp	.+126    	; 0x110a <deleteOnlineUser+0x154>
	else if (__tmp > 65535)
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	3f ef       	ldi	r19, 0xFF	; 255
    1090:	4f e7       	ldi	r20, 0x7F	; 127
    1092:	57 e4       	ldi	r21, 0x47	; 71
    1094:	6d 89       	ldd	r22, Y+21	; 0x15
    1096:	7e 89       	ldd	r23, Y+22	; 0x16
    1098:	8f 89       	ldd	r24, Y+23	; 0x17
    109a:	98 8d       	ldd	r25, Y+24	; 0x18
    109c:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    10a0:	18 16       	cp	r1, r24
    10a2:	4c f5       	brge	.+82     	; 0x10f6 <deleteOnlineUser+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10a4:	20 e0       	ldi	r18, 0x00	; 0
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	40 e2       	ldi	r20, 0x20	; 32
    10aa:	51 e4       	ldi	r21, 0x41	; 65
    10ac:	69 89       	ldd	r22, Y+17	; 0x11
    10ae:	7a 89       	ldd	r23, Y+18	; 0x12
    10b0:	8b 89       	ldd	r24, Y+19	; 0x13
    10b2:	9c 89       	ldd	r25, Y+20	; 0x14
    10b4:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    10b8:	dc 01       	movw	r26, r24
    10ba:	cb 01       	movw	r24, r22
    10bc:	bc 01       	movw	r22, r24
    10be:	cd 01       	movw	r24, r26
    10c0:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    10c4:	dc 01       	movw	r26, r24
    10c6:	cb 01       	movw	r24, r22
    10c8:	9a 8f       	std	Y+26, r25	; 0x1a
    10ca:	89 8f       	std	Y+25, r24	; 0x19
    10cc:	0f c0       	rjmp	.+30     	; 0x10ec <deleteOnlineUser+0x136>
    10ce:	80 e9       	ldi	r24, 0x90	; 144
    10d0:	91 e0       	ldi	r25, 0x01	; 1
    10d2:	9c 8f       	std	Y+28, r25	; 0x1c
    10d4:	8b 8f       	std	Y+27, r24	; 0x1b
    10d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10da:	01 97       	sbiw	r24, 0x01	; 1
    10dc:	f1 f7       	brne	.-4      	; 0x10da <deleteOnlineUser+0x124>
    10de:	9c 8f       	std	Y+28, r25	; 0x1c
    10e0:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10e2:	89 8d       	ldd	r24, Y+25	; 0x19
    10e4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    10e6:	01 97       	sbiw	r24, 0x01	; 1
    10e8:	9a 8f       	std	Y+26, r25	; 0x1a
    10ea:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10ec:	89 8d       	ldd	r24, Y+25	; 0x19
    10ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
    10f0:	89 2b       	or	r24, r25
    10f2:	69 f7       	brne	.-38     	; 0x10ce <deleteOnlineUser+0x118>
    10f4:	14 c0       	rjmp	.+40     	; 0x111e <deleteOnlineUser+0x168>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f6:	6d 89       	ldd	r22, Y+21	; 0x15
    10f8:	7e 89       	ldd	r23, Y+22	; 0x16
    10fa:	8f 89       	ldd	r24, Y+23	; 0x17
    10fc:	98 8d       	ldd	r25, Y+24	; 0x18
    10fe:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1102:	dc 01       	movw	r26, r24
    1104:	cb 01       	movw	r24, r22
    1106:	9a 8f       	std	Y+26, r25	; 0x1a
    1108:	89 8f       	std	Y+25, r24	; 0x19
    110a:	89 8d       	ldd	r24, Y+25	; 0x19
    110c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    110e:	9e 8f       	std	Y+30, r25	; 0x1e
    1110:	8d 8f       	std	Y+29, r24	; 0x1d
    1112:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1114:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	f1 f7       	brne	.-4      	; 0x1116 <deleteOnlineUser+0x160>
    111a:	9e 8f       	std	Y+30, r25	; 0x1e
    111c:	8d 8f       	std	Y+29, r24	; 0x1d
    111e:	81 e0       	ldi	r24, 0x01	; 1
    1120:	8b 83       	std	Y+3, r24	; 0x03
    1122:	0d c0       	rjmp	.+26     	; 0x113e <deleteOnlineUser+0x188>
    1124:	1a 82       	std	Y+2, r1	; 0x02
    1126:	8e 81       	ldd	r24, Y+6	; 0x06
    1128:	8f 5f       	subi	r24, 0xFF	; 255
    112a:	8e 83       	std	Y+6, r24	; 0x06
    112c:	8d 81       	ldd	r24, Y+5	; 0x05
    112e:	8f 5f       	subi	r24, 0xFF	; 255
    1130:	8d 83       	std	Y+5, r24	; 0x05
    1132:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
    1136:	9d 81       	ldd	r25, Y+5	; 0x05
    1138:	98 17       	cp	r25, r24
    113a:	08 f4       	brcc	.+2      	; 0x113e <deleteOnlineUser+0x188>
    113c:	61 cf       	rjmp	.-318    	; 0x1000 <deleteOnlineUser+0x4a>
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	81 30       	cpi	r24, 0x01	; 1
    1142:	41 f0       	breq	.+16     	; 0x1154 <deleteOnlineUser+0x19e>
    1144:	8c 81       	ldd	r24, Y+4	; 0x04
    1146:	8c 5e       	subi	r24, 0xEC	; 236
    1148:	8c 83       	std	Y+4, r24	; 0x04
    114a:	8c 81       	ldd	r24, Y+4	; 0x04
    114c:	88 3c       	cpi	r24, 0xC8	; 200
    114e:	08 f4       	brcc	.+2      	; 0x1152 <deleteOnlineUser+0x19c>
    1150:	4b cf       	rjmp	.-362    	; 0xfe8 <deleteOnlineUser+0x32>
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <deleteOnlineUser+0x1a0>
    1154:	00 00       	nop
    1156:	89 81       	ldd	r24, Y+1	; 0x01
    1158:	88 23       	and	r24, r24
    115a:	09 f4       	brne	.+2      	; 0x115e <deleteOnlineUser+0x1a8>
    115c:	03 c1       	rjmp	.+518    	; 0x1364 <deleteOnlineUser+0x3ae>
    115e:	1f 82       	std	Y+7, r1	; 0x07
    1160:	89 81       	ldd	r24, Y+1	; 0x01
    1162:	88 87       	std	Y+8, r24	; 0x08
    1164:	f9 c0       	rjmp	.+498    	; 0x1358 <deleteOnlineUser+0x3a2>
    1166:	88 85       	ldd	r24, Y+8	; 0x08
    1168:	88 2f       	mov	r24, r24
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	bc 01       	movw	r22, r24
    116e:	8f ef       	ldi	r24, 0xFF	; 255
    1170:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
    1174:	80 e0       	ldi	r24, 0x00	; 0
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	a0 ea       	ldi	r26, 0xA0	; 160
    117a:	b1 e4       	ldi	r27, 0x41	; 65
    117c:	8d 87       	std	Y+13, r24	; 0x0d
    117e:	9e 87       	std	Y+14, r25	; 0x0e
    1180:	af 87       	std	Y+15, r26	; 0x0f
    1182:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	4a e7       	ldi	r20, 0x7A	; 122
    118a:	55 e4       	ldi	r21, 0x45	; 69
    118c:	6d 85       	ldd	r22, Y+13	; 0x0d
    118e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1190:	8f 85       	ldd	r24, Y+15	; 0x0f
    1192:	98 89       	ldd	r25, Y+16	; 0x10
    1194:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1198:	dc 01       	movw	r26, r24
    119a:	cb 01       	movw	r24, r22
    119c:	89 a7       	std	Y+41, r24	; 0x29
    119e:	9a a7       	std	Y+42, r25	; 0x2a
    11a0:	ab a7       	std	Y+43, r26	; 0x2b
    11a2:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	40 e8       	ldi	r20, 0x80	; 128
    11aa:	5f e3       	ldi	r21, 0x3F	; 63
    11ac:	69 a5       	ldd	r22, Y+41	; 0x29
    11ae:	7a a5       	ldd	r23, Y+42	; 0x2a
    11b0:	8b a5       	ldd	r24, Y+43	; 0x2b
    11b2:	9c a5       	ldd	r25, Y+44	; 0x2c
    11b4:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    11b8:	88 23       	and	r24, r24
    11ba:	2c f4       	brge	.+10     	; 0x11c6 <deleteOnlineUser+0x210>
		__ticks = 1;
    11bc:	81 e0       	ldi	r24, 0x01	; 1
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	9e a7       	std	Y+46, r25	; 0x2e
    11c2:	8d a7       	std	Y+45, r24	; 0x2d
    11c4:	3f c0       	rjmp	.+126    	; 0x1244 <deleteOnlineUser+0x28e>
	else if (__tmp > 65535)
    11c6:	20 e0       	ldi	r18, 0x00	; 0
    11c8:	3f ef       	ldi	r19, 0xFF	; 255
    11ca:	4f e7       	ldi	r20, 0x7F	; 127
    11cc:	57 e4       	ldi	r21, 0x47	; 71
    11ce:	69 a5       	ldd	r22, Y+41	; 0x29
    11d0:	7a a5       	ldd	r23, Y+42	; 0x2a
    11d2:	8b a5       	ldd	r24, Y+43	; 0x2b
    11d4:	9c a5       	ldd	r25, Y+44	; 0x2c
    11d6:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    11da:	18 16       	cp	r1, r24
    11dc:	4c f5       	brge	.+82     	; 0x1230 <deleteOnlineUser+0x27a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	40 e2       	ldi	r20, 0x20	; 32
    11e4:	51 e4       	ldi	r21, 0x41	; 65
    11e6:	6d 85       	ldd	r22, Y+13	; 0x0d
    11e8:	7e 85       	ldd	r23, Y+14	; 0x0e
    11ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    11ec:	98 89       	ldd	r25, Y+16	; 0x10
    11ee:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    11f2:	dc 01       	movw	r26, r24
    11f4:	cb 01       	movw	r24, r22
    11f6:	bc 01       	movw	r22, r24
    11f8:	cd 01       	movw	r24, r26
    11fa:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    11fe:	dc 01       	movw	r26, r24
    1200:	cb 01       	movw	r24, r22
    1202:	9e a7       	std	Y+46, r25	; 0x2e
    1204:	8d a7       	std	Y+45, r24	; 0x2d
    1206:	0f c0       	rjmp	.+30     	; 0x1226 <deleteOnlineUser+0x270>
    1208:	80 e9       	ldi	r24, 0x90	; 144
    120a:	91 e0       	ldi	r25, 0x01	; 1
    120c:	98 ab       	std	Y+48, r25	; 0x30
    120e:	8f a7       	std	Y+47, r24	; 0x2f
    1210:	8f a5       	ldd	r24, Y+47	; 0x2f
    1212:	98 a9       	ldd	r25, Y+48	; 0x30
    1214:	01 97       	sbiw	r24, 0x01	; 1
    1216:	f1 f7       	brne	.-4      	; 0x1214 <deleteOnlineUser+0x25e>
    1218:	98 ab       	std	Y+48, r25	; 0x30
    121a:	8f a7       	std	Y+47, r24	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    121c:	8d a5       	ldd	r24, Y+45	; 0x2d
    121e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1220:	01 97       	sbiw	r24, 0x01	; 1
    1222:	9e a7       	std	Y+46, r25	; 0x2e
    1224:	8d a7       	std	Y+45, r24	; 0x2d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1226:	8d a5       	ldd	r24, Y+45	; 0x2d
    1228:	9e a5       	ldd	r25, Y+46	; 0x2e
    122a:	89 2b       	or	r24, r25
    122c:	69 f7       	brne	.-38     	; 0x1208 <deleteOnlineUser+0x252>
    122e:	14 c0       	rjmp	.+40     	; 0x1258 <deleteOnlineUser+0x2a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1230:	69 a5       	ldd	r22, Y+41	; 0x29
    1232:	7a a5       	ldd	r23, Y+42	; 0x2a
    1234:	8b a5       	ldd	r24, Y+43	; 0x2b
    1236:	9c a5       	ldd	r25, Y+44	; 0x2c
    1238:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	9e a7       	std	Y+46, r25	; 0x2e
    1242:	8d a7       	std	Y+45, r24	; 0x2d
    1244:	8d a5       	ldd	r24, Y+45	; 0x2d
    1246:	9e a5       	ldd	r25, Y+46	; 0x2e
    1248:	9a ab       	std	Y+50, r25	; 0x32
    124a:	89 ab       	std	Y+49, r24	; 0x31
    124c:	89 a9       	ldd	r24, Y+49	; 0x31
    124e:	9a a9       	ldd	r25, Y+50	; 0x32
    1250:	01 97       	sbiw	r24, 0x01	; 1
    1252:	f1 f7       	brne	.-4      	; 0x1250 <deleteOnlineUser+0x29a>
    1254:	9a ab       	std	Y+50, r25	; 0x32
    1256:	89 ab       	std	Y+49, r24	; 0x31
    1258:	88 85       	ldd	r24, Y+8	; 0x08
    125a:	88 2f       	mov	r24, r24
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	0a 96       	adiw	r24, 0x0a	; 10
    1260:	bc 01       	movw	r22, r24
    1262:	8f ef       	ldi	r24, 0xFF	; 255
    1264:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
    1268:	80 e0       	ldi	r24, 0x00	; 0
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	a0 ea       	ldi	r26, 0xA0	; 160
    126e:	b1 e4       	ldi	r27, 0x41	; 65
    1270:	89 87       	std	Y+9, r24	; 0x09
    1272:	9a 87       	std	Y+10, r25	; 0x0a
    1274:	ab 87       	std	Y+11, r26	; 0x0b
    1276:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1278:	20 e0       	ldi	r18, 0x00	; 0
    127a:	30 e0       	ldi	r19, 0x00	; 0
    127c:	4a e7       	ldi	r20, 0x7A	; 122
    127e:	55 e4       	ldi	r21, 0x45	; 69
    1280:	69 85       	ldd	r22, Y+9	; 0x09
    1282:	7a 85       	ldd	r23, Y+10	; 0x0a
    1284:	8b 85       	ldd	r24, Y+11	; 0x0b
    1286:	9c 85       	ldd	r25, Y+12	; 0x0c
    1288:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    128c:	dc 01       	movw	r26, r24
    128e:	cb 01       	movw	r24, r22
    1290:	8f 8f       	std	Y+31, r24	; 0x1f
    1292:	98 a3       	std	Y+32, r25	; 0x20
    1294:	a9 a3       	std	Y+33, r26	; 0x21
    1296:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	40 e8       	ldi	r20, 0x80	; 128
    129e:	5f e3       	ldi	r21, 0x3F	; 63
    12a0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    12a2:	78 a1       	ldd	r23, Y+32	; 0x20
    12a4:	89 a1       	ldd	r24, Y+33	; 0x21
    12a6:	9a a1       	ldd	r25, Y+34	; 0x22
    12a8:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    12ac:	88 23       	and	r24, r24
    12ae:	2c f4       	brge	.+10     	; 0x12ba <deleteOnlineUser+0x304>
		__ticks = 1;
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	9c a3       	std	Y+36, r25	; 0x24
    12b6:	8b a3       	std	Y+35, r24	; 0x23
    12b8:	3f c0       	rjmp	.+126    	; 0x1338 <deleteOnlineUser+0x382>
	else if (__tmp > 65535)
    12ba:	20 e0       	ldi	r18, 0x00	; 0
    12bc:	3f ef       	ldi	r19, 0xFF	; 255
    12be:	4f e7       	ldi	r20, 0x7F	; 127
    12c0:	57 e4       	ldi	r21, 0x47	; 71
    12c2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    12c4:	78 a1       	ldd	r23, Y+32	; 0x20
    12c6:	89 a1       	ldd	r24, Y+33	; 0x21
    12c8:	9a a1       	ldd	r25, Y+34	; 0x22
    12ca:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    12ce:	18 16       	cp	r1, r24
    12d0:	4c f5       	brge	.+82     	; 0x1324 <deleteOnlineUser+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	40 e2       	ldi	r20, 0x20	; 32
    12d8:	51 e4       	ldi	r21, 0x41	; 65
    12da:	69 85       	ldd	r22, Y+9	; 0x09
    12dc:	7a 85       	ldd	r23, Y+10	; 0x0a
    12de:	8b 85       	ldd	r24, Y+11	; 0x0b
    12e0:	9c 85       	ldd	r25, Y+12	; 0x0c
    12e2:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    12e6:	dc 01       	movw	r26, r24
    12e8:	cb 01       	movw	r24, r22
    12ea:	bc 01       	movw	r22, r24
    12ec:	cd 01       	movw	r24, r26
    12ee:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    12f2:	dc 01       	movw	r26, r24
    12f4:	cb 01       	movw	r24, r22
    12f6:	9c a3       	std	Y+36, r25	; 0x24
    12f8:	8b a3       	std	Y+35, r24	; 0x23
    12fa:	0f c0       	rjmp	.+30     	; 0x131a <deleteOnlineUser+0x364>
    12fc:	80 e9       	ldi	r24, 0x90	; 144
    12fe:	91 e0       	ldi	r25, 0x01	; 1
    1300:	9e a3       	std	Y+38, r25	; 0x26
    1302:	8d a3       	std	Y+37, r24	; 0x25
    1304:	8d a1       	ldd	r24, Y+37	; 0x25
    1306:	9e a1       	ldd	r25, Y+38	; 0x26
    1308:	01 97       	sbiw	r24, 0x01	; 1
    130a:	f1 f7       	brne	.-4      	; 0x1308 <deleteOnlineUser+0x352>
    130c:	9e a3       	std	Y+38, r25	; 0x26
    130e:	8d a3       	std	Y+37, r24	; 0x25
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1310:	8b a1       	ldd	r24, Y+35	; 0x23
    1312:	9c a1       	ldd	r25, Y+36	; 0x24
    1314:	01 97       	sbiw	r24, 0x01	; 1
    1316:	9c a3       	std	Y+36, r25	; 0x24
    1318:	8b a3       	std	Y+35, r24	; 0x23
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    131a:	8b a1       	ldd	r24, Y+35	; 0x23
    131c:	9c a1       	ldd	r25, Y+36	; 0x24
    131e:	89 2b       	or	r24, r25
    1320:	69 f7       	brne	.-38     	; 0x12fc <deleteOnlineUser+0x346>
    1322:	14 c0       	rjmp	.+40     	; 0x134c <deleteOnlineUser+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1324:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1326:	78 a1       	ldd	r23, Y+32	; 0x20
    1328:	89 a1       	ldd	r24, Y+33	; 0x21
    132a:	9a a1       	ldd	r25, Y+34	; 0x22
    132c:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1330:	dc 01       	movw	r26, r24
    1332:	cb 01       	movw	r24, r22
    1334:	9c a3       	std	Y+36, r25	; 0x24
    1336:	8b a3       	std	Y+35, r24	; 0x23
    1338:	8b a1       	ldd	r24, Y+35	; 0x23
    133a:	9c a1       	ldd	r25, Y+36	; 0x24
    133c:	98 a7       	std	Y+40, r25	; 0x28
    133e:	8f a3       	std	Y+39, r24	; 0x27
    1340:	8f a1       	ldd	r24, Y+39	; 0x27
    1342:	98 a5       	ldd	r25, Y+40	; 0x28
    1344:	01 97       	sbiw	r24, 0x01	; 1
    1346:	f1 f7       	brne	.-4      	; 0x1344 <deleteOnlineUser+0x38e>
    1348:	98 a7       	std	Y+40, r25	; 0x28
    134a:	8f a3       	std	Y+39, r24	; 0x27
    134c:	88 85       	ldd	r24, Y+8	; 0x08
    134e:	8f 5f       	subi	r24, 0xFF	; 255
    1350:	88 87       	std	Y+8, r24	; 0x08
    1352:	8f 81       	ldd	r24, Y+7	; 0x07
    1354:	8f 5f       	subi	r24, 0xFF	; 255
    1356:	8f 83       	std	Y+7, r24	; 0x07
    1358:	8f 81       	ldd	r24, Y+7	; 0x07
    135a:	8a 30       	cpi	r24, 0x0A	; 10
    135c:	08 f4       	brcc	.+2      	; 0x1360 <deleteOnlineUser+0x3aa>
    135e:	03 cf       	rjmp	.-506    	; 0x1166 <deleteOnlineUser+0x1b0>
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	01 c0       	rjmp	.+2      	; 0x1366 <deleteOnlineUser+0x3b0>
    1364:	80 e0       	ldi	r24, 0x00	; 0
    1366:	ec 96       	adiw	r28, 0x3c	; 60
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	08 95       	ret

0000137a <deleteOfflineUser>:
    137a:	1f 93       	push	r17
    137c:	cf 93       	push	r28
    137e:	df 93       	push	r29
    1380:	cd b7       	in	r28, 0x3d	; 61
    1382:	de b7       	in	r29, 0x3e	; 62
    1384:	ec 97       	sbiw	r28, 0x3c	; 60
    1386:	0f b6       	in	r0, 0x3f	; 63
    1388:	f8 94       	cli
    138a:	de bf       	out	0x3e, r29	; 62
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	cd bf       	out	0x3d, r28	; 61
    1390:	19 82       	std	Y+1, r1	; 0x01
    1392:	1a 82       	std	Y+2, r1	; 0x02
    1394:	1b 82       	std	Y+3, r1	; 0x03
    1396:	8a e6       	ldi	r24, 0x6A	; 106
    1398:	93 e0       	ldi	r25, 0x03	; 3
    139a:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
    139e:	ce 01       	movw	r24, r28
    13a0:	c3 96       	adiw	r24, 0x33	; 51
    13a2:	0e 94 a7 04 	call	0x94e	; 0x94e <adminInput>
    13a6:	8b e0       	ldi	r24, 0x0B	; 11
    13a8:	8c 83       	std	Y+4, r24	; 0x04
    13aa:	b1 c0       	rjmp	.+354    	; 0x150e <deleteOfflineUser+0x194>
    13ac:	8c 81       	ldd	r24, Y+4	; 0x04
    13ae:	88 2f       	mov	r24, r24
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
    13b6:	8f 3f       	cpi	r24, 0xFF	; 255
    13b8:	09 f4       	brne	.+2      	; 0x13bc <deleteOfflineUser+0x42>
    13ba:	a3 c0       	rjmp	.+326    	; 0x1502 <deleteOfflineUser+0x188>
    13bc:	1d 82       	std	Y+5, r1	; 0x05
    13be:	8c 81       	ldd	r24, Y+4	; 0x04
    13c0:	8e 83       	std	Y+6, r24	; 0x06
    13c2:	99 c0       	rjmp	.+306    	; 0x14f6 <deleteOfflineUser+0x17c>
    13c4:	8d 81       	ldd	r24, Y+5	; 0x05
    13c6:	88 2f       	mov	r24, r24
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	9e 01       	movw	r18, r28
    13cc:	2d 5c       	subi	r18, 0xCD	; 205
    13ce:	3f 4f       	sbci	r19, 0xFF	; 255
    13d0:	82 0f       	add	r24, r18
    13d2:	93 1f       	adc	r25, r19
    13d4:	fc 01       	movw	r30, r24
    13d6:	10 81       	ld	r17, Z
    13d8:	8e 81       	ldd	r24, Y+6	; 0x06
    13da:	88 2f       	mov	r24, r24
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	0e 94 90 0c 	call	0x1920	; 0x1920 <EEPROM_readData>
    13e2:	18 17       	cp	r17, r24
    13e4:	09 f0       	breq	.+2      	; 0x13e8 <deleteOfflineUser+0x6e>
    13e6:	80 c0       	rjmp	.+256    	; 0x14e8 <deleteOfflineUser+0x16e>
    13e8:	8a 81       	ldd	r24, Y+2	; 0x02
    13ea:	8f 5f       	subi	r24, 0xFF	; 255
    13ec:	8a 83       	std	Y+2, r24	; 0x02
    13ee:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
    13f2:	9a 81       	ldd	r25, Y+2	; 0x02
    13f4:	98 17       	cp	r25, r24
    13f6:	09 f0       	breq	.+2      	; 0x13fa <deleteOfflineUser+0x80>
    13f8:	78 c0       	rjmp	.+240    	; 0x14ea <deleteOfflineUser+0x170>
    13fa:	8c 81       	ldd	r24, Y+4	; 0x04
    13fc:	89 83       	std	Y+1, r24	; 0x01
    13fe:	80 e0       	ldi	r24, 0x00	; 0
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	a6 e9       	ldi	r26, 0x96	; 150
    1404:	b3 e4       	ldi	r27, 0x43	; 67
    1406:	89 8b       	std	Y+17, r24	; 0x11
    1408:	9a 8b       	std	Y+18, r25	; 0x12
    140a:	ab 8b       	std	Y+19, r26	; 0x13
    140c:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    140e:	20 e0       	ldi	r18, 0x00	; 0
    1410:	30 e0       	ldi	r19, 0x00	; 0
    1412:	4a e7       	ldi	r20, 0x7A	; 122
    1414:	55 e4       	ldi	r21, 0x45	; 69
    1416:	69 89       	ldd	r22, Y+17	; 0x11
    1418:	7a 89       	ldd	r23, Y+18	; 0x12
    141a:	8b 89       	ldd	r24, Y+19	; 0x13
    141c:	9c 89       	ldd	r25, Y+20	; 0x14
    141e:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1422:	dc 01       	movw	r26, r24
    1424:	cb 01       	movw	r24, r22
    1426:	8d 8b       	std	Y+21, r24	; 0x15
    1428:	9e 8b       	std	Y+22, r25	; 0x16
    142a:	af 8b       	std	Y+23, r26	; 0x17
    142c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    142e:	20 e0       	ldi	r18, 0x00	; 0
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	40 e8       	ldi	r20, 0x80	; 128
    1434:	5f e3       	ldi	r21, 0x3F	; 63
    1436:	6d 89       	ldd	r22, Y+21	; 0x15
    1438:	7e 89       	ldd	r23, Y+22	; 0x16
    143a:	8f 89       	ldd	r24, Y+23	; 0x17
    143c:	98 8d       	ldd	r25, Y+24	; 0x18
    143e:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1442:	88 23       	and	r24, r24
    1444:	2c f4       	brge	.+10     	; 0x1450 <deleteOfflineUser+0xd6>
		__ticks = 1;
    1446:	81 e0       	ldi	r24, 0x01	; 1
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	9a 8f       	std	Y+26, r25	; 0x1a
    144c:	89 8f       	std	Y+25, r24	; 0x19
    144e:	3f c0       	rjmp	.+126    	; 0x14ce <deleteOfflineUser+0x154>
	else if (__tmp > 65535)
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	3f ef       	ldi	r19, 0xFF	; 255
    1454:	4f e7       	ldi	r20, 0x7F	; 127
    1456:	57 e4       	ldi	r21, 0x47	; 71
    1458:	6d 89       	ldd	r22, Y+21	; 0x15
    145a:	7e 89       	ldd	r23, Y+22	; 0x16
    145c:	8f 89       	ldd	r24, Y+23	; 0x17
    145e:	98 8d       	ldd	r25, Y+24	; 0x18
    1460:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1464:	18 16       	cp	r1, r24
    1466:	4c f5       	brge	.+82     	; 0x14ba <deleteOfflineUser+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1468:	20 e0       	ldi	r18, 0x00	; 0
    146a:	30 e0       	ldi	r19, 0x00	; 0
    146c:	40 e2       	ldi	r20, 0x20	; 32
    146e:	51 e4       	ldi	r21, 0x41	; 65
    1470:	69 89       	ldd	r22, Y+17	; 0x11
    1472:	7a 89       	ldd	r23, Y+18	; 0x12
    1474:	8b 89       	ldd	r24, Y+19	; 0x13
    1476:	9c 89       	ldd	r25, Y+20	; 0x14
    1478:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    147c:	dc 01       	movw	r26, r24
    147e:	cb 01       	movw	r24, r22
    1480:	bc 01       	movw	r22, r24
    1482:	cd 01       	movw	r24, r26
    1484:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1488:	dc 01       	movw	r26, r24
    148a:	cb 01       	movw	r24, r22
    148c:	9a 8f       	std	Y+26, r25	; 0x1a
    148e:	89 8f       	std	Y+25, r24	; 0x19
    1490:	0f c0       	rjmp	.+30     	; 0x14b0 <deleteOfflineUser+0x136>
    1492:	80 e9       	ldi	r24, 0x90	; 144
    1494:	91 e0       	ldi	r25, 0x01	; 1
    1496:	9c 8f       	std	Y+28, r25	; 0x1c
    1498:	8b 8f       	std	Y+27, r24	; 0x1b
    149a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    149c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    149e:	01 97       	sbiw	r24, 0x01	; 1
    14a0:	f1 f7       	brne	.-4      	; 0x149e <deleteOfflineUser+0x124>
    14a2:	9c 8f       	std	Y+28, r25	; 0x1c
    14a4:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14a6:	89 8d       	ldd	r24, Y+25	; 0x19
    14a8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    14aa:	01 97       	sbiw	r24, 0x01	; 1
    14ac:	9a 8f       	std	Y+26, r25	; 0x1a
    14ae:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14b0:	89 8d       	ldd	r24, Y+25	; 0x19
    14b2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    14b4:	89 2b       	or	r24, r25
    14b6:	69 f7       	brne	.-38     	; 0x1492 <deleteOfflineUser+0x118>
    14b8:	14 c0       	rjmp	.+40     	; 0x14e2 <deleteOfflineUser+0x168>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ba:	6d 89       	ldd	r22, Y+21	; 0x15
    14bc:	7e 89       	ldd	r23, Y+22	; 0x16
    14be:	8f 89       	ldd	r24, Y+23	; 0x17
    14c0:	98 8d       	ldd	r25, Y+24	; 0x18
    14c2:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	9a 8f       	std	Y+26, r25	; 0x1a
    14cc:	89 8f       	std	Y+25, r24	; 0x19
    14ce:	89 8d       	ldd	r24, Y+25	; 0x19
    14d0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    14d2:	9e 8f       	std	Y+30, r25	; 0x1e
    14d4:	8d 8f       	std	Y+29, r24	; 0x1d
    14d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    14d8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    14da:	01 97       	sbiw	r24, 0x01	; 1
    14dc:	f1 f7       	brne	.-4      	; 0x14da <deleteOfflineUser+0x160>
    14de:	9e 8f       	std	Y+30, r25	; 0x1e
    14e0:	8d 8f       	std	Y+29, r24	; 0x1d
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	8b 83       	std	Y+3, r24	; 0x03
    14e6:	0d c0       	rjmp	.+26     	; 0x1502 <deleteOfflineUser+0x188>
    14e8:	1a 82       	std	Y+2, r1	; 0x02
    14ea:	8e 81       	ldd	r24, Y+6	; 0x06
    14ec:	8f 5f       	subi	r24, 0xFF	; 255
    14ee:	8e 83       	std	Y+6, r24	; 0x06
    14f0:	8d 81       	ldd	r24, Y+5	; 0x05
    14f2:	8f 5f       	subi	r24, 0xFF	; 255
    14f4:	8d 83       	std	Y+5, r24	; 0x05
    14f6:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <__data_end>
    14fa:	9d 81       	ldd	r25, Y+5	; 0x05
    14fc:	98 17       	cp	r25, r24
    14fe:	08 f4       	brcc	.+2      	; 0x1502 <deleteOfflineUser+0x188>
    1500:	61 cf       	rjmp	.-318    	; 0x13c4 <deleteOfflineUser+0x4a>
    1502:	8b 81       	ldd	r24, Y+3	; 0x03
    1504:	81 30       	cpi	r24, 0x01	; 1
    1506:	41 f0       	breq	.+16     	; 0x1518 <deleteOfflineUser+0x19e>
    1508:	8c 81       	ldd	r24, Y+4	; 0x04
    150a:	8c 5e       	subi	r24, 0xEC	; 236
    150c:	8c 83       	std	Y+4, r24	; 0x04
    150e:	8c 81       	ldd	r24, Y+4	; 0x04
    1510:	84 36       	cpi	r24, 0x64	; 100
    1512:	08 f4       	brcc	.+2      	; 0x1516 <deleteOfflineUser+0x19c>
    1514:	4b cf       	rjmp	.-362    	; 0x13ac <deleteOfflineUser+0x32>
    1516:	01 c0       	rjmp	.+2      	; 0x151a <deleteOfflineUser+0x1a0>
    1518:	00 00       	nop
    151a:	89 81       	ldd	r24, Y+1	; 0x01
    151c:	88 23       	and	r24, r24
    151e:	09 f4       	brne	.+2      	; 0x1522 <deleteOfflineUser+0x1a8>
    1520:	03 c1       	rjmp	.+518    	; 0x1728 <deleteOfflineUser+0x3ae>
    1522:	1f 82       	std	Y+7, r1	; 0x07
    1524:	89 81       	ldd	r24, Y+1	; 0x01
    1526:	88 87       	std	Y+8, r24	; 0x08
    1528:	f9 c0       	rjmp	.+498    	; 0x171c <deleteOfflineUser+0x3a2>
    152a:	88 85       	ldd	r24, Y+8	; 0x08
    152c:	88 2f       	mov	r24, r24
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	bc 01       	movw	r22, r24
    1532:	8f ef       	ldi	r24, 0xFF	; 255
    1534:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
    1538:	80 e0       	ldi	r24, 0x00	; 0
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	a0 ea       	ldi	r26, 0xA0	; 160
    153e:	b1 e4       	ldi	r27, 0x41	; 65
    1540:	8d 87       	std	Y+13, r24	; 0x0d
    1542:	9e 87       	std	Y+14, r25	; 0x0e
    1544:	af 87       	std	Y+15, r26	; 0x0f
    1546:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1548:	20 e0       	ldi	r18, 0x00	; 0
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	4a e7       	ldi	r20, 0x7A	; 122
    154e:	55 e4       	ldi	r21, 0x45	; 69
    1550:	6d 85       	ldd	r22, Y+13	; 0x0d
    1552:	7e 85       	ldd	r23, Y+14	; 0x0e
    1554:	8f 85       	ldd	r24, Y+15	; 0x0f
    1556:	98 89       	ldd	r25, Y+16	; 0x10
    1558:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    155c:	dc 01       	movw	r26, r24
    155e:	cb 01       	movw	r24, r22
    1560:	89 a7       	std	Y+41, r24	; 0x29
    1562:	9a a7       	std	Y+42, r25	; 0x2a
    1564:	ab a7       	std	Y+43, r26	; 0x2b
    1566:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e8       	ldi	r20, 0x80	; 128
    156e:	5f e3       	ldi	r21, 0x3F	; 63
    1570:	69 a5       	ldd	r22, Y+41	; 0x29
    1572:	7a a5       	ldd	r23, Y+42	; 0x2a
    1574:	8b a5       	ldd	r24, Y+43	; 0x2b
    1576:	9c a5       	ldd	r25, Y+44	; 0x2c
    1578:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    157c:	88 23       	and	r24, r24
    157e:	2c f4       	brge	.+10     	; 0x158a <deleteOfflineUser+0x210>
		__ticks = 1;
    1580:	81 e0       	ldi	r24, 0x01	; 1
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	9e a7       	std	Y+46, r25	; 0x2e
    1586:	8d a7       	std	Y+45, r24	; 0x2d
    1588:	3f c0       	rjmp	.+126    	; 0x1608 <deleteOfflineUser+0x28e>
	else if (__tmp > 65535)
    158a:	20 e0       	ldi	r18, 0x00	; 0
    158c:	3f ef       	ldi	r19, 0xFF	; 255
    158e:	4f e7       	ldi	r20, 0x7F	; 127
    1590:	57 e4       	ldi	r21, 0x47	; 71
    1592:	69 a5       	ldd	r22, Y+41	; 0x29
    1594:	7a a5       	ldd	r23, Y+42	; 0x2a
    1596:	8b a5       	ldd	r24, Y+43	; 0x2b
    1598:	9c a5       	ldd	r25, Y+44	; 0x2c
    159a:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    159e:	18 16       	cp	r1, r24
    15a0:	4c f5       	brge	.+82     	; 0x15f4 <deleteOfflineUser+0x27a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15a2:	20 e0       	ldi	r18, 0x00	; 0
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	40 e2       	ldi	r20, 0x20	; 32
    15a8:	51 e4       	ldi	r21, 0x41	; 65
    15aa:	6d 85       	ldd	r22, Y+13	; 0x0d
    15ac:	7e 85       	ldd	r23, Y+14	; 0x0e
    15ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    15b0:	98 89       	ldd	r25, Y+16	; 0x10
    15b2:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    15b6:	dc 01       	movw	r26, r24
    15b8:	cb 01       	movw	r24, r22
    15ba:	bc 01       	movw	r22, r24
    15bc:	cd 01       	movw	r24, r26
    15be:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	9e a7       	std	Y+46, r25	; 0x2e
    15c8:	8d a7       	std	Y+45, r24	; 0x2d
    15ca:	0f c0       	rjmp	.+30     	; 0x15ea <deleteOfflineUser+0x270>
    15cc:	80 e9       	ldi	r24, 0x90	; 144
    15ce:	91 e0       	ldi	r25, 0x01	; 1
    15d0:	98 ab       	std	Y+48, r25	; 0x30
    15d2:	8f a7       	std	Y+47, r24	; 0x2f
    15d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    15d6:	98 a9       	ldd	r25, Y+48	; 0x30
    15d8:	01 97       	sbiw	r24, 0x01	; 1
    15da:	f1 f7       	brne	.-4      	; 0x15d8 <deleteOfflineUser+0x25e>
    15dc:	98 ab       	std	Y+48, r25	; 0x30
    15de:	8f a7       	std	Y+47, r24	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15e0:	8d a5       	ldd	r24, Y+45	; 0x2d
    15e2:	9e a5       	ldd	r25, Y+46	; 0x2e
    15e4:	01 97       	sbiw	r24, 0x01	; 1
    15e6:	9e a7       	std	Y+46, r25	; 0x2e
    15e8:	8d a7       	std	Y+45, r24	; 0x2d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15ea:	8d a5       	ldd	r24, Y+45	; 0x2d
    15ec:	9e a5       	ldd	r25, Y+46	; 0x2e
    15ee:	89 2b       	or	r24, r25
    15f0:	69 f7       	brne	.-38     	; 0x15cc <deleteOfflineUser+0x252>
    15f2:	14 c0       	rjmp	.+40     	; 0x161c <deleteOfflineUser+0x2a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15f4:	69 a5       	ldd	r22, Y+41	; 0x29
    15f6:	7a a5       	ldd	r23, Y+42	; 0x2a
    15f8:	8b a5       	ldd	r24, Y+43	; 0x2b
    15fa:	9c a5       	ldd	r25, Y+44	; 0x2c
    15fc:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1600:	dc 01       	movw	r26, r24
    1602:	cb 01       	movw	r24, r22
    1604:	9e a7       	std	Y+46, r25	; 0x2e
    1606:	8d a7       	std	Y+45, r24	; 0x2d
    1608:	8d a5       	ldd	r24, Y+45	; 0x2d
    160a:	9e a5       	ldd	r25, Y+46	; 0x2e
    160c:	9a ab       	std	Y+50, r25	; 0x32
    160e:	89 ab       	std	Y+49, r24	; 0x31
    1610:	89 a9       	ldd	r24, Y+49	; 0x31
    1612:	9a a9       	ldd	r25, Y+50	; 0x32
    1614:	01 97       	sbiw	r24, 0x01	; 1
    1616:	f1 f7       	brne	.-4      	; 0x1614 <deleteOfflineUser+0x29a>
    1618:	9a ab       	std	Y+50, r25	; 0x32
    161a:	89 ab       	std	Y+49, r24	; 0x31
    161c:	88 85       	ldd	r24, Y+8	; 0x08
    161e:	88 2f       	mov	r24, r24
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0a 96       	adiw	r24, 0x0a	; 10
    1624:	bc 01       	movw	r22, r24
    1626:	8f ef       	ldi	r24, 0xFF	; 255
    1628:	0e 94 08 0c 	call	0x1810	; 0x1810 <EEPROM_writeData>
    162c:	80 e0       	ldi	r24, 0x00	; 0
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	a0 ea       	ldi	r26, 0xA0	; 160
    1632:	b1 e4       	ldi	r27, 0x41	; 65
    1634:	89 87       	std	Y+9, r24	; 0x09
    1636:	9a 87       	std	Y+10, r25	; 0x0a
    1638:	ab 87       	std	Y+11, r26	; 0x0b
    163a:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    163c:	20 e0       	ldi	r18, 0x00	; 0
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	4a e7       	ldi	r20, 0x7A	; 122
    1642:	55 e4       	ldi	r21, 0x45	; 69
    1644:	69 85       	ldd	r22, Y+9	; 0x09
    1646:	7a 85       	ldd	r23, Y+10	; 0x0a
    1648:	8b 85       	ldd	r24, Y+11	; 0x0b
    164a:	9c 85       	ldd	r25, Y+12	; 0x0c
    164c:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1650:	dc 01       	movw	r26, r24
    1652:	cb 01       	movw	r24, r22
    1654:	8f 8f       	std	Y+31, r24	; 0x1f
    1656:	98 a3       	std	Y+32, r25	; 0x20
    1658:	a9 a3       	std	Y+33, r26	; 0x21
    165a:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    165c:	20 e0       	ldi	r18, 0x00	; 0
    165e:	30 e0       	ldi	r19, 0x00	; 0
    1660:	40 e8       	ldi	r20, 0x80	; 128
    1662:	5f e3       	ldi	r21, 0x3F	; 63
    1664:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1666:	78 a1       	ldd	r23, Y+32	; 0x20
    1668:	89 a1       	ldd	r24, Y+33	; 0x21
    166a:	9a a1       	ldd	r25, Y+34	; 0x22
    166c:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1670:	88 23       	and	r24, r24
    1672:	2c f4       	brge	.+10     	; 0x167e <deleteOfflineUser+0x304>
		__ticks = 1;
    1674:	81 e0       	ldi	r24, 0x01	; 1
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	9c a3       	std	Y+36, r25	; 0x24
    167a:	8b a3       	std	Y+35, r24	; 0x23
    167c:	3f c0       	rjmp	.+126    	; 0x16fc <deleteOfflineUser+0x382>
	else if (__tmp > 65535)
    167e:	20 e0       	ldi	r18, 0x00	; 0
    1680:	3f ef       	ldi	r19, 0xFF	; 255
    1682:	4f e7       	ldi	r20, 0x7F	; 127
    1684:	57 e4       	ldi	r21, 0x47	; 71
    1686:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1688:	78 a1       	ldd	r23, Y+32	; 0x20
    168a:	89 a1       	ldd	r24, Y+33	; 0x21
    168c:	9a a1       	ldd	r25, Y+34	; 0x22
    168e:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1692:	18 16       	cp	r1, r24
    1694:	4c f5       	brge	.+82     	; 0x16e8 <deleteOfflineUser+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	40 e2       	ldi	r20, 0x20	; 32
    169c:	51 e4       	ldi	r21, 0x41	; 65
    169e:	69 85       	ldd	r22, Y+9	; 0x09
    16a0:	7a 85       	ldd	r23, Y+10	; 0x0a
    16a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    16a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    16a6:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    16aa:	dc 01       	movw	r26, r24
    16ac:	cb 01       	movw	r24, r22
    16ae:	bc 01       	movw	r22, r24
    16b0:	cd 01       	movw	r24, r26
    16b2:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    16b6:	dc 01       	movw	r26, r24
    16b8:	cb 01       	movw	r24, r22
    16ba:	9c a3       	std	Y+36, r25	; 0x24
    16bc:	8b a3       	std	Y+35, r24	; 0x23
    16be:	0f c0       	rjmp	.+30     	; 0x16de <deleteOfflineUser+0x364>
    16c0:	80 e9       	ldi	r24, 0x90	; 144
    16c2:	91 e0       	ldi	r25, 0x01	; 1
    16c4:	9e a3       	std	Y+38, r25	; 0x26
    16c6:	8d a3       	std	Y+37, r24	; 0x25
    16c8:	8d a1       	ldd	r24, Y+37	; 0x25
    16ca:	9e a1       	ldd	r25, Y+38	; 0x26
    16cc:	01 97       	sbiw	r24, 0x01	; 1
    16ce:	f1 f7       	brne	.-4      	; 0x16cc <deleteOfflineUser+0x352>
    16d0:	9e a3       	std	Y+38, r25	; 0x26
    16d2:	8d a3       	std	Y+37, r24	; 0x25
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16d4:	8b a1       	ldd	r24, Y+35	; 0x23
    16d6:	9c a1       	ldd	r25, Y+36	; 0x24
    16d8:	01 97       	sbiw	r24, 0x01	; 1
    16da:	9c a3       	std	Y+36, r25	; 0x24
    16dc:	8b a3       	std	Y+35, r24	; 0x23
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16de:	8b a1       	ldd	r24, Y+35	; 0x23
    16e0:	9c a1       	ldd	r25, Y+36	; 0x24
    16e2:	89 2b       	or	r24, r25
    16e4:	69 f7       	brne	.-38     	; 0x16c0 <deleteOfflineUser+0x346>
    16e6:	14 c0       	rjmp	.+40     	; 0x1710 <deleteOfflineUser+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16e8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16ea:	78 a1       	ldd	r23, Y+32	; 0x20
    16ec:	89 a1       	ldd	r24, Y+33	; 0x21
    16ee:	9a a1       	ldd	r25, Y+34	; 0x22
    16f0:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    16f4:	dc 01       	movw	r26, r24
    16f6:	cb 01       	movw	r24, r22
    16f8:	9c a3       	std	Y+36, r25	; 0x24
    16fa:	8b a3       	std	Y+35, r24	; 0x23
    16fc:	8b a1       	ldd	r24, Y+35	; 0x23
    16fe:	9c a1       	ldd	r25, Y+36	; 0x24
    1700:	98 a7       	std	Y+40, r25	; 0x28
    1702:	8f a3       	std	Y+39, r24	; 0x27
    1704:	8f a1       	ldd	r24, Y+39	; 0x27
    1706:	98 a5       	ldd	r25, Y+40	; 0x28
    1708:	01 97       	sbiw	r24, 0x01	; 1
    170a:	f1 f7       	brne	.-4      	; 0x1708 <deleteOfflineUser+0x38e>
    170c:	98 a7       	std	Y+40, r25	; 0x28
    170e:	8f a3       	std	Y+39, r24	; 0x27
    1710:	88 85       	ldd	r24, Y+8	; 0x08
    1712:	8f 5f       	subi	r24, 0xFF	; 255
    1714:	88 87       	std	Y+8, r24	; 0x08
    1716:	8f 81       	ldd	r24, Y+7	; 0x07
    1718:	8f 5f       	subi	r24, 0xFF	; 255
    171a:	8f 83       	std	Y+7, r24	; 0x07
    171c:	8f 81       	ldd	r24, Y+7	; 0x07
    171e:	8a 30       	cpi	r24, 0x0A	; 10
    1720:	08 f4       	brcc	.+2      	; 0x1724 <deleteOfflineUser+0x3aa>
    1722:	03 cf       	rjmp	.-506    	; 0x152a <deleteOfflineUser+0x1b0>
    1724:	81 e0       	ldi	r24, 0x01	; 1
    1726:	01 c0       	rjmp	.+2      	; 0x172a <deleteOfflineUser+0x3b0>
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	ec 96       	adiw	r28, 0x3c	; 60
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	f8 94       	cli
    1730:	de bf       	out	0x3e, r29	; 62
    1732:	0f be       	out	0x3f, r0	; 63
    1734:	cd bf       	out	0x3d, r28	; 61
    1736:	df 91       	pop	r29
    1738:	cf 91       	pop	r28
    173a:	1f 91       	pop	r17
    173c:	08 95       	ret

0000173e <Door>:
    173e:	cf 93       	push	r28
    1740:	df 93       	push	r29
    1742:	1f 92       	push	r1
    1744:	cd b7       	in	r28, 0x3d	; 61
    1746:	de b7       	in	r29, 0x3e	; 62
    1748:	89 83       	std	Y+1, r24	; 0x01
    174a:	0e 94 1b 19 	call	0x3236	; 0x3236 <TIMER1_initFastPwmMod14>
    174e:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <GI_enable>
    1752:	61 e0       	ldi	r22, 0x01	; 1
    1754:	8d e1       	ldi	r24, 0x1D	; 29
    1756:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    175a:	82 e3       	ldi	r24, 0x32	; 50
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 af 19 	call	0x335e	; 0x335e <TIMER1_setFrequency>
    1762:	84 e8       	ldi	r24, 0x84	; 132
    1764:	93 e0       	ldi	r25, 0x03	; 3
    1766:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
    176a:	89 81       	ldd	r24, Y+1	; 0x01
    176c:	81 30       	cpi	r24, 0x01	; 1
    176e:	71 f4       	brne	.+28     	; 0x178c <Door+0x4e>
    1770:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <LCD_clearDis>
    1774:	86 e8       	ldi	r24, 0x86	; 134
    1776:	93 e0       	ldi	r25, 0x03	; 3
    1778:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
    177c:	60 e0       	ldi	r22, 0x00	; 0
    177e:	70 e0       	ldi	r23, 0x00	; 0
    1780:	80 e2       	ldi	r24, 0x20	; 32
    1782:	91 e4       	ldi	r25, 0x41	; 65
    1784:	0e 94 62 19 	call	0x32c4	; 0x32c4 <TIMER1_setDuty>
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	12 c0       	rjmp	.+36     	; 0x17b0 <Door+0x72>
    178c:	89 81       	ldd	r24, Y+1	; 0x01
    178e:	88 23       	and	r24, r24
    1790:	71 f4       	brne	.+28     	; 0x17ae <Door+0x70>
    1792:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <LCD_clearDis>
    1796:	82 e9       	ldi	r24, 0x92	; 146
    1798:	93 e0       	ldi	r25, 0x03	; 3
    179a:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	80 ea       	ldi	r24, 0xA0	; 160
    17a4:	90 e4       	ldi	r25, 0x40	; 64
    17a6:	0e 94 62 19 	call	0x32c4	; 0x32c4 <TIMER1_setDuty>
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <Door+0x72>
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	0f 90       	pop	r0
    17b2:	df 91       	pop	r29
    17b4:	cf 91       	pop	r28
    17b6:	08 95       	ret

000017b8 <LED_DIMMER>:
    17b8:	cf 93       	push	r28
    17ba:	df 93       	push	r29
    17bc:	00 d0       	rcall	.+0      	; 0x17be <LED_DIMMER+0x6>
    17be:	cd b7       	in	r28, 0x3d	; 61
    17c0:	de b7       	in	r29, 0x3e	; 62
    17c2:	8a 83       	std	Y+2, r24	; 0x02
    17c4:	61 e0       	ldi	r22, 0x01	; 1
    17c6:	8b e0       	ldi	r24, 0x0B	; 11
    17c8:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    17cc:	8a 81       	ldd	r24, Y+2	; 0x02
    17ce:	88 23       	and	r24, r24
    17d0:	19 f4       	brne	.+6      	; 0x17d8 <LED_DIMMER+0x20>
    17d2:	0e 94 63 18 	call	0x30c6	; 0x30c6 <TIMER0_stop>
    17d6:	16 c0       	rjmp	.+44     	; 0x1804 <LED_DIMMER+0x4c>
    17d8:	8a 81       	ldd	r24, Y+2	; 0x02
    17da:	88 23       	and	r24, r24
    17dc:	99 f0       	breq	.+38     	; 0x1804 <LED_DIMMER+0x4c>
    17de:	8a 81       	ldd	r24, Y+2	; 0x02
    17e0:	86 30       	cpi	r24, 0x06	; 6
    17e2:	80 f4       	brcc	.+32     	; 0x1804 <LED_DIMMER+0x4c>
    17e4:	0e 94 89 17 	call	0x2f12	; 0x2f12 <TIMER0_initFastPwm>
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	0e 94 03 19 	call	0x3206	; 0x3206 <TIMER0_setFrequency>
    17ee:	8a 81       	ldd	r24, Y+2	; 0x02
    17f0:	88 0f       	add	r24, r24
    17f2:	88 0f       	add	r24, r24
    17f4:	98 2f       	mov	r25, r24
    17f6:	99 0f       	add	r25, r25
    17f8:	99 0f       	add	r25, r25
    17fa:	89 0f       	add	r24, r25
    17fc:	89 83       	std	Y+1, r24	; 0x01
    17fe:	89 81       	ldd	r24, Y+1	; 0x01
    1800:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <TIMER0_setDuty>
    1804:	00 00       	nop
    1806:	0f 90       	pop	r0
    1808:	0f 90       	pop	r0
    180a:	df 91       	pop	r29
    180c:	cf 91       	pop	r28
    180e:	08 95       	ret

00001810 <EEPROM_writeData>:
    1810:	cf 93       	push	r28
    1812:	df 93       	push	r29
    1814:	cd b7       	in	r28, 0x3d	; 61
    1816:	de b7       	in	r29, 0x3e	; 62
    1818:	27 97       	sbiw	r28, 0x07	; 7
    181a:	0f b6       	in	r0, 0x3f	; 63
    181c:	f8 94       	cli
    181e:	de bf       	out	0x3e, r29	; 62
    1820:	0f be       	out	0x3f, r0	; 63
    1822:	cd bf       	out	0x3d, r28	; 61
    1824:	8d 83       	std	Y+5, r24	; 0x05
    1826:	7f 83       	std	Y+7, r23	; 0x07
    1828:	6e 83       	std	Y+6, r22	; 0x06
    182a:	86 e5       	ldi	r24, 0x56	; 86
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	24 ea       	ldi	r18, 0xA4	; 164
    1830:	fc 01       	movw	r30, r24
    1832:	20 83       	st	Z, r18
    1834:	00 00       	nop
    1836:	86 e5       	ldi	r24, 0x56	; 86
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	fc 01       	movw	r30, r24
    183c:	80 81       	ld	r24, Z
    183e:	88 1f       	adc	r24, r24
    1840:	88 27       	eor	r24, r24
    1842:	88 1f       	adc	r24, r24
    1844:	88 2f       	mov	r24, r24
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	81 70       	andi	r24, 0x01	; 1
    184a:	99 27       	eor	r25, r25
    184c:	89 2b       	or	r24, r25
    184e:	99 f3       	breq	.-26     	; 0x1836 <EEPROM_writeData+0x26>
    1850:	8e 81       	ldd	r24, Y+6	; 0x06
    1852:	9f 81       	ldd	r25, Y+7	; 0x07
    1854:	88 27       	eor	r24, r24
    1856:	97 70       	andi	r25, 0x07	; 7
    1858:	9a 83       	std	Y+2, r25	; 0x02
    185a:	89 83       	std	Y+1, r24	; 0x01
    185c:	89 81       	ldd	r24, Y+1	; 0x01
    185e:	9a 81       	ldd	r25, Y+2	; 0x02
    1860:	88 0f       	add	r24, r24
    1862:	89 2f       	mov	r24, r25
    1864:	88 1f       	adc	r24, r24
    1866:	99 0b       	sbc	r25, r25
    1868:	91 95       	neg	r25
    186a:	8b 83       	std	Y+3, r24	; 0x03
    186c:	8b 81       	ldd	r24, Y+3	; 0x03
    186e:	80 6a       	ori	r24, 0xA0	; 160
    1870:	8c 83       	std	Y+4, r24	; 0x04
    1872:	83 e2       	ldi	r24, 0x23	; 35
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	2c 81       	ldd	r18, Y+4	; 0x04
    1878:	fc 01       	movw	r30, r24
    187a:	20 83       	st	Z, r18
    187c:	86 e5       	ldi	r24, 0x56	; 86
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	24 e8       	ldi	r18, 0x84	; 132
    1882:	fc 01       	movw	r30, r24
    1884:	20 83       	st	Z, r18
    1886:	00 00       	nop
    1888:	86 e5       	ldi	r24, 0x56	; 86
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	fc 01       	movw	r30, r24
    188e:	80 81       	ld	r24, Z
    1890:	88 1f       	adc	r24, r24
    1892:	88 27       	eor	r24, r24
    1894:	88 1f       	adc	r24, r24
    1896:	88 2f       	mov	r24, r24
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	81 70       	andi	r24, 0x01	; 1
    189c:	99 27       	eor	r25, r25
    189e:	89 2b       	or	r24, r25
    18a0:	99 f3       	breq	.-26     	; 0x1888 <EEPROM_writeData+0x78>
    18a2:	83 e2       	ldi	r24, 0x23	; 35
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	2e 81       	ldd	r18, Y+6	; 0x06
    18a8:	fc 01       	movw	r30, r24
    18aa:	20 83       	st	Z, r18
    18ac:	86 e5       	ldi	r24, 0x56	; 86
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	24 e8       	ldi	r18, 0x84	; 132
    18b2:	fc 01       	movw	r30, r24
    18b4:	20 83       	st	Z, r18
    18b6:	00 00       	nop
    18b8:	86 e5       	ldi	r24, 0x56	; 86
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	fc 01       	movw	r30, r24
    18be:	80 81       	ld	r24, Z
    18c0:	88 1f       	adc	r24, r24
    18c2:	88 27       	eor	r24, r24
    18c4:	88 1f       	adc	r24, r24
    18c6:	88 2f       	mov	r24, r24
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	81 70       	andi	r24, 0x01	; 1
    18cc:	99 27       	eor	r25, r25
    18ce:	89 2b       	or	r24, r25
    18d0:	99 f3       	breq	.-26     	; 0x18b8 <EEPROM_writeData+0xa8>
    18d2:	83 e2       	ldi	r24, 0x23	; 35
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	2d 81       	ldd	r18, Y+5	; 0x05
    18d8:	fc 01       	movw	r30, r24
    18da:	20 83       	st	Z, r18
    18dc:	86 e5       	ldi	r24, 0x56	; 86
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	24 e8       	ldi	r18, 0x84	; 132
    18e2:	fc 01       	movw	r30, r24
    18e4:	20 83       	st	Z, r18
    18e6:	00 00       	nop
    18e8:	86 e5       	ldi	r24, 0x56	; 86
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	fc 01       	movw	r30, r24
    18ee:	80 81       	ld	r24, Z
    18f0:	88 1f       	adc	r24, r24
    18f2:	88 27       	eor	r24, r24
    18f4:	88 1f       	adc	r24, r24
    18f6:	88 2f       	mov	r24, r24
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	81 70       	andi	r24, 0x01	; 1
    18fc:	99 27       	eor	r25, r25
    18fe:	89 2b       	or	r24, r25
    1900:	99 f3       	breq	.-26     	; 0x18e8 <EEPROM_writeData+0xd8>
    1902:	86 e5       	ldi	r24, 0x56	; 86
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	24 e9       	ldi	r18, 0x94	; 148
    1908:	fc 01       	movw	r30, r24
    190a:	20 83       	st	Z, r18
    190c:	00 00       	nop
    190e:	27 96       	adiw	r28, 0x07	; 7
    1910:	0f b6       	in	r0, 0x3f	; 63
    1912:	f8 94       	cli
    1914:	de bf       	out	0x3e, r29	; 62
    1916:	0f be       	out	0x3f, r0	; 63
    1918:	cd bf       	out	0x3d, r28	; 61
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	08 95       	ret

00001920 <EEPROM_readData>:
    1920:	cf 93       	push	r28
    1922:	df 93       	push	r29
    1924:	cd b7       	in	r28, 0x3d	; 61
    1926:	de b7       	in	r29, 0x3e	; 62
    1928:	27 97       	sbiw	r28, 0x07	; 7
    192a:	0f b6       	in	r0, 0x3f	; 63
    192c:	f8 94       	cli
    192e:	de bf       	out	0x3e, r29	; 62
    1930:	0f be       	out	0x3f, r0	; 63
    1932:	cd bf       	out	0x3d, r28	; 61
    1934:	9f 83       	std	Y+7, r25	; 0x07
    1936:	8e 83       	std	Y+6, r24	; 0x06
    1938:	86 e5       	ldi	r24, 0x56	; 86
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	24 ea       	ldi	r18, 0xA4	; 164
    193e:	fc 01       	movw	r30, r24
    1940:	20 83       	st	Z, r18
    1942:	00 00       	nop
    1944:	86 e5       	ldi	r24, 0x56	; 86
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	fc 01       	movw	r30, r24
    194a:	80 81       	ld	r24, Z
    194c:	88 1f       	adc	r24, r24
    194e:	88 27       	eor	r24, r24
    1950:	88 1f       	adc	r24, r24
    1952:	88 2f       	mov	r24, r24
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	81 70       	andi	r24, 0x01	; 1
    1958:	99 27       	eor	r25, r25
    195a:	89 2b       	or	r24, r25
    195c:	99 f3       	breq	.-26     	; 0x1944 <EEPROM_readData+0x24>
    195e:	8e 81       	ldd	r24, Y+6	; 0x06
    1960:	9f 81       	ldd	r25, Y+7	; 0x07
    1962:	88 27       	eor	r24, r24
    1964:	97 70       	andi	r25, 0x07	; 7
    1966:	9a 83       	std	Y+2, r25	; 0x02
    1968:	89 83       	std	Y+1, r24	; 0x01
    196a:	89 81       	ldd	r24, Y+1	; 0x01
    196c:	9a 81       	ldd	r25, Y+2	; 0x02
    196e:	88 0f       	add	r24, r24
    1970:	89 2f       	mov	r24, r25
    1972:	88 1f       	adc	r24, r24
    1974:	99 0b       	sbc	r25, r25
    1976:	91 95       	neg	r25
    1978:	8b 83       	std	Y+3, r24	; 0x03
    197a:	8b 81       	ldd	r24, Y+3	; 0x03
    197c:	80 6a       	ori	r24, 0xA0	; 160
    197e:	8c 83       	std	Y+4, r24	; 0x04
    1980:	83 e2       	ldi	r24, 0x23	; 35
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	2c 81       	ldd	r18, Y+4	; 0x04
    1986:	fc 01       	movw	r30, r24
    1988:	20 83       	st	Z, r18
    198a:	86 e5       	ldi	r24, 0x56	; 86
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	24 e8       	ldi	r18, 0x84	; 132
    1990:	fc 01       	movw	r30, r24
    1992:	20 83       	st	Z, r18
    1994:	00 00       	nop
    1996:	86 e5       	ldi	r24, 0x56	; 86
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	fc 01       	movw	r30, r24
    199c:	80 81       	ld	r24, Z
    199e:	88 1f       	adc	r24, r24
    19a0:	88 27       	eor	r24, r24
    19a2:	88 1f       	adc	r24, r24
    19a4:	88 2f       	mov	r24, r24
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	81 70       	andi	r24, 0x01	; 1
    19aa:	99 27       	eor	r25, r25
    19ac:	89 2b       	or	r24, r25
    19ae:	99 f3       	breq	.-26     	; 0x1996 <EEPROM_readData+0x76>
    19b0:	83 e2       	ldi	r24, 0x23	; 35
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	2e 81       	ldd	r18, Y+6	; 0x06
    19b6:	fc 01       	movw	r30, r24
    19b8:	20 83       	st	Z, r18
    19ba:	86 e5       	ldi	r24, 0x56	; 86
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	24 e8       	ldi	r18, 0x84	; 132
    19c0:	fc 01       	movw	r30, r24
    19c2:	20 83       	st	Z, r18
    19c4:	00 00       	nop
    19c6:	86 e5       	ldi	r24, 0x56	; 86
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	fc 01       	movw	r30, r24
    19cc:	80 81       	ld	r24, Z
    19ce:	88 1f       	adc	r24, r24
    19d0:	88 27       	eor	r24, r24
    19d2:	88 1f       	adc	r24, r24
    19d4:	88 2f       	mov	r24, r24
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	81 70       	andi	r24, 0x01	; 1
    19da:	99 27       	eor	r25, r25
    19dc:	89 2b       	or	r24, r25
    19de:	99 f3       	breq	.-26     	; 0x19c6 <EEPROM_readData+0xa6>
    19e0:	86 e5       	ldi	r24, 0x56	; 86
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	24 ea       	ldi	r18, 0xA4	; 164
    19e6:	fc 01       	movw	r30, r24
    19e8:	20 83       	st	Z, r18
    19ea:	00 00       	nop
    19ec:	86 e5       	ldi	r24, 0x56	; 86
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	fc 01       	movw	r30, r24
    19f2:	80 81       	ld	r24, Z
    19f4:	88 1f       	adc	r24, r24
    19f6:	88 27       	eor	r24, r24
    19f8:	88 1f       	adc	r24, r24
    19fa:	88 2f       	mov	r24, r24
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	81 70       	andi	r24, 0x01	; 1
    1a00:	99 27       	eor	r25, r25
    1a02:	89 2b       	or	r24, r25
    1a04:	99 f3       	breq	.-26     	; 0x19ec <EEPROM_readData+0xcc>
    1a06:	8e 81       	ldd	r24, Y+6	; 0x06
    1a08:	9f 81       	ldd	r25, Y+7	; 0x07
    1a0a:	88 27       	eor	r24, r24
    1a0c:	97 70       	andi	r25, 0x07	; 7
    1a0e:	9a 83       	std	Y+2, r25	; 0x02
    1a10:	89 83       	std	Y+1, r24	; 0x01
    1a12:	89 81       	ldd	r24, Y+1	; 0x01
    1a14:	9a 81       	ldd	r25, Y+2	; 0x02
    1a16:	88 0f       	add	r24, r24
    1a18:	89 2f       	mov	r24, r25
    1a1a:	88 1f       	adc	r24, r24
    1a1c:	99 0b       	sbc	r25, r25
    1a1e:	91 95       	neg	r25
    1a20:	8b 83       	std	Y+3, r24	; 0x03
    1a22:	8b 81       	ldd	r24, Y+3	; 0x03
    1a24:	81 6a       	ori	r24, 0xA1	; 161
    1a26:	8c 83       	std	Y+4, r24	; 0x04
    1a28:	83 e2       	ldi	r24, 0x23	; 35
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	2c 81       	ldd	r18, Y+4	; 0x04
    1a2e:	fc 01       	movw	r30, r24
    1a30:	20 83       	st	Z, r18
    1a32:	86 e5       	ldi	r24, 0x56	; 86
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	24 e8       	ldi	r18, 0x84	; 132
    1a38:	fc 01       	movw	r30, r24
    1a3a:	20 83       	st	Z, r18
    1a3c:	00 00       	nop
    1a3e:	86 e5       	ldi	r24, 0x56	; 86
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	fc 01       	movw	r30, r24
    1a44:	80 81       	ld	r24, Z
    1a46:	88 1f       	adc	r24, r24
    1a48:	88 27       	eor	r24, r24
    1a4a:	88 1f       	adc	r24, r24
    1a4c:	88 2f       	mov	r24, r24
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	81 70       	andi	r24, 0x01	; 1
    1a52:	99 27       	eor	r25, r25
    1a54:	89 2b       	or	r24, r25
    1a56:	99 f3       	breq	.-26     	; 0x1a3e <EEPROM_readData+0x11e>
    1a58:	86 e5       	ldi	r24, 0x56	; 86
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	24 e8       	ldi	r18, 0x84	; 132
    1a5e:	fc 01       	movw	r30, r24
    1a60:	20 83       	st	Z, r18
    1a62:	00 00       	nop
    1a64:	86 e5       	ldi	r24, 0x56	; 86
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	fc 01       	movw	r30, r24
    1a6a:	80 81       	ld	r24, Z
    1a6c:	88 1f       	adc	r24, r24
    1a6e:	88 27       	eor	r24, r24
    1a70:	88 1f       	adc	r24, r24
    1a72:	88 2f       	mov	r24, r24
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	81 70       	andi	r24, 0x01	; 1
    1a78:	99 27       	eor	r25, r25
    1a7a:	89 2b       	or	r24, r25
    1a7c:	99 f3       	breq	.-26     	; 0x1a64 <EEPROM_readData+0x144>
    1a7e:	83 e2       	ldi	r24, 0x23	; 35
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	fc 01       	movw	r30, r24
    1a84:	80 81       	ld	r24, Z
    1a86:	8d 83       	std	Y+5, r24	; 0x05
    1a88:	86 e5       	ldi	r24, 0x56	; 86
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	24 e9       	ldi	r18, 0x94	; 148
    1a8e:	fc 01       	movw	r30, r24
    1a90:	20 83       	st	Z, r18
    1a92:	8d 81       	ldd	r24, Y+5	; 0x05
    1a94:	27 96       	adiw	r28, 0x07	; 7
    1a96:	0f b6       	in	r0, 0x3f	; 63
    1a98:	f8 94       	cli
    1a9a:	de bf       	out	0x3e, r29	; 62
    1a9c:	0f be       	out	0x3f, r0	; 63
    1a9e:	cd bf       	out	0x3d, r28	; 61
    1aa0:	df 91       	pop	r29
    1aa2:	cf 91       	pop	r28
    1aa4:	08 95       	ret

00001aa6 <LCD_init>:
    1aa6:	cf 93       	push	r28
    1aa8:	df 93       	push	r29
    1aaa:	cd b7       	in	r28, 0x3d	; 61
    1aac:	de b7       	in	r29, 0x3e	; 62
    1aae:	e8 97       	sbiw	r28, 0x38	; 56
    1ab0:	0f b6       	in	r0, 0x3f	; 63
    1ab2:	f8 94       	cli
    1ab4:	de bf       	out	0x3e, r29	; 62
    1ab6:	0f be       	out	0x3f, r0	; 63
    1ab8:	cd bf       	out	0x3d, r28	; 61
    1aba:	61 e0       	ldi	r22, 0x01	; 1
    1abc:	82 e1       	ldi	r24, 0x12	; 18
    1abe:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1ac2:	61 e0       	ldi	r22, 0x01	; 1
    1ac4:	83 e1       	ldi	r24, 0x13	; 19
    1ac6:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1aca:	61 e0       	ldi	r22, 0x01	; 1
    1acc:	84 e1       	ldi	r24, 0x14	; 20
    1ace:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1ad2:	61 e0       	ldi	r22, 0x01	; 1
    1ad4:	85 e1       	ldi	r24, 0x15	; 21
    1ad6:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1ada:	61 e0       	ldi	r22, 0x01	; 1
    1adc:	86 e1       	ldi	r24, 0x16	; 22
    1ade:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1ae2:	61 e0       	ldi	r22, 0x01	; 1
    1ae4:	87 e1       	ldi	r24, 0x17	; 23
    1ae6:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1aea:	61 e0       	ldi	r22, 0x01	; 1
    1aec:	8e e1       	ldi	r24, 0x1E	; 30
    1aee:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    1af2:	82 e0       	ldi	r24, 0x02	; 2
    1af4:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	a8 e4       	ldi	r26, 0x48	; 72
    1afe:	b2 e4       	ldi	r27, 0x42	; 66
    1b00:	89 83       	std	Y+1, r24	; 0x01
    1b02:	9a 83       	std	Y+2, r25	; 0x02
    1b04:	ab 83       	std	Y+3, r26	; 0x03
    1b06:	bc 83       	std	Y+4, r27	; 0x04
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	4a e7       	ldi	r20, 0x7A	; 122
    1b0e:	55 e4       	ldi	r21, 0x45	; 69
    1b10:	69 81       	ldd	r22, Y+1	; 0x01
    1b12:	7a 81       	ldd	r23, Y+2	; 0x02
    1b14:	8b 81       	ldd	r24, Y+3	; 0x03
    1b16:	9c 81       	ldd	r25, Y+4	; 0x04
    1b18:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1b1c:	dc 01       	movw	r26, r24
    1b1e:	cb 01       	movw	r24, r22
    1b20:	8f a7       	std	Y+47, r24	; 0x2f
    1b22:	98 ab       	std	Y+48, r25	; 0x30
    1b24:	a9 ab       	std	Y+49, r26	; 0x31
    1b26:	ba ab       	std	Y+50, r27	; 0x32
    1b28:	20 e0       	ldi	r18, 0x00	; 0
    1b2a:	30 e0       	ldi	r19, 0x00	; 0
    1b2c:	40 e8       	ldi	r20, 0x80	; 128
    1b2e:	5f e3       	ldi	r21, 0x3F	; 63
    1b30:	6f a5       	ldd	r22, Y+47	; 0x2f
    1b32:	78 a9       	ldd	r23, Y+48	; 0x30
    1b34:	89 a9       	ldd	r24, Y+49	; 0x31
    1b36:	9a a9       	ldd	r25, Y+50	; 0x32
    1b38:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1b3c:	88 23       	and	r24, r24
    1b3e:	2c f4       	brge	.+10     	; 0x1b4a <LCD_init+0xa4>
    1b40:	81 e0       	ldi	r24, 0x01	; 1
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	9c ab       	std	Y+52, r25	; 0x34
    1b46:	8b ab       	std	Y+51, r24	; 0x33
    1b48:	3f c0       	rjmp	.+126    	; 0x1bc8 <LCD_init+0x122>
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	3f ef       	ldi	r19, 0xFF	; 255
    1b4e:	4f e7       	ldi	r20, 0x7F	; 127
    1b50:	57 e4       	ldi	r21, 0x47	; 71
    1b52:	6f a5       	ldd	r22, Y+47	; 0x2f
    1b54:	78 a9       	ldd	r23, Y+48	; 0x30
    1b56:	89 a9       	ldd	r24, Y+49	; 0x31
    1b58:	9a a9       	ldd	r25, Y+50	; 0x32
    1b5a:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1b5e:	18 16       	cp	r1, r24
    1b60:	4c f5       	brge	.+82     	; 0x1bb4 <LCD_init+0x10e>
    1b62:	20 e0       	ldi	r18, 0x00	; 0
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	40 e2       	ldi	r20, 0x20	; 32
    1b68:	51 e4       	ldi	r21, 0x41	; 65
    1b6a:	69 81       	ldd	r22, Y+1	; 0x01
    1b6c:	7a 81       	ldd	r23, Y+2	; 0x02
    1b6e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b70:	9c 81       	ldd	r25, Y+4	; 0x04
    1b72:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1b76:	dc 01       	movw	r26, r24
    1b78:	cb 01       	movw	r24, r22
    1b7a:	bc 01       	movw	r22, r24
    1b7c:	cd 01       	movw	r24, r26
    1b7e:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1b82:	dc 01       	movw	r26, r24
    1b84:	cb 01       	movw	r24, r22
    1b86:	9c ab       	std	Y+52, r25	; 0x34
    1b88:	8b ab       	std	Y+51, r24	; 0x33
    1b8a:	0f c0       	rjmp	.+30     	; 0x1baa <LCD_init+0x104>
    1b8c:	80 e9       	ldi	r24, 0x90	; 144
    1b8e:	91 e0       	ldi	r25, 0x01	; 1
    1b90:	9e ab       	std	Y+54, r25	; 0x36
    1b92:	8d ab       	std	Y+53, r24	; 0x35
    1b94:	8d a9       	ldd	r24, Y+53	; 0x35
    1b96:	9e a9       	ldd	r25, Y+54	; 0x36
    1b98:	01 97       	sbiw	r24, 0x01	; 1
    1b9a:	f1 f7       	brne	.-4      	; 0x1b98 <LCD_init+0xf2>
    1b9c:	9e ab       	std	Y+54, r25	; 0x36
    1b9e:	8d ab       	std	Y+53, r24	; 0x35
    1ba0:	8b a9       	ldd	r24, Y+51	; 0x33
    1ba2:	9c a9       	ldd	r25, Y+52	; 0x34
    1ba4:	01 97       	sbiw	r24, 0x01	; 1
    1ba6:	9c ab       	std	Y+52, r25	; 0x34
    1ba8:	8b ab       	std	Y+51, r24	; 0x33
    1baa:	8b a9       	ldd	r24, Y+51	; 0x33
    1bac:	9c a9       	ldd	r25, Y+52	; 0x34
    1bae:	89 2b       	or	r24, r25
    1bb0:	69 f7       	brne	.-38     	; 0x1b8c <LCD_init+0xe6>
    1bb2:	14 c0       	rjmp	.+40     	; 0x1bdc <LCD_init+0x136>
    1bb4:	6f a5       	ldd	r22, Y+47	; 0x2f
    1bb6:	78 a9       	ldd	r23, Y+48	; 0x30
    1bb8:	89 a9       	ldd	r24, Y+49	; 0x31
    1bba:	9a a9       	ldd	r25, Y+50	; 0x32
    1bbc:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	9c ab       	std	Y+52, r25	; 0x34
    1bc6:	8b ab       	std	Y+51, r24	; 0x33
    1bc8:	8b a9       	ldd	r24, Y+51	; 0x33
    1bca:	9c a9       	ldd	r25, Y+52	; 0x34
    1bcc:	98 af       	std	Y+56, r25	; 0x38
    1bce:	8f ab       	std	Y+55, r24	; 0x37
    1bd0:	8f a9       	ldd	r24, Y+55	; 0x37
    1bd2:	98 ad       	ldd	r25, Y+56	; 0x38
    1bd4:	01 97       	sbiw	r24, 0x01	; 1
    1bd6:	f1 f7       	brne	.-4      	; 0x1bd4 <LCD_init+0x12e>
    1bd8:	98 af       	std	Y+56, r25	; 0x38
    1bda:	8f ab       	std	Y+55, r24	; 0x37
    1bdc:	88 e2       	ldi	r24, 0x28	; 40
    1bde:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    1be2:	80 e0       	ldi	r24, 0x00	; 0
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	a0 e8       	ldi	r26, 0x80	; 128
    1be8:	bf e3       	ldi	r27, 0x3F	; 63
    1bea:	8d 83       	std	Y+5, r24	; 0x05
    1bec:	9e 83       	std	Y+6, r25	; 0x06
    1bee:	af 83       	std	Y+7, r26	; 0x07
    1bf0:	b8 87       	std	Y+8, r27	; 0x08
    1bf2:	20 e0       	ldi	r18, 0x00	; 0
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	4a e7       	ldi	r20, 0x7A	; 122
    1bf8:	55 e4       	ldi	r21, 0x45	; 69
    1bfa:	6d 81       	ldd	r22, Y+5	; 0x05
    1bfc:	7e 81       	ldd	r23, Y+6	; 0x06
    1bfe:	8f 81       	ldd	r24, Y+7	; 0x07
    1c00:	98 85       	ldd	r25, Y+8	; 0x08
    1c02:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1c06:	dc 01       	movw	r26, r24
    1c08:	cb 01       	movw	r24, r22
    1c0a:	8d a3       	std	Y+37, r24	; 0x25
    1c0c:	9e a3       	std	Y+38, r25	; 0x26
    1c0e:	af a3       	std	Y+39, r26	; 0x27
    1c10:	b8 a7       	std	Y+40, r27	; 0x28
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	40 e8       	ldi	r20, 0x80	; 128
    1c18:	5f e3       	ldi	r21, 0x3F	; 63
    1c1a:	6d a1       	ldd	r22, Y+37	; 0x25
    1c1c:	7e a1       	ldd	r23, Y+38	; 0x26
    1c1e:	8f a1       	ldd	r24, Y+39	; 0x27
    1c20:	98 a5       	ldd	r25, Y+40	; 0x28
    1c22:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1c26:	88 23       	and	r24, r24
    1c28:	2c f4       	brge	.+10     	; 0x1c34 <LCD_init+0x18e>
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	9a a7       	std	Y+42, r25	; 0x2a
    1c30:	89 a7       	std	Y+41, r24	; 0x29
    1c32:	3f c0       	rjmp	.+126    	; 0x1cb2 <LCD_init+0x20c>
    1c34:	20 e0       	ldi	r18, 0x00	; 0
    1c36:	3f ef       	ldi	r19, 0xFF	; 255
    1c38:	4f e7       	ldi	r20, 0x7F	; 127
    1c3a:	57 e4       	ldi	r21, 0x47	; 71
    1c3c:	6d a1       	ldd	r22, Y+37	; 0x25
    1c3e:	7e a1       	ldd	r23, Y+38	; 0x26
    1c40:	8f a1       	ldd	r24, Y+39	; 0x27
    1c42:	98 a5       	ldd	r25, Y+40	; 0x28
    1c44:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1c48:	18 16       	cp	r1, r24
    1c4a:	4c f5       	brge	.+82     	; 0x1c9e <LCD_init+0x1f8>
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	40 e2       	ldi	r20, 0x20	; 32
    1c52:	51 e4       	ldi	r21, 0x41	; 65
    1c54:	6d 81       	ldd	r22, Y+5	; 0x05
    1c56:	7e 81       	ldd	r23, Y+6	; 0x06
    1c58:	8f 81       	ldd	r24, Y+7	; 0x07
    1c5a:	98 85       	ldd	r25, Y+8	; 0x08
    1c5c:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1c60:	dc 01       	movw	r26, r24
    1c62:	cb 01       	movw	r24, r22
    1c64:	bc 01       	movw	r22, r24
    1c66:	cd 01       	movw	r24, r26
    1c68:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1c6c:	dc 01       	movw	r26, r24
    1c6e:	cb 01       	movw	r24, r22
    1c70:	9a a7       	std	Y+42, r25	; 0x2a
    1c72:	89 a7       	std	Y+41, r24	; 0x29
    1c74:	0f c0       	rjmp	.+30     	; 0x1c94 <LCD_init+0x1ee>
    1c76:	80 e9       	ldi	r24, 0x90	; 144
    1c78:	91 e0       	ldi	r25, 0x01	; 1
    1c7a:	9c a7       	std	Y+44, r25	; 0x2c
    1c7c:	8b a7       	std	Y+43, r24	; 0x2b
    1c7e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c80:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c82:	01 97       	sbiw	r24, 0x01	; 1
    1c84:	f1 f7       	brne	.-4      	; 0x1c82 <LCD_init+0x1dc>
    1c86:	9c a7       	std	Y+44, r25	; 0x2c
    1c88:	8b a7       	std	Y+43, r24	; 0x2b
    1c8a:	89 a5       	ldd	r24, Y+41	; 0x29
    1c8c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c8e:	01 97       	sbiw	r24, 0x01	; 1
    1c90:	9a a7       	std	Y+42, r25	; 0x2a
    1c92:	89 a7       	std	Y+41, r24	; 0x29
    1c94:	89 a5       	ldd	r24, Y+41	; 0x29
    1c96:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c98:	89 2b       	or	r24, r25
    1c9a:	69 f7       	brne	.-38     	; 0x1c76 <LCD_init+0x1d0>
    1c9c:	14 c0       	rjmp	.+40     	; 0x1cc6 <LCD_init+0x220>
    1c9e:	6d a1       	ldd	r22, Y+37	; 0x25
    1ca0:	7e a1       	ldd	r23, Y+38	; 0x26
    1ca2:	8f a1       	ldd	r24, Y+39	; 0x27
    1ca4:	98 a5       	ldd	r25, Y+40	; 0x28
    1ca6:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1caa:	dc 01       	movw	r26, r24
    1cac:	cb 01       	movw	r24, r22
    1cae:	9a a7       	std	Y+42, r25	; 0x2a
    1cb0:	89 a7       	std	Y+41, r24	; 0x29
    1cb2:	89 a5       	ldd	r24, Y+41	; 0x29
    1cb4:	9a a5       	ldd	r25, Y+42	; 0x2a
    1cb6:	9e a7       	std	Y+46, r25	; 0x2e
    1cb8:	8d a7       	std	Y+45, r24	; 0x2d
    1cba:	8d a5       	ldd	r24, Y+45	; 0x2d
    1cbc:	9e a5       	ldd	r25, Y+46	; 0x2e
    1cbe:	01 97       	sbiw	r24, 0x01	; 1
    1cc0:	f1 f7       	brne	.-4      	; 0x1cbe <LCD_init+0x218>
    1cc2:	9e a7       	std	Y+46, r25	; 0x2e
    1cc4:	8d a7       	std	Y+45, r24	; 0x2d
    1cc6:	8e e0       	ldi	r24, 0x0E	; 14
    1cc8:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    1ccc:	80 e0       	ldi	r24, 0x00	; 0
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	a0 e8       	ldi	r26, 0x80	; 128
    1cd2:	bf e3       	ldi	r27, 0x3F	; 63
    1cd4:	89 87       	std	Y+9, r24	; 0x09
    1cd6:	9a 87       	std	Y+10, r25	; 0x0a
    1cd8:	ab 87       	std	Y+11, r26	; 0x0b
    1cda:	bc 87       	std	Y+12, r27	; 0x0c
    1cdc:	20 e0       	ldi	r18, 0x00	; 0
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	4a e7       	ldi	r20, 0x7A	; 122
    1ce2:	55 e4       	ldi	r21, 0x45	; 69
    1ce4:	69 85       	ldd	r22, Y+9	; 0x09
    1ce6:	7a 85       	ldd	r23, Y+10	; 0x0a
    1ce8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1cea:	9c 85       	ldd	r25, Y+12	; 0x0c
    1cec:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1cf0:	dc 01       	movw	r26, r24
    1cf2:	cb 01       	movw	r24, r22
    1cf4:	8b 8f       	std	Y+27, r24	; 0x1b
    1cf6:	9c 8f       	std	Y+28, r25	; 0x1c
    1cf8:	ad 8f       	std	Y+29, r26	; 0x1d
    1cfa:	be 8f       	std	Y+30, r27	; 0x1e
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	40 e8       	ldi	r20, 0x80	; 128
    1d02:	5f e3       	ldi	r21, 0x3F	; 63
    1d04:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1d06:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1d08:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d0a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d0c:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1d10:	88 23       	and	r24, r24
    1d12:	2c f4       	brge	.+10     	; 0x1d1e <LCD_init+0x278>
    1d14:	81 e0       	ldi	r24, 0x01	; 1
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	98 a3       	std	Y+32, r25	; 0x20
    1d1a:	8f 8f       	std	Y+31, r24	; 0x1f
    1d1c:	3f c0       	rjmp	.+126    	; 0x1d9c <LCD_init+0x2f6>
    1d1e:	20 e0       	ldi	r18, 0x00	; 0
    1d20:	3f ef       	ldi	r19, 0xFF	; 255
    1d22:	4f e7       	ldi	r20, 0x7F	; 127
    1d24:	57 e4       	ldi	r21, 0x47	; 71
    1d26:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1d28:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1d2a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d2c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d2e:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1d32:	18 16       	cp	r1, r24
    1d34:	4c f5       	brge	.+82     	; 0x1d88 <LCD_init+0x2e2>
    1d36:	20 e0       	ldi	r18, 0x00	; 0
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	40 e2       	ldi	r20, 0x20	; 32
    1d3c:	51 e4       	ldi	r21, 0x41	; 65
    1d3e:	69 85       	ldd	r22, Y+9	; 0x09
    1d40:	7a 85       	ldd	r23, Y+10	; 0x0a
    1d42:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d44:	9c 85       	ldd	r25, Y+12	; 0x0c
    1d46:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1d4a:	dc 01       	movw	r26, r24
    1d4c:	cb 01       	movw	r24, r22
    1d4e:	bc 01       	movw	r22, r24
    1d50:	cd 01       	movw	r24, r26
    1d52:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1d56:	dc 01       	movw	r26, r24
    1d58:	cb 01       	movw	r24, r22
    1d5a:	98 a3       	std	Y+32, r25	; 0x20
    1d5c:	8f 8f       	std	Y+31, r24	; 0x1f
    1d5e:	0f c0       	rjmp	.+30     	; 0x1d7e <LCD_init+0x2d8>
    1d60:	80 e9       	ldi	r24, 0x90	; 144
    1d62:	91 e0       	ldi	r25, 0x01	; 1
    1d64:	9a a3       	std	Y+34, r25	; 0x22
    1d66:	89 a3       	std	Y+33, r24	; 0x21
    1d68:	89 a1       	ldd	r24, Y+33	; 0x21
    1d6a:	9a a1       	ldd	r25, Y+34	; 0x22
    1d6c:	01 97       	sbiw	r24, 0x01	; 1
    1d6e:	f1 f7       	brne	.-4      	; 0x1d6c <LCD_init+0x2c6>
    1d70:	9a a3       	std	Y+34, r25	; 0x22
    1d72:	89 a3       	std	Y+33, r24	; 0x21
    1d74:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d76:	98 a1       	ldd	r25, Y+32	; 0x20
    1d78:	01 97       	sbiw	r24, 0x01	; 1
    1d7a:	98 a3       	std	Y+32, r25	; 0x20
    1d7c:	8f 8f       	std	Y+31, r24	; 0x1f
    1d7e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d80:	98 a1       	ldd	r25, Y+32	; 0x20
    1d82:	89 2b       	or	r24, r25
    1d84:	69 f7       	brne	.-38     	; 0x1d60 <LCD_init+0x2ba>
    1d86:	14 c0       	rjmp	.+40     	; 0x1db0 <LCD_init+0x30a>
    1d88:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1d8a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1d8c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d8e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d90:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1d94:	dc 01       	movw	r26, r24
    1d96:	cb 01       	movw	r24, r22
    1d98:	98 a3       	std	Y+32, r25	; 0x20
    1d9a:	8f 8f       	std	Y+31, r24	; 0x1f
    1d9c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d9e:	98 a1       	ldd	r25, Y+32	; 0x20
    1da0:	9c a3       	std	Y+36, r25	; 0x24
    1da2:	8b a3       	std	Y+35, r24	; 0x23
    1da4:	8b a1       	ldd	r24, Y+35	; 0x23
    1da6:	9c a1       	ldd	r25, Y+36	; 0x24
    1da8:	01 97       	sbiw	r24, 0x01	; 1
    1daa:	f1 f7       	brne	.-4      	; 0x1da8 <LCD_init+0x302>
    1dac:	9c a3       	std	Y+36, r25	; 0x24
    1dae:	8b a3       	std	Y+35, r24	; 0x23
    1db0:	81 e0       	ldi	r24, 0x01	; 1
    1db2:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	a0 ea       	ldi	r26, 0xA0	; 160
    1dbc:	b0 e4       	ldi	r27, 0x40	; 64
    1dbe:	8d 87       	std	Y+13, r24	; 0x0d
    1dc0:	9e 87       	std	Y+14, r25	; 0x0e
    1dc2:	af 87       	std	Y+15, r26	; 0x0f
    1dc4:	b8 8b       	std	Y+16, r27	; 0x10
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	4a e7       	ldi	r20, 0x7A	; 122
    1dcc:	55 e4       	ldi	r21, 0x45	; 69
    1dce:	6d 85       	ldd	r22, Y+13	; 0x0d
    1dd0:	7e 85       	ldd	r23, Y+14	; 0x0e
    1dd2:	8f 85       	ldd	r24, Y+15	; 0x0f
    1dd4:	98 89       	ldd	r25, Y+16	; 0x10
    1dd6:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1dda:	dc 01       	movw	r26, r24
    1ddc:	cb 01       	movw	r24, r22
    1dde:	89 8b       	std	Y+17, r24	; 0x11
    1de0:	9a 8b       	std	Y+18, r25	; 0x12
    1de2:	ab 8b       	std	Y+19, r26	; 0x13
    1de4:	bc 8b       	std	Y+20, r27	; 0x14
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	40 e8       	ldi	r20, 0x80	; 128
    1dec:	5f e3       	ldi	r21, 0x3F	; 63
    1dee:	69 89       	ldd	r22, Y+17	; 0x11
    1df0:	7a 89       	ldd	r23, Y+18	; 0x12
    1df2:	8b 89       	ldd	r24, Y+19	; 0x13
    1df4:	9c 89       	ldd	r25, Y+20	; 0x14
    1df6:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1dfa:	88 23       	and	r24, r24
    1dfc:	2c f4       	brge	.+10     	; 0x1e08 <LCD_init+0x362>
    1dfe:	81 e0       	ldi	r24, 0x01	; 1
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	9e 8b       	std	Y+22, r25	; 0x16
    1e04:	8d 8b       	std	Y+21, r24	; 0x15
    1e06:	3f c0       	rjmp	.+126    	; 0x1e86 <LCD_init+0x3e0>
    1e08:	20 e0       	ldi	r18, 0x00	; 0
    1e0a:	3f ef       	ldi	r19, 0xFF	; 255
    1e0c:	4f e7       	ldi	r20, 0x7F	; 127
    1e0e:	57 e4       	ldi	r21, 0x47	; 71
    1e10:	69 89       	ldd	r22, Y+17	; 0x11
    1e12:	7a 89       	ldd	r23, Y+18	; 0x12
    1e14:	8b 89       	ldd	r24, Y+19	; 0x13
    1e16:	9c 89       	ldd	r25, Y+20	; 0x14
    1e18:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1e1c:	18 16       	cp	r1, r24
    1e1e:	4c f5       	brge	.+82     	; 0x1e72 <LCD_init+0x3cc>
    1e20:	20 e0       	ldi	r18, 0x00	; 0
    1e22:	30 e0       	ldi	r19, 0x00	; 0
    1e24:	40 e2       	ldi	r20, 0x20	; 32
    1e26:	51 e4       	ldi	r21, 0x41	; 65
    1e28:	6d 85       	ldd	r22, Y+13	; 0x0d
    1e2a:	7e 85       	ldd	r23, Y+14	; 0x0e
    1e2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e2e:	98 89       	ldd	r25, Y+16	; 0x10
    1e30:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1e34:	dc 01       	movw	r26, r24
    1e36:	cb 01       	movw	r24, r22
    1e38:	bc 01       	movw	r22, r24
    1e3a:	cd 01       	movw	r24, r26
    1e3c:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1e40:	dc 01       	movw	r26, r24
    1e42:	cb 01       	movw	r24, r22
    1e44:	9e 8b       	std	Y+22, r25	; 0x16
    1e46:	8d 8b       	std	Y+21, r24	; 0x15
    1e48:	0f c0       	rjmp	.+30     	; 0x1e68 <LCD_init+0x3c2>
    1e4a:	80 e9       	ldi	r24, 0x90	; 144
    1e4c:	91 e0       	ldi	r25, 0x01	; 1
    1e4e:	98 8f       	std	Y+24, r25	; 0x18
    1e50:	8f 8b       	std	Y+23, r24	; 0x17
    1e52:	8f 89       	ldd	r24, Y+23	; 0x17
    1e54:	98 8d       	ldd	r25, Y+24	; 0x18
    1e56:	01 97       	sbiw	r24, 0x01	; 1
    1e58:	f1 f7       	brne	.-4      	; 0x1e56 <LCD_init+0x3b0>
    1e5a:	98 8f       	std	Y+24, r25	; 0x18
    1e5c:	8f 8b       	std	Y+23, r24	; 0x17
    1e5e:	8d 89       	ldd	r24, Y+21	; 0x15
    1e60:	9e 89       	ldd	r25, Y+22	; 0x16
    1e62:	01 97       	sbiw	r24, 0x01	; 1
    1e64:	9e 8b       	std	Y+22, r25	; 0x16
    1e66:	8d 8b       	std	Y+21, r24	; 0x15
    1e68:	8d 89       	ldd	r24, Y+21	; 0x15
    1e6a:	9e 89       	ldd	r25, Y+22	; 0x16
    1e6c:	89 2b       	or	r24, r25
    1e6e:	69 f7       	brne	.-38     	; 0x1e4a <LCD_init+0x3a4>
    1e70:	14 c0       	rjmp	.+40     	; 0x1e9a <LCD_init+0x3f4>
    1e72:	69 89       	ldd	r22, Y+17	; 0x11
    1e74:	7a 89       	ldd	r23, Y+18	; 0x12
    1e76:	8b 89       	ldd	r24, Y+19	; 0x13
    1e78:	9c 89       	ldd	r25, Y+20	; 0x14
    1e7a:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1e7e:	dc 01       	movw	r26, r24
    1e80:	cb 01       	movw	r24, r22
    1e82:	9e 8b       	std	Y+22, r25	; 0x16
    1e84:	8d 8b       	std	Y+21, r24	; 0x15
    1e86:	8d 89       	ldd	r24, Y+21	; 0x15
    1e88:	9e 89       	ldd	r25, Y+22	; 0x16
    1e8a:	9a 8f       	std	Y+26, r25	; 0x1a
    1e8c:	89 8f       	std	Y+25, r24	; 0x19
    1e8e:	89 8d       	ldd	r24, Y+25	; 0x19
    1e90:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1e92:	01 97       	sbiw	r24, 0x01	; 1
    1e94:	f1 f7       	brne	.-4      	; 0x1e92 <LCD_init+0x3ec>
    1e96:	9a 8f       	std	Y+26, r25	; 0x1a
    1e98:	89 8f       	std	Y+25, r24	; 0x19
    1e9a:	86 e0       	ldi	r24, 0x06	; 6
    1e9c:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    1ea0:	00 00       	nop
    1ea2:	e8 96       	adiw	r28, 0x38	; 56
    1ea4:	0f b6       	in	r0, 0x3f	; 63
    1ea6:	f8 94       	cli
    1ea8:	de bf       	out	0x3e, r29	; 62
    1eaa:	0f be       	out	0x3f, r0	; 63
    1eac:	cd bf       	out	0x3d, r28	; 61
    1eae:	df 91       	pop	r29
    1eb0:	cf 91       	pop	r28
    1eb2:	08 95       	ret

00001eb4 <LCD_sendData>:
    1eb4:	cf 93       	push	r28
    1eb6:	df 93       	push	r29
    1eb8:	cd b7       	in	r28, 0x3d	; 61
    1eba:	de b7       	in	r29, 0x3e	; 62
    1ebc:	6d 97       	sbiw	r28, 0x1d	; 29
    1ebe:	0f b6       	in	r0, 0x3f	; 63
    1ec0:	f8 94       	cli
    1ec2:	de bf       	out	0x3e, r29	; 62
    1ec4:	0f be       	out	0x3f, r0	; 63
    1ec6:	cd bf       	out	0x3d, r28	; 61
    1ec8:	8d 8f       	std	Y+29, r24	; 0x1d
    1eca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ecc:	82 95       	swap	r24
    1ece:	8f 70       	andi	r24, 0x0F	; 15
    1ed0:	81 70       	andi	r24, 0x01	; 1
    1ed2:	68 2f       	mov	r22, r24
    1ed4:	82 e1       	ldi	r24, 0x12	; 18
    1ed6:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    1eda:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1edc:	82 95       	swap	r24
    1ede:	86 95       	lsr	r24
    1ee0:	87 70       	andi	r24, 0x07	; 7
    1ee2:	81 70       	andi	r24, 0x01	; 1
    1ee4:	68 2f       	mov	r22, r24
    1ee6:	83 e1       	ldi	r24, 0x13	; 19
    1ee8:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    1eec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1eee:	82 95       	swap	r24
    1ef0:	86 95       	lsr	r24
    1ef2:	86 95       	lsr	r24
    1ef4:	83 70       	andi	r24, 0x03	; 3
    1ef6:	81 70       	andi	r24, 0x01	; 1
    1ef8:	68 2f       	mov	r22, r24
    1efa:	84 e1       	ldi	r24, 0x14	; 20
    1efc:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    1f00:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f02:	88 1f       	adc	r24, r24
    1f04:	88 27       	eor	r24, r24
    1f06:	88 1f       	adc	r24, r24
    1f08:	68 2f       	mov	r22, r24
    1f0a:	85 e1       	ldi	r24, 0x15	; 21
    1f0c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    1f10:	61 e0       	ldi	r22, 0x01	; 1
    1f12:	8e e1       	ldi	r24, 0x1E	; 30
    1f14:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	a0 e8       	ldi	r26, 0x80	; 128
    1f1e:	bf e3       	ldi	r27, 0x3F	; 63
    1f20:	89 83       	std	Y+1, r24	; 0x01
    1f22:	9a 83       	std	Y+2, r25	; 0x02
    1f24:	ab 83       	std	Y+3, r26	; 0x03
    1f26:	bc 83       	std	Y+4, r27	; 0x04
    1f28:	20 e0       	ldi	r18, 0x00	; 0
    1f2a:	30 e0       	ldi	r19, 0x00	; 0
    1f2c:	4a e7       	ldi	r20, 0x7A	; 122
    1f2e:	55 e4       	ldi	r21, 0x45	; 69
    1f30:	69 81       	ldd	r22, Y+1	; 0x01
    1f32:	7a 81       	ldd	r23, Y+2	; 0x02
    1f34:	8b 81       	ldd	r24, Y+3	; 0x03
    1f36:	9c 81       	ldd	r25, Y+4	; 0x04
    1f38:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	cb 01       	movw	r24, r22
    1f40:	8b 8b       	std	Y+19, r24	; 0x13
    1f42:	9c 8b       	std	Y+20, r25	; 0x14
    1f44:	ad 8b       	std	Y+21, r26	; 0x15
    1f46:	be 8b       	std	Y+22, r27	; 0x16
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	40 e8       	ldi	r20, 0x80	; 128
    1f4e:	5f e3       	ldi	r21, 0x3F	; 63
    1f50:	6b 89       	ldd	r22, Y+19	; 0x13
    1f52:	7c 89       	ldd	r23, Y+20	; 0x14
    1f54:	8d 89       	ldd	r24, Y+21	; 0x15
    1f56:	9e 89       	ldd	r25, Y+22	; 0x16
    1f58:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    1f5c:	88 23       	and	r24, r24
    1f5e:	2c f4       	brge	.+10     	; 0x1f6a <LCD_sendData+0xb6>
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	98 8f       	std	Y+24, r25	; 0x18
    1f66:	8f 8b       	std	Y+23, r24	; 0x17
    1f68:	3f c0       	rjmp	.+126    	; 0x1fe8 <LCD_sendData+0x134>
    1f6a:	20 e0       	ldi	r18, 0x00	; 0
    1f6c:	3f ef       	ldi	r19, 0xFF	; 255
    1f6e:	4f e7       	ldi	r20, 0x7F	; 127
    1f70:	57 e4       	ldi	r21, 0x47	; 71
    1f72:	6b 89       	ldd	r22, Y+19	; 0x13
    1f74:	7c 89       	ldd	r23, Y+20	; 0x14
    1f76:	8d 89       	ldd	r24, Y+21	; 0x15
    1f78:	9e 89       	ldd	r25, Y+22	; 0x16
    1f7a:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    1f7e:	18 16       	cp	r1, r24
    1f80:	4c f5       	brge	.+82     	; 0x1fd4 <LCD_sendData+0x120>
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	40 e2       	ldi	r20, 0x20	; 32
    1f88:	51 e4       	ldi	r21, 0x41	; 65
    1f8a:	69 81       	ldd	r22, Y+1	; 0x01
    1f8c:	7a 81       	ldd	r23, Y+2	; 0x02
    1f8e:	8b 81       	ldd	r24, Y+3	; 0x03
    1f90:	9c 81       	ldd	r25, Y+4	; 0x04
    1f92:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    1f96:	dc 01       	movw	r26, r24
    1f98:	cb 01       	movw	r24, r22
    1f9a:	bc 01       	movw	r22, r24
    1f9c:	cd 01       	movw	r24, r26
    1f9e:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1fa2:	dc 01       	movw	r26, r24
    1fa4:	cb 01       	movw	r24, r22
    1fa6:	98 8f       	std	Y+24, r25	; 0x18
    1fa8:	8f 8b       	std	Y+23, r24	; 0x17
    1faa:	0f c0       	rjmp	.+30     	; 0x1fca <LCD_sendData+0x116>
    1fac:	80 e9       	ldi	r24, 0x90	; 144
    1fae:	91 e0       	ldi	r25, 0x01	; 1
    1fb0:	9a 8f       	std	Y+26, r25	; 0x1a
    1fb2:	89 8f       	std	Y+25, r24	; 0x19
    1fb4:	89 8d       	ldd	r24, Y+25	; 0x19
    1fb6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1fb8:	01 97       	sbiw	r24, 0x01	; 1
    1fba:	f1 f7       	brne	.-4      	; 0x1fb8 <LCD_sendData+0x104>
    1fbc:	9a 8f       	std	Y+26, r25	; 0x1a
    1fbe:	89 8f       	std	Y+25, r24	; 0x19
    1fc0:	8f 89       	ldd	r24, Y+23	; 0x17
    1fc2:	98 8d       	ldd	r25, Y+24	; 0x18
    1fc4:	01 97       	sbiw	r24, 0x01	; 1
    1fc6:	98 8f       	std	Y+24, r25	; 0x18
    1fc8:	8f 8b       	std	Y+23, r24	; 0x17
    1fca:	8f 89       	ldd	r24, Y+23	; 0x17
    1fcc:	98 8d       	ldd	r25, Y+24	; 0x18
    1fce:	89 2b       	or	r24, r25
    1fd0:	69 f7       	brne	.-38     	; 0x1fac <LCD_sendData+0xf8>
    1fd2:	14 c0       	rjmp	.+40     	; 0x1ffc <LCD_sendData+0x148>
    1fd4:	6b 89       	ldd	r22, Y+19	; 0x13
    1fd6:	7c 89       	ldd	r23, Y+20	; 0x14
    1fd8:	8d 89       	ldd	r24, Y+21	; 0x15
    1fda:	9e 89       	ldd	r25, Y+22	; 0x16
    1fdc:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    1fe0:	dc 01       	movw	r26, r24
    1fe2:	cb 01       	movw	r24, r22
    1fe4:	98 8f       	std	Y+24, r25	; 0x18
    1fe6:	8f 8b       	std	Y+23, r24	; 0x17
    1fe8:	8f 89       	ldd	r24, Y+23	; 0x17
    1fea:	98 8d       	ldd	r25, Y+24	; 0x18
    1fec:	9c 8f       	std	Y+28, r25	; 0x1c
    1fee:	8b 8f       	std	Y+27, r24	; 0x1b
    1ff0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ff2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ff4:	01 97       	sbiw	r24, 0x01	; 1
    1ff6:	f1 f7       	brne	.-4      	; 0x1ff4 <LCD_sendData+0x140>
    1ff8:	9c 8f       	std	Y+28, r25	; 0x1c
    1ffa:	8b 8f       	std	Y+27, r24	; 0x1b
    1ffc:	60 e0       	ldi	r22, 0x00	; 0
    1ffe:	8e e1       	ldi	r24, 0x1E	; 30
    2000:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2004:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2006:	81 70       	andi	r24, 0x01	; 1
    2008:	68 2f       	mov	r22, r24
    200a:	82 e1       	ldi	r24, 0x12	; 18
    200c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2010:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2012:	86 95       	lsr	r24
    2014:	81 70       	andi	r24, 0x01	; 1
    2016:	68 2f       	mov	r22, r24
    2018:	83 e1       	ldi	r24, 0x13	; 19
    201a:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    201e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2020:	86 95       	lsr	r24
    2022:	86 95       	lsr	r24
    2024:	81 70       	andi	r24, 0x01	; 1
    2026:	68 2f       	mov	r22, r24
    2028:	84 e1       	ldi	r24, 0x14	; 20
    202a:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    202e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2030:	86 95       	lsr	r24
    2032:	86 95       	lsr	r24
    2034:	86 95       	lsr	r24
    2036:	81 70       	andi	r24, 0x01	; 1
    2038:	68 2f       	mov	r22, r24
    203a:	85 e1       	ldi	r24, 0x15	; 21
    203c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2040:	61 e0       	ldi	r22, 0x01	; 1
    2042:	8e e1       	ldi	r24, 0x1E	; 30
    2044:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2048:	80 e0       	ldi	r24, 0x00	; 0
    204a:	90 e0       	ldi	r25, 0x00	; 0
    204c:	a0 e8       	ldi	r26, 0x80	; 128
    204e:	bf e3       	ldi	r27, 0x3F	; 63
    2050:	8d 83       	std	Y+5, r24	; 0x05
    2052:	9e 83       	std	Y+6, r25	; 0x06
    2054:	af 83       	std	Y+7, r26	; 0x07
    2056:	b8 87       	std	Y+8, r27	; 0x08
    2058:	20 e0       	ldi	r18, 0x00	; 0
    205a:	30 e0       	ldi	r19, 0x00	; 0
    205c:	4a e7       	ldi	r20, 0x7A	; 122
    205e:	55 e4       	ldi	r21, 0x45	; 69
    2060:	6d 81       	ldd	r22, Y+5	; 0x05
    2062:	7e 81       	ldd	r23, Y+6	; 0x06
    2064:	8f 81       	ldd	r24, Y+7	; 0x07
    2066:	98 85       	ldd	r25, Y+8	; 0x08
    2068:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    206c:	dc 01       	movw	r26, r24
    206e:	cb 01       	movw	r24, r22
    2070:	89 87       	std	Y+9, r24	; 0x09
    2072:	9a 87       	std	Y+10, r25	; 0x0a
    2074:	ab 87       	std	Y+11, r26	; 0x0b
    2076:	bc 87       	std	Y+12, r27	; 0x0c
    2078:	20 e0       	ldi	r18, 0x00	; 0
    207a:	30 e0       	ldi	r19, 0x00	; 0
    207c:	40 e8       	ldi	r20, 0x80	; 128
    207e:	5f e3       	ldi	r21, 0x3F	; 63
    2080:	69 85       	ldd	r22, Y+9	; 0x09
    2082:	7a 85       	ldd	r23, Y+10	; 0x0a
    2084:	8b 85       	ldd	r24, Y+11	; 0x0b
    2086:	9c 85       	ldd	r25, Y+12	; 0x0c
    2088:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    208c:	88 23       	and	r24, r24
    208e:	2c f4       	brge	.+10     	; 0x209a <LCD_sendData+0x1e6>
    2090:	81 e0       	ldi	r24, 0x01	; 1
    2092:	90 e0       	ldi	r25, 0x00	; 0
    2094:	9e 87       	std	Y+14, r25	; 0x0e
    2096:	8d 87       	std	Y+13, r24	; 0x0d
    2098:	3f c0       	rjmp	.+126    	; 0x2118 <LCD_sendData+0x264>
    209a:	20 e0       	ldi	r18, 0x00	; 0
    209c:	3f ef       	ldi	r19, 0xFF	; 255
    209e:	4f e7       	ldi	r20, 0x7F	; 127
    20a0:	57 e4       	ldi	r21, 0x47	; 71
    20a2:	69 85       	ldd	r22, Y+9	; 0x09
    20a4:	7a 85       	ldd	r23, Y+10	; 0x0a
    20a6:	8b 85       	ldd	r24, Y+11	; 0x0b
    20a8:	9c 85       	ldd	r25, Y+12	; 0x0c
    20aa:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    20ae:	18 16       	cp	r1, r24
    20b0:	4c f5       	brge	.+82     	; 0x2104 <LCD_sendData+0x250>
    20b2:	20 e0       	ldi	r18, 0x00	; 0
    20b4:	30 e0       	ldi	r19, 0x00	; 0
    20b6:	40 e2       	ldi	r20, 0x20	; 32
    20b8:	51 e4       	ldi	r21, 0x41	; 65
    20ba:	6d 81       	ldd	r22, Y+5	; 0x05
    20bc:	7e 81       	ldd	r23, Y+6	; 0x06
    20be:	8f 81       	ldd	r24, Y+7	; 0x07
    20c0:	98 85       	ldd	r25, Y+8	; 0x08
    20c2:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    20c6:	dc 01       	movw	r26, r24
    20c8:	cb 01       	movw	r24, r22
    20ca:	bc 01       	movw	r22, r24
    20cc:	cd 01       	movw	r24, r26
    20ce:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    20d2:	dc 01       	movw	r26, r24
    20d4:	cb 01       	movw	r24, r22
    20d6:	9e 87       	std	Y+14, r25	; 0x0e
    20d8:	8d 87       	std	Y+13, r24	; 0x0d
    20da:	0f c0       	rjmp	.+30     	; 0x20fa <LCD_sendData+0x246>
    20dc:	80 e9       	ldi	r24, 0x90	; 144
    20de:	91 e0       	ldi	r25, 0x01	; 1
    20e0:	98 8b       	std	Y+16, r25	; 0x10
    20e2:	8f 87       	std	Y+15, r24	; 0x0f
    20e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    20e6:	98 89       	ldd	r25, Y+16	; 0x10
    20e8:	01 97       	sbiw	r24, 0x01	; 1
    20ea:	f1 f7       	brne	.-4      	; 0x20e8 <LCD_sendData+0x234>
    20ec:	98 8b       	std	Y+16, r25	; 0x10
    20ee:	8f 87       	std	Y+15, r24	; 0x0f
    20f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    20f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    20f4:	01 97       	sbiw	r24, 0x01	; 1
    20f6:	9e 87       	std	Y+14, r25	; 0x0e
    20f8:	8d 87       	std	Y+13, r24	; 0x0d
    20fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    20fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    20fe:	89 2b       	or	r24, r25
    2100:	69 f7       	brne	.-38     	; 0x20dc <LCD_sendData+0x228>
    2102:	14 c0       	rjmp	.+40     	; 0x212c <LCD_sendData+0x278>
    2104:	69 85       	ldd	r22, Y+9	; 0x09
    2106:	7a 85       	ldd	r23, Y+10	; 0x0a
    2108:	8b 85       	ldd	r24, Y+11	; 0x0b
    210a:	9c 85       	ldd	r25, Y+12	; 0x0c
    210c:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    2110:	dc 01       	movw	r26, r24
    2112:	cb 01       	movw	r24, r22
    2114:	9e 87       	std	Y+14, r25	; 0x0e
    2116:	8d 87       	std	Y+13, r24	; 0x0d
    2118:	8d 85       	ldd	r24, Y+13	; 0x0d
    211a:	9e 85       	ldd	r25, Y+14	; 0x0e
    211c:	9a 8b       	std	Y+18, r25	; 0x12
    211e:	89 8b       	std	Y+17, r24	; 0x11
    2120:	89 89       	ldd	r24, Y+17	; 0x11
    2122:	9a 89       	ldd	r25, Y+18	; 0x12
    2124:	01 97       	sbiw	r24, 0x01	; 1
    2126:	f1 f7       	brne	.-4      	; 0x2124 <LCD_sendData+0x270>
    2128:	9a 8b       	std	Y+18, r25	; 0x12
    212a:	89 8b       	std	Y+17, r24	; 0x11
    212c:	60 e0       	ldi	r22, 0x00	; 0
    212e:	8e e1       	ldi	r24, 0x1E	; 30
    2130:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2134:	00 00       	nop
    2136:	6d 96       	adiw	r28, 0x1d	; 29
    2138:	0f b6       	in	r0, 0x3f	; 63
    213a:	f8 94       	cli
    213c:	de bf       	out	0x3e, r29	; 62
    213e:	0f be       	out	0x3f, r0	; 63
    2140:	cd bf       	out	0x3d, r28	; 61
    2142:	df 91       	pop	r29
    2144:	cf 91       	pop	r28
    2146:	08 95       	ret

00002148 <LCD_writeChar>:
    2148:	cf 93       	push	r28
    214a:	df 93       	push	r29
    214c:	1f 92       	push	r1
    214e:	cd b7       	in	r28, 0x3d	; 61
    2150:	de b7       	in	r29, 0x3e	; 62
    2152:	89 83       	std	Y+1, r24	; 0x01
    2154:	60 e0       	ldi	r22, 0x00	; 0
    2156:	87 e1       	ldi	r24, 0x17	; 23
    2158:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    215c:	61 e0       	ldi	r22, 0x01	; 1
    215e:	86 e1       	ldi	r24, 0x16	; 22
    2160:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2164:	89 81       	ldd	r24, Y+1	; 0x01
    2166:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <LCD_sendData>
    216a:	00 00       	nop
    216c:	0f 90       	pop	r0
    216e:	df 91       	pop	r29
    2170:	cf 91       	pop	r28
    2172:	08 95       	ret

00002174 <LCD_writeCmd>:
    2174:	cf 93       	push	r28
    2176:	df 93       	push	r29
    2178:	1f 92       	push	r1
    217a:	cd b7       	in	r28, 0x3d	; 61
    217c:	de b7       	in	r29, 0x3e	; 62
    217e:	89 83       	std	Y+1, r24	; 0x01
    2180:	60 e0       	ldi	r22, 0x00	; 0
    2182:	87 e1       	ldi	r24, 0x17	; 23
    2184:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2188:	60 e0       	ldi	r22, 0x00	; 0
    218a:	86 e1       	ldi	r24, 0x16	; 22
    218c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2190:	89 81       	ldd	r24, Y+1	; 0x01
    2192:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <LCD_sendData>
    2196:	00 00       	nop
    2198:	0f 90       	pop	r0
    219a:	df 91       	pop	r29
    219c:	cf 91       	pop	r28
    219e:	08 95       	ret

000021a0 <LCD_writeStr>:
    21a0:	cf 93       	push	r28
    21a2:	df 93       	push	r29
    21a4:	00 d0       	rcall	.+0      	; 0x21a6 <LCD_writeStr+0x6>
    21a6:	1f 92       	push	r1
    21a8:	cd b7       	in	r28, 0x3d	; 61
    21aa:	de b7       	in	r29, 0x3e	; 62
    21ac:	9b 83       	std	Y+3, r25	; 0x03
    21ae:	8a 83       	std	Y+2, r24	; 0x02
    21b0:	19 82       	std	Y+1, r1	; 0x01
    21b2:	0e c0       	rjmp	.+28     	; 0x21d0 <LCD_writeStr+0x30>
    21b4:	89 81       	ldd	r24, Y+1	; 0x01
    21b6:	88 2f       	mov	r24, r24
    21b8:	90 e0       	ldi	r25, 0x00	; 0
    21ba:	2a 81       	ldd	r18, Y+2	; 0x02
    21bc:	3b 81       	ldd	r19, Y+3	; 0x03
    21be:	82 0f       	add	r24, r18
    21c0:	93 1f       	adc	r25, r19
    21c2:	fc 01       	movw	r30, r24
    21c4:	80 81       	ld	r24, Z
    21c6:	0e 94 a4 10 	call	0x2148	; 0x2148 <LCD_writeChar>
    21ca:	89 81       	ldd	r24, Y+1	; 0x01
    21cc:	8f 5f       	subi	r24, 0xFF	; 255
    21ce:	89 83       	std	Y+1, r24	; 0x01
    21d0:	89 81       	ldd	r24, Y+1	; 0x01
    21d2:	88 2f       	mov	r24, r24
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	2a 81       	ldd	r18, Y+2	; 0x02
    21d8:	3b 81       	ldd	r19, Y+3	; 0x03
    21da:	82 0f       	add	r24, r18
    21dc:	93 1f       	adc	r25, r19
    21de:	fc 01       	movw	r30, r24
    21e0:	80 81       	ld	r24, Z
    21e2:	88 23       	and	r24, r24
    21e4:	39 f7       	brne	.-50     	; 0x21b4 <LCD_writeStr+0x14>
    21e6:	00 00       	nop
    21e8:	0f 90       	pop	r0
    21ea:	0f 90       	pop	r0
    21ec:	0f 90       	pop	r0
    21ee:	df 91       	pop	r29
    21f0:	cf 91       	pop	r28
    21f2:	08 95       	ret

000021f4 <LCD_clearDis>:
    21f4:	cf 93       	push	r28
    21f6:	df 93       	push	r29
    21f8:	cd b7       	in	r28, 0x3d	; 61
    21fa:	de b7       	in	r29, 0x3e	; 62
    21fc:	2e 97       	sbiw	r28, 0x0e	; 14
    21fe:	0f b6       	in	r0, 0x3f	; 63
    2200:	f8 94       	cli
    2202:	de bf       	out	0x3e, r29	; 62
    2204:	0f be       	out	0x3f, r0	; 63
    2206:	cd bf       	out	0x3d, r28	; 61
    2208:	81 e0       	ldi	r24, 0x01	; 1
    220a:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    220e:	80 e0       	ldi	r24, 0x00	; 0
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	a0 e8       	ldi	r26, 0x80	; 128
    2214:	bf e3       	ldi	r27, 0x3F	; 63
    2216:	89 83       	std	Y+1, r24	; 0x01
    2218:	9a 83       	std	Y+2, r25	; 0x02
    221a:	ab 83       	std	Y+3, r26	; 0x03
    221c:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    221e:	20 e0       	ldi	r18, 0x00	; 0
    2220:	30 e0       	ldi	r19, 0x00	; 0
    2222:	4a e7       	ldi	r20, 0x7A	; 122
    2224:	55 e4       	ldi	r21, 0x45	; 69
    2226:	69 81       	ldd	r22, Y+1	; 0x01
    2228:	7a 81       	ldd	r23, Y+2	; 0x02
    222a:	8b 81       	ldd	r24, Y+3	; 0x03
    222c:	9c 81       	ldd	r25, Y+4	; 0x04
    222e:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	8d 83       	std	Y+5, r24	; 0x05
    2238:	9e 83       	std	Y+6, r25	; 0x06
    223a:	af 83       	std	Y+7, r26	; 0x07
    223c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    223e:	20 e0       	ldi	r18, 0x00	; 0
    2240:	30 e0       	ldi	r19, 0x00	; 0
    2242:	40 e8       	ldi	r20, 0x80	; 128
    2244:	5f e3       	ldi	r21, 0x3F	; 63
    2246:	6d 81       	ldd	r22, Y+5	; 0x05
    2248:	7e 81       	ldd	r23, Y+6	; 0x06
    224a:	8f 81       	ldd	r24, Y+7	; 0x07
    224c:	98 85       	ldd	r25, Y+8	; 0x08
    224e:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    2252:	88 23       	and	r24, r24
    2254:	2c f4       	brge	.+10     	; 0x2260 <LCD_clearDis+0x6c>
		__ticks = 1;
    2256:	81 e0       	ldi	r24, 0x01	; 1
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	9a 87       	std	Y+10, r25	; 0x0a
    225c:	89 87       	std	Y+9, r24	; 0x09
    225e:	3f c0       	rjmp	.+126    	; 0x22de <LCD_clearDis+0xea>
	else if (__tmp > 65535)
    2260:	20 e0       	ldi	r18, 0x00	; 0
    2262:	3f ef       	ldi	r19, 0xFF	; 255
    2264:	4f e7       	ldi	r20, 0x7F	; 127
    2266:	57 e4       	ldi	r21, 0x47	; 71
    2268:	6d 81       	ldd	r22, Y+5	; 0x05
    226a:	7e 81       	ldd	r23, Y+6	; 0x06
    226c:	8f 81       	ldd	r24, Y+7	; 0x07
    226e:	98 85       	ldd	r25, Y+8	; 0x08
    2270:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    2274:	18 16       	cp	r1, r24
    2276:	4c f5       	brge	.+82     	; 0x22ca <LCD_clearDis+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2278:	20 e0       	ldi	r18, 0x00	; 0
    227a:	30 e0       	ldi	r19, 0x00	; 0
    227c:	40 e2       	ldi	r20, 0x20	; 32
    227e:	51 e4       	ldi	r21, 0x41	; 65
    2280:	69 81       	ldd	r22, Y+1	; 0x01
    2282:	7a 81       	ldd	r23, Y+2	; 0x02
    2284:	8b 81       	ldd	r24, Y+3	; 0x03
    2286:	9c 81       	ldd	r25, Y+4	; 0x04
    2288:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    228c:	dc 01       	movw	r26, r24
    228e:	cb 01       	movw	r24, r22
    2290:	bc 01       	movw	r22, r24
    2292:	cd 01       	movw	r24, r26
    2294:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    2298:	dc 01       	movw	r26, r24
    229a:	cb 01       	movw	r24, r22
    229c:	9a 87       	std	Y+10, r25	; 0x0a
    229e:	89 87       	std	Y+9, r24	; 0x09
    22a0:	0f c0       	rjmp	.+30     	; 0x22c0 <LCD_clearDis+0xcc>
    22a2:	80 e9       	ldi	r24, 0x90	; 144
    22a4:	91 e0       	ldi	r25, 0x01	; 1
    22a6:	9c 87       	std	Y+12, r25	; 0x0c
    22a8:	8b 87       	std	Y+11, r24	; 0x0b
    22aa:	8b 85       	ldd	r24, Y+11	; 0x0b
    22ac:	9c 85       	ldd	r25, Y+12	; 0x0c
    22ae:	01 97       	sbiw	r24, 0x01	; 1
    22b0:	f1 f7       	brne	.-4      	; 0x22ae <LCD_clearDis+0xba>
    22b2:	9c 87       	std	Y+12, r25	; 0x0c
    22b4:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22b6:	89 85       	ldd	r24, Y+9	; 0x09
    22b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    22ba:	01 97       	sbiw	r24, 0x01	; 1
    22bc:	9a 87       	std	Y+10, r25	; 0x0a
    22be:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22c0:	89 85       	ldd	r24, Y+9	; 0x09
    22c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    22c4:	89 2b       	or	r24, r25
    22c6:	69 f7       	brne	.-38     	; 0x22a2 <LCD_clearDis+0xae>
    22c8:	14 c0       	rjmp	.+40     	; 0x22f2 <LCD_clearDis+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ca:	6d 81       	ldd	r22, Y+5	; 0x05
    22cc:	7e 81       	ldd	r23, Y+6	; 0x06
    22ce:	8f 81       	ldd	r24, Y+7	; 0x07
    22d0:	98 85       	ldd	r25, Y+8	; 0x08
    22d2:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    22d6:	dc 01       	movw	r26, r24
    22d8:	cb 01       	movw	r24, r22
    22da:	9a 87       	std	Y+10, r25	; 0x0a
    22dc:	89 87       	std	Y+9, r24	; 0x09
    22de:	89 85       	ldd	r24, Y+9	; 0x09
    22e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    22e2:	9e 87       	std	Y+14, r25	; 0x0e
    22e4:	8d 87       	std	Y+13, r24	; 0x0d
    22e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    22e8:	9e 85       	ldd	r25, Y+14	; 0x0e
    22ea:	01 97       	sbiw	r24, 0x01	; 1
    22ec:	f1 f7       	brne	.-4      	; 0x22ea <LCD_clearDis+0xf6>
    22ee:	9e 87       	std	Y+14, r25	; 0x0e
    22f0:	8d 87       	std	Y+13, r24	; 0x0d
    22f2:	00 00       	nop
    22f4:	2e 96       	adiw	r28, 0x0e	; 14
    22f6:	0f b6       	in	r0, 0x3f	; 63
    22f8:	f8 94       	cli
    22fa:	de bf       	out	0x3e, r29	; 62
    22fc:	0f be       	out	0x3f, r0	; 63
    22fe:	cd bf       	out	0x3d, r28	; 61
    2300:	df 91       	pop	r29
    2302:	cf 91       	pop	r28
    2304:	08 95       	ret

00002306 <LCD_goto>:
    2306:	cf 93       	push	r28
    2308:	df 93       	push	r29
    230a:	00 d0       	rcall	.+0      	; 0x230c <LCD_goto+0x6>
    230c:	cd b7       	in	r28, 0x3d	; 61
    230e:	de b7       	in	r29, 0x3e	; 62
    2310:	89 83       	std	Y+1, r24	; 0x01
    2312:	6a 83       	std	Y+2, r22	; 0x02
    2314:	8a 81       	ldd	r24, Y+2	; 0x02
    2316:	81 30       	cpi	r24, 0x01	; 1
    2318:	29 f4       	brne	.+10     	; 0x2324 <LCD_goto+0x1e>
    231a:	89 81       	ldd	r24, Y+1	; 0x01
    231c:	80 58       	subi	r24, 0x80	; 128
    231e:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    2322:	07 c0       	rjmp	.+14     	; 0x2332 <LCD_goto+0x2c>
    2324:	8a 81       	ldd	r24, Y+2	; 0x02
    2326:	82 30       	cpi	r24, 0x02	; 2
    2328:	21 f4       	brne	.+8      	; 0x2332 <LCD_goto+0x2c>
    232a:	89 81       	ldd	r24, Y+1	; 0x01
    232c:	80 54       	subi	r24, 0x40	; 64
    232e:	0e 94 ba 10 	call	0x2174	; 0x2174 <LCD_writeCmd>
    2332:	00 00       	nop
    2334:	0f 90       	pop	r0
    2336:	0f 90       	pop	r0
    2338:	df 91       	pop	r29
    233a:	cf 91       	pop	r28
    233c:	08 95       	ret

0000233e <DIO_setPinValue>:
    233e:	cf 93       	push	r28
    2340:	df 93       	push	r29
    2342:	00 d0       	rcall	.+0      	; 0x2344 <DIO_setPinValue+0x6>
    2344:	cd b7       	in	r28, 0x3d	; 61
    2346:	de b7       	in	r29, 0x3e	; 62
    2348:	89 83       	std	Y+1, r24	; 0x01
    234a:	6a 83       	std	Y+2, r22	; 0x02
    234c:	89 81       	ldd	r24, Y+1	; 0x01
    234e:	88 30       	cpi	r24, 0x08	; 8
    2350:	90 f5       	brcc	.+100    	; 0x23b6 <DIO_setPinValue+0x78>
    2352:	8a 81       	ldd	r24, Y+2	; 0x02
    2354:	81 30       	cpi	r24, 0x01	; 1
    2356:	a9 f4       	brne	.+42     	; 0x2382 <DIO_setPinValue+0x44>
    2358:	8b e3       	ldi	r24, 0x3B	; 59
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	2b e3       	ldi	r18, 0x3B	; 59
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	f9 01       	movw	r30, r18
    2362:	20 81       	ld	r18, Z
    2364:	62 2f       	mov	r22, r18
    2366:	29 81       	ldd	r18, Y+1	; 0x01
    2368:	42 2f       	mov	r20, r18
    236a:	50 e0       	ldi	r21, 0x00	; 0
    236c:	21 e0       	ldi	r18, 0x01	; 1
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	02 c0       	rjmp	.+4      	; 0x2376 <DIO_setPinValue+0x38>
    2372:	22 0f       	add	r18, r18
    2374:	33 1f       	adc	r19, r19
    2376:	4a 95       	dec	r20
    2378:	e2 f7       	brpl	.-8      	; 0x2372 <DIO_setPinValue+0x34>
    237a:	26 2b       	or	r18, r22
    237c:	fc 01       	movw	r30, r24
    237e:	20 83       	st	Z, r18
    2380:	cd c0       	rjmp	.+410    	; 0x251c <DIO_setPinValue+0x1de>
    2382:	8a 81       	ldd	r24, Y+2	; 0x02
    2384:	88 23       	and	r24, r24
    2386:	09 f0       	breq	.+2      	; 0x238a <DIO_setPinValue+0x4c>
    2388:	c9 c0       	rjmp	.+402    	; 0x251c <DIO_setPinValue+0x1de>
    238a:	8b e3       	ldi	r24, 0x3B	; 59
    238c:	90 e0       	ldi	r25, 0x00	; 0
    238e:	2b e3       	ldi	r18, 0x3B	; 59
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	f9 01       	movw	r30, r18
    2394:	20 81       	ld	r18, Z
    2396:	62 2f       	mov	r22, r18
    2398:	29 81       	ldd	r18, Y+1	; 0x01
    239a:	42 2f       	mov	r20, r18
    239c:	50 e0       	ldi	r21, 0x00	; 0
    239e:	21 e0       	ldi	r18, 0x01	; 1
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	02 c0       	rjmp	.+4      	; 0x23a8 <DIO_setPinValue+0x6a>
    23a4:	22 0f       	add	r18, r18
    23a6:	33 1f       	adc	r19, r19
    23a8:	4a 95       	dec	r20
    23aa:	e2 f7       	brpl	.-8      	; 0x23a4 <DIO_setPinValue+0x66>
    23ac:	20 95       	com	r18
    23ae:	26 23       	and	r18, r22
    23b0:	fc 01       	movw	r30, r24
    23b2:	20 83       	st	Z, r18
    23b4:	b3 c0       	rjmp	.+358    	; 0x251c <DIO_setPinValue+0x1de>
    23b6:	89 81       	ldd	r24, Y+1	; 0x01
    23b8:	88 30       	cpi	r24, 0x08	; 8
    23ba:	c0 f1       	brcs	.+112    	; 0x242c <DIO_setPinValue+0xee>
    23bc:	89 81       	ldd	r24, Y+1	; 0x01
    23be:	80 31       	cpi	r24, 0x10	; 16
    23c0:	a8 f5       	brcc	.+106    	; 0x242c <DIO_setPinValue+0xee>
    23c2:	89 81       	ldd	r24, Y+1	; 0x01
    23c4:	88 50       	subi	r24, 0x08	; 8
    23c6:	89 83       	std	Y+1, r24	; 0x01
    23c8:	8a 81       	ldd	r24, Y+2	; 0x02
    23ca:	81 30       	cpi	r24, 0x01	; 1
    23cc:	a9 f4       	brne	.+42     	; 0x23f8 <DIO_setPinValue+0xba>
    23ce:	88 e3       	ldi	r24, 0x38	; 56
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	28 e3       	ldi	r18, 0x38	; 56
    23d4:	30 e0       	ldi	r19, 0x00	; 0
    23d6:	f9 01       	movw	r30, r18
    23d8:	20 81       	ld	r18, Z
    23da:	62 2f       	mov	r22, r18
    23dc:	29 81       	ldd	r18, Y+1	; 0x01
    23de:	42 2f       	mov	r20, r18
    23e0:	50 e0       	ldi	r21, 0x00	; 0
    23e2:	21 e0       	ldi	r18, 0x01	; 1
    23e4:	30 e0       	ldi	r19, 0x00	; 0
    23e6:	02 c0       	rjmp	.+4      	; 0x23ec <DIO_setPinValue+0xae>
    23e8:	22 0f       	add	r18, r18
    23ea:	33 1f       	adc	r19, r19
    23ec:	4a 95       	dec	r20
    23ee:	e2 f7       	brpl	.-8      	; 0x23e8 <DIO_setPinValue+0xaa>
    23f0:	26 2b       	or	r18, r22
    23f2:	fc 01       	movw	r30, r24
    23f4:	20 83       	st	Z, r18
    23f6:	8f c0       	rjmp	.+286    	; 0x2516 <DIO_setPinValue+0x1d8>
    23f8:	8a 81       	ldd	r24, Y+2	; 0x02
    23fa:	88 23       	and	r24, r24
    23fc:	09 f0       	breq	.+2      	; 0x2400 <DIO_setPinValue+0xc2>
    23fe:	8b c0       	rjmp	.+278    	; 0x2516 <DIO_setPinValue+0x1d8>
    2400:	88 e3       	ldi	r24, 0x38	; 56
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	28 e3       	ldi	r18, 0x38	; 56
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	f9 01       	movw	r30, r18
    240a:	20 81       	ld	r18, Z
    240c:	62 2f       	mov	r22, r18
    240e:	29 81       	ldd	r18, Y+1	; 0x01
    2410:	42 2f       	mov	r20, r18
    2412:	50 e0       	ldi	r21, 0x00	; 0
    2414:	21 e0       	ldi	r18, 0x01	; 1
    2416:	30 e0       	ldi	r19, 0x00	; 0
    2418:	02 c0       	rjmp	.+4      	; 0x241e <DIO_setPinValue+0xe0>
    241a:	22 0f       	add	r18, r18
    241c:	33 1f       	adc	r19, r19
    241e:	4a 95       	dec	r20
    2420:	e2 f7       	brpl	.-8      	; 0x241a <DIO_setPinValue+0xdc>
    2422:	20 95       	com	r18
    2424:	26 23       	and	r18, r22
    2426:	fc 01       	movw	r30, r24
    2428:	20 83       	st	Z, r18
    242a:	75 c0       	rjmp	.+234    	; 0x2516 <DIO_setPinValue+0x1d8>
    242c:	89 81       	ldd	r24, Y+1	; 0x01
    242e:	80 31       	cpi	r24, 0x10	; 16
    2430:	c0 f1       	brcs	.+112    	; 0x24a2 <DIO_setPinValue+0x164>
    2432:	89 81       	ldd	r24, Y+1	; 0x01
    2434:	89 31       	cpi	r24, 0x19	; 25
    2436:	a8 f5       	brcc	.+106    	; 0x24a2 <DIO_setPinValue+0x164>
    2438:	89 81       	ldd	r24, Y+1	; 0x01
    243a:	80 51       	subi	r24, 0x10	; 16
    243c:	89 83       	std	Y+1, r24	; 0x01
    243e:	8a 81       	ldd	r24, Y+2	; 0x02
    2440:	81 30       	cpi	r24, 0x01	; 1
    2442:	a9 f4       	brne	.+42     	; 0x246e <DIO_setPinValue+0x130>
    2444:	85 e3       	ldi	r24, 0x35	; 53
    2446:	90 e0       	ldi	r25, 0x00	; 0
    2448:	25 e3       	ldi	r18, 0x35	; 53
    244a:	30 e0       	ldi	r19, 0x00	; 0
    244c:	f9 01       	movw	r30, r18
    244e:	20 81       	ld	r18, Z
    2450:	62 2f       	mov	r22, r18
    2452:	29 81       	ldd	r18, Y+1	; 0x01
    2454:	42 2f       	mov	r20, r18
    2456:	50 e0       	ldi	r21, 0x00	; 0
    2458:	21 e0       	ldi	r18, 0x01	; 1
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	02 c0       	rjmp	.+4      	; 0x2462 <DIO_setPinValue+0x124>
    245e:	22 0f       	add	r18, r18
    2460:	33 1f       	adc	r19, r19
    2462:	4a 95       	dec	r20
    2464:	e2 f7       	brpl	.-8      	; 0x245e <DIO_setPinValue+0x120>
    2466:	26 2b       	or	r18, r22
    2468:	fc 01       	movw	r30, r24
    246a:	20 83       	st	Z, r18
    246c:	56 c0       	rjmp	.+172    	; 0x251a <DIO_setPinValue+0x1dc>
    246e:	8a 81       	ldd	r24, Y+2	; 0x02
    2470:	88 23       	and	r24, r24
    2472:	09 f0       	breq	.+2      	; 0x2476 <DIO_setPinValue+0x138>
    2474:	52 c0       	rjmp	.+164    	; 0x251a <DIO_setPinValue+0x1dc>
    2476:	85 e3       	ldi	r24, 0x35	; 53
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	25 e3       	ldi	r18, 0x35	; 53
    247c:	30 e0       	ldi	r19, 0x00	; 0
    247e:	f9 01       	movw	r30, r18
    2480:	20 81       	ld	r18, Z
    2482:	62 2f       	mov	r22, r18
    2484:	29 81       	ldd	r18, Y+1	; 0x01
    2486:	42 2f       	mov	r20, r18
    2488:	50 e0       	ldi	r21, 0x00	; 0
    248a:	21 e0       	ldi	r18, 0x01	; 1
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	02 c0       	rjmp	.+4      	; 0x2494 <DIO_setPinValue+0x156>
    2490:	22 0f       	add	r18, r18
    2492:	33 1f       	adc	r19, r19
    2494:	4a 95       	dec	r20
    2496:	e2 f7       	brpl	.-8      	; 0x2490 <DIO_setPinValue+0x152>
    2498:	20 95       	com	r18
    249a:	26 23       	and	r18, r22
    249c:	fc 01       	movw	r30, r24
    249e:	20 83       	st	Z, r18
    24a0:	3c c0       	rjmp	.+120    	; 0x251a <DIO_setPinValue+0x1dc>
    24a2:	89 81       	ldd	r24, Y+1	; 0x01
    24a4:	88 31       	cpi	r24, 0x18	; 24
    24a6:	d0 f1       	brcs	.+116    	; 0x251c <DIO_setPinValue+0x1de>
    24a8:	89 81       	ldd	r24, Y+1	; 0x01
    24aa:	80 32       	cpi	r24, 0x20	; 32
    24ac:	b8 f5       	brcc	.+110    	; 0x251c <DIO_setPinValue+0x1de>
    24ae:	89 81       	ldd	r24, Y+1	; 0x01
    24b0:	88 51       	subi	r24, 0x18	; 24
    24b2:	89 83       	std	Y+1, r24	; 0x01
    24b4:	8a 81       	ldd	r24, Y+2	; 0x02
    24b6:	81 30       	cpi	r24, 0x01	; 1
    24b8:	a9 f4       	brne	.+42     	; 0x24e4 <DIO_setPinValue+0x1a6>
    24ba:	82 e3       	ldi	r24, 0x32	; 50
    24bc:	90 e0       	ldi	r25, 0x00	; 0
    24be:	22 e3       	ldi	r18, 0x32	; 50
    24c0:	30 e0       	ldi	r19, 0x00	; 0
    24c2:	f9 01       	movw	r30, r18
    24c4:	20 81       	ld	r18, Z
    24c6:	62 2f       	mov	r22, r18
    24c8:	29 81       	ldd	r18, Y+1	; 0x01
    24ca:	42 2f       	mov	r20, r18
    24cc:	50 e0       	ldi	r21, 0x00	; 0
    24ce:	21 e0       	ldi	r18, 0x01	; 1
    24d0:	30 e0       	ldi	r19, 0x00	; 0
    24d2:	02 c0       	rjmp	.+4      	; 0x24d8 <DIO_setPinValue+0x19a>
    24d4:	22 0f       	add	r18, r18
    24d6:	33 1f       	adc	r19, r19
    24d8:	4a 95       	dec	r20
    24da:	e2 f7       	brpl	.-8      	; 0x24d4 <DIO_setPinValue+0x196>
    24dc:	26 2b       	or	r18, r22
    24de:	fc 01       	movw	r30, r24
    24e0:	20 83       	st	Z, r18
    24e2:	1c c0       	rjmp	.+56     	; 0x251c <DIO_setPinValue+0x1de>
    24e4:	8a 81       	ldd	r24, Y+2	; 0x02
    24e6:	88 23       	and	r24, r24
    24e8:	c9 f4       	brne	.+50     	; 0x251c <DIO_setPinValue+0x1de>
    24ea:	82 e3       	ldi	r24, 0x32	; 50
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	22 e3       	ldi	r18, 0x32	; 50
    24f0:	30 e0       	ldi	r19, 0x00	; 0
    24f2:	f9 01       	movw	r30, r18
    24f4:	20 81       	ld	r18, Z
    24f6:	62 2f       	mov	r22, r18
    24f8:	29 81       	ldd	r18, Y+1	; 0x01
    24fa:	42 2f       	mov	r20, r18
    24fc:	50 e0       	ldi	r21, 0x00	; 0
    24fe:	21 e0       	ldi	r18, 0x01	; 1
    2500:	30 e0       	ldi	r19, 0x00	; 0
    2502:	02 c0       	rjmp	.+4      	; 0x2508 <DIO_setPinValue+0x1ca>
    2504:	22 0f       	add	r18, r18
    2506:	33 1f       	adc	r19, r19
    2508:	4a 95       	dec	r20
    250a:	e2 f7       	brpl	.-8      	; 0x2504 <DIO_setPinValue+0x1c6>
    250c:	20 95       	com	r18
    250e:	26 23       	and	r18, r22
    2510:	fc 01       	movw	r30, r24
    2512:	20 83       	st	Z, r18
    2514:	03 c0       	rjmp	.+6      	; 0x251c <DIO_setPinValue+0x1de>
    2516:	00 00       	nop
    2518:	01 c0       	rjmp	.+2      	; 0x251c <DIO_setPinValue+0x1de>
    251a:	00 00       	nop
    251c:	00 00       	nop
    251e:	0f 90       	pop	r0
    2520:	0f 90       	pop	r0
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	08 95       	ret

00002528 <DIO_setPinDir>:
    2528:	cf 93       	push	r28
    252a:	df 93       	push	r29
    252c:	00 d0       	rcall	.+0      	; 0x252e <DIO_setPinDir+0x6>
    252e:	cd b7       	in	r28, 0x3d	; 61
    2530:	de b7       	in	r29, 0x3e	; 62
    2532:	89 83       	std	Y+1, r24	; 0x01
    2534:	6a 83       	std	Y+2, r22	; 0x02
    2536:	89 81       	ldd	r24, Y+1	; 0x01
    2538:	88 30       	cpi	r24, 0x08	; 8
    253a:	90 f5       	brcc	.+100    	; 0x25a0 <DIO_setPinDir+0x78>
    253c:	8a 81       	ldd	r24, Y+2	; 0x02
    253e:	81 30       	cpi	r24, 0x01	; 1
    2540:	a9 f4       	brne	.+42     	; 0x256c <DIO_setPinDir+0x44>
    2542:	8a e3       	ldi	r24, 0x3A	; 58
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	2a e3       	ldi	r18, 0x3A	; 58
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	f9 01       	movw	r30, r18
    254c:	20 81       	ld	r18, Z
    254e:	62 2f       	mov	r22, r18
    2550:	29 81       	ldd	r18, Y+1	; 0x01
    2552:	42 2f       	mov	r20, r18
    2554:	50 e0       	ldi	r21, 0x00	; 0
    2556:	21 e0       	ldi	r18, 0x01	; 1
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	02 c0       	rjmp	.+4      	; 0x2560 <DIO_setPinDir+0x38>
    255c:	22 0f       	add	r18, r18
    255e:	33 1f       	adc	r19, r19
    2560:	4a 95       	dec	r20
    2562:	e2 f7       	brpl	.-8      	; 0x255c <DIO_setPinDir+0x34>
    2564:	26 2b       	or	r18, r22
    2566:	fc 01       	movw	r30, r24
    2568:	20 83       	st	Z, r18
    256a:	cd c0       	rjmp	.+410    	; 0x2706 <DIO_setPinDir+0x1de>
    256c:	8a 81       	ldd	r24, Y+2	; 0x02
    256e:	88 23       	and	r24, r24
    2570:	09 f0       	breq	.+2      	; 0x2574 <DIO_setPinDir+0x4c>
    2572:	c9 c0       	rjmp	.+402    	; 0x2706 <DIO_setPinDir+0x1de>
    2574:	8a e3       	ldi	r24, 0x3A	; 58
    2576:	90 e0       	ldi	r25, 0x00	; 0
    2578:	2a e3       	ldi	r18, 0x3A	; 58
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	f9 01       	movw	r30, r18
    257e:	20 81       	ld	r18, Z
    2580:	62 2f       	mov	r22, r18
    2582:	29 81       	ldd	r18, Y+1	; 0x01
    2584:	42 2f       	mov	r20, r18
    2586:	50 e0       	ldi	r21, 0x00	; 0
    2588:	21 e0       	ldi	r18, 0x01	; 1
    258a:	30 e0       	ldi	r19, 0x00	; 0
    258c:	02 c0       	rjmp	.+4      	; 0x2592 <DIO_setPinDir+0x6a>
    258e:	22 0f       	add	r18, r18
    2590:	33 1f       	adc	r19, r19
    2592:	4a 95       	dec	r20
    2594:	e2 f7       	brpl	.-8      	; 0x258e <DIO_setPinDir+0x66>
    2596:	20 95       	com	r18
    2598:	26 23       	and	r18, r22
    259a:	fc 01       	movw	r30, r24
    259c:	20 83       	st	Z, r18
    259e:	b3 c0       	rjmp	.+358    	; 0x2706 <DIO_setPinDir+0x1de>
    25a0:	89 81       	ldd	r24, Y+1	; 0x01
    25a2:	88 30       	cpi	r24, 0x08	; 8
    25a4:	c0 f1       	brcs	.+112    	; 0x2616 <DIO_setPinDir+0xee>
    25a6:	89 81       	ldd	r24, Y+1	; 0x01
    25a8:	80 31       	cpi	r24, 0x10	; 16
    25aa:	a8 f5       	brcc	.+106    	; 0x2616 <DIO_setPinDir+0xee>
    25ac:	89 81       	ldd	r24, Y+1	; 0x01
    25ae:	88 50       	subi	r24, 0x08	; 8
    25b0:	89 83       	std	Y+1, r24	; 0x01
    25b2:	8a 81       	ldd	r24, Y+2	; 0x02
    25b4:	81 30       	cpi	r24, 0x01	; 1
    25b6:	a9 f4       	brne	.+42     	; 0x25e2 <DIO_setPinDir+0xba>
    25b8:	87 e3       	ldi	r24, 0x37	; 55
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	27 e3       	ldi	r18, 0x37	; 55
    25be:	30 e0       	ldi	r19, 0x00	; 0
    25c0:	f9 01       	movw	r30, r18
    25c2:	20 81       	ld	r18, Z
    25c4:	62 2f       	mov	r22, r18
    25c6:	29 81       	ldd	r18, Y+1	; 0x01
    25c8:	42 2f       	mov	r20, r18
    25ca:	50 e0       	ldi	r21, 0x00	; 0
    25cc:	21 e0       	ldi	r18, 0x01	; 1
    25ce:	30 e0       	ldi	r19, 0x00	; 0
    25d0:	02 c0       	rjmp	.+4      	; 0x25d6 <DIO_setPinDir+0xae>
    25d2:	22 0f       	add	r18, r18
    25d4:	33 1f       	adc	r19, r19
    25d6:	4a 95       	dec	r20
    25d8:	e2 f7       	brpl	.-8      	; 0x25d2 <DIO_setPinDir+0xaa>
    25da:	26 2b       	or	r18, r22
    25dc:	fc 01       	movw	r30, r24
    25de:	20 83       	st	Z, r18
    25e0:	8f c0       	rjmp	.+286    	; 0x2700 <DIO_setPinDir+0x1d8>
    25e2:	8a 81       	ldd	r24, Y+2	; 0x02
    25e4:	88 23       	and	r24, r24
    25e6:	09 f0       	breq	.+2      	; 0x25ea <DIO_setPinDir+0xc2>
    25e8:	8b c0       	rjmp	.+278    	; 0x2700 <DIO_setPinDir+0x1d8>
    25ea:	87 e3       	ldi	r24, 0x37	; 55
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	27 e3       	ldi	r18, 0x37	; 55
    25f0:	30 e0       	ldi	r19, 0x00	; 0
    25f2:	f9 01       	movw	r30, r18
    25f4:	20 81       	ld	r18, Z
    25f6:	62 2f       	mov	r22, r18
    25f8:	29 81       	ldd	r18, Y+1	; 0x01
    25fa:	42 2f       	mov	r20, r18
    25fc:	50 e0       	ldi	r21, 0x00	; 0
    25fe:	21 e0       	ldi	r18, 0x01	; 1
    2600:	30 e0       	ldi	r19, 0x00	; 0
    2602:	02 c0       	rjmp	.+4      	; 0x2608 <DIO_setPinDir+0xe0>
    2604:	22 0f       	add	r18, r18
    2606:	33 1f       	adc	r19, r19
    2608:	4a 95       	dec	r20
    260a:	e2 f7       	brpl	.-8      	; 0x2604 <DIO_setPinDir+0xdc>
    260c:	20 95       	com	r18
    260e:	26 23       	and	r18, r22
    2610:	fc 01       	movw	r30, r24
    2612:	20 83       	st	Z, r18
    2614:	75 c0       	rjmp	.+234    	; 0x2700 <DIO_setPinDir+0x1d8>
    2616:	89 81       	ldd	r24, Y+1	; 0x01
    2618:	80 31       	cpi	r24, 0x10	; 16
    261a:	c0 f1       	brcs	.+112    	; 0x268c <DIO_setPinDir+0x164>
    261c:	89 81       	ldd	r24, Y+1	; 0x01
    261e:	88 31       	cpi	r24, 0x18	; 24
    2620:	a8 f5       	brcc	.+106    	; 0x268c <DIO_setPinDir+0x164>
    2622:	89 81       	ldd	r24, Y+1	; 0x01
    2624:	80 51       	subi	r24, 0x10	; 16
    2626:	89 83       	std	Y+1, r24	; 0x01
    2628:	8a 81       	ldd	r24, Y+2	; 0x02
    262a:	81 30       	cpi	r24, 0x01	; 1
    262c:	a9 f4       	brne	.+42     	; 0x2658 <DIO_setPinDir+0x130>
    262e:	84 e3       	ldi	r24, 0x34	; 52
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	24 e3       	ldi	r18, 0x34	; 52
    2634:	30 e0       	ldi	r19, 0x00	; 0
    2636:	f9 01       	movw	r30, r18
    2638:	20 81       	ld	r18, Z
    263a:	62 2f       	mov	r22, r18
    263c:	29 81       	ldd	r18, Y+1	; 0x01
    263e:	42 2f       	mov	r20, r18
    2640:	50 e0       	ldi	r21, 0x00	; 0
    2642:	21 e0       	ldi	r18, 0x01	; 1
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	02 c0       	rjmp	.+4      	; 0x264c <DIO_setPinDir+0x124>
    2648:	22 0f       	add	r18, r18
    264a:	33 1f       	adc	r19, r19
    264c:	4a 95       	dec	r20
    264e:	e2 f7       	brpl	.-8      	; 0x2648 <DIO_setPinDir+0x120>
    2650:	26 2b       	or	r18, r22
    2652:	fc 01       	movw	r30, r24
    2654:	20 83       	st	Z, r18
    2656:	56 c0       	rjmp	.+172    	; 0x2704 <DIO_setPinDir+0x1dc>
    2658:	8a 81       	ldd	r24, Y+2	; 0x02
    265a:	88 23       	and	r24, r24
    265c:	09 f0       	breq	.+2      	; 0x2660 <DIO_setPinDir+0x138>
    265e:	52 c0       	rjmp	.+164    	; 0x2704 <DIO_setPinDir+0x1dc>
    2660:	84 e3       	ldi	r24, 0x34	; 52
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	24 e3       	ldi	r18, 0x34	; 52
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	f9 01       	movw	r30, r18
    266a:	20 81       	ld	r18, Z
    266c:	62 2f       	mov	r22, r18
    266e:	29 81       	ldd	r18, Y+1	; 0x01
    2670:	42 2f       	mov	r20, r18
    2672:	50 e0       	ldi	r21, 0x00	; 0
    2674:	21 e0       	ldi	r18, 0x01	; 1
    2676:	30 e0       	ldi	r19, 0x00	; 0
    2678:	02 c0       	rjmp	.+4      	; 0x267e <DIO_setPinDir+0x156>
    267a:	22 0f       	add	r18, r18
    267c:	33 1f       	adc	r19, r19
    267e:	4a 95       	dec	r20
    2680:	e2 f7       	brpl	.-8      	; 0x267a <DIO_setPinDir+0x152>
    2682:	20 95       	com	r18
    2684:	26 23       	and	r18, r22
    2686:	fc 01       	movw	r30, r24
    2688:	20 83       	st	Z, r18
    268a:	3c c0       	rjmp	.+120    	; 0x2704 <DIO_setPinDir+0x1dc>
    268c:	89 81       	ldd	r24, Y+1	; 0x01
    268e:	88 31       	cpi	r24, 0x18	; 24
    2690:	d0 f1       	brcs	.+116    	; 0x2706 <DIO_setPinDir+0x1de>
    2692:	89 81       	ldd	r24, Y+1	; 0x01
    2694:	80 32       	cpi	r24, 0x20	; 32
    2696:	b8 f5       	brcc	.+110    	; 0x2706 <DIO_setPinDir+0x1de>
    2698:	89 81       	ldd	r24, Y+1	; 0x01
    269a:	88 51       	subi	r24, 0x18	; 24
    269c:	89 83       	std	Y+1, r24	; 0x01
    269e:	8a 81       	ldd	r24, Y+2	; 0x02
    26a0:	81 30       	cpi	r24, 0x01	; 1
    26a2:	a9 f4       	brne	.+42     	; 0x26ce <DIO_setPinDir+0x1a6>
    26a4:	81 e3       	ldi	r24, 0x31	; 49
    26a6:	90 e0       	ldi	r25, 0x00	; 0
    26a8:	21 e3       	ldi	r18, 0x31	; 49
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	f9 01       	movw	r30, r18
    26ae:	20 81       	ld	r18, Z
    26b0:	62 2f       	mov	r22, r18
    26b2:	29 81       	ldd	r18, Y+1	; 0x01
    26b4:	42 2f       	mov	r20, r18
    26b6:	50 e0       	ldi	r21, 0x00	; 0
    26b8:	21 e0       	ldi	r18, 0x01	; 1
    26ba:	30 e0       	ldi	r19, 0x00	; 0
    26bc:	02 c0       	rjmp	.+4      	; 0x26c2 <DIO_setPinDir+0x19a>
    26be:	22 0f       	add	r18, r18
    26c0:	33 1f       	adc	r19, r19
    26c2:	4a 95       	dec	r20
    26c4:	e2 f7       	brpl	.-8      	; 0x26be <DIO_setPinDir+0x196>
    26c6:	26 2b       	or	r18, r22
    26c8:	fc 01       	movw	r30, r24
    26ca:	20 83       	st	Z, r18
    26cc:	1c c0       	rjmp	.+56     	; 0x2706 <DIO_setPinDir+0x1de>
    26ce:	8a 81       	ldd	r24, Y+2	; 0x02
    26d0:	88 23       	and	r24, r24
    26d2:	c9 f4       	brne	.+50     	; 0x2706 <DIO_setPinDir+0x1de>
    26d4:	81 e3       	ldi	r24, 0x31	; 49
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	21 e3       	ldi	r18, 0x31	; 49
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	f9 01       	movw	r30, r18
    26de:	20 81       	ld	r18, Z
    26e0:	62 2f       	mov	r22, r18
    26e2:	29 81       	ldd	r18, Y+1	; 0x01
    26e4:	42 2f       	mov	r20, r18
    26e6:	50 e0       	ldi	r21, 0x00	; 0
    26e8:	21 e0       	ldi	r18, 0x01	; 1
    26ea:	30 e0       	ldi	r19, 0x00	; 0
    26ec:	02 c0       	rjmp	.+4      	; 0x26f2 <DIO_setPinDir+0x1ca>
    26ee:	22 0f       	add	r18, r18
    26f0:	33 1f       	adc	r19, r19
    26f2:	4a 95       	dec	r20
    26f4:	e2 f7       	brpl	.-8      	; 0x26ee <DIO_setPinDir+0x1c6>
    26f6:	20 95       	com	r18
    26f8:	26 23       	and	r18, r22
    26fa:	fc 01       	movw	r30, r24
    26fc:	20 83       	st	Z, r18
    26fe:	03 c0       	rjmp	.+6      	; 0x2706 <DIO_setPinDir+0x1de>
    2700:	00 00       	nop
    2702:	01 c0       	rjmp	.+2      	; 0x2706 <DIO_setPinDir+0x1de>
    2704:	00 00       	nop
    2706:	00 00       	nop
    2708:	0f 90       	pop	r0
    270a:	0f 90       	pop	r0
    270c:	df 91       	pop	r29
    270e:	cf 91       	pop	r28
    2710:	08 95       	ret

00002712 <EXT0_init>:
    2712:	cf 93       	push	r28
    2714:	df 93       	push	r29
    2716:	1f 92       	push	r1
    2718:	cd b7       	in	r28, 0x3d	; 61
    271a:	de b7       	in	r29, 0x3e	; 62
    271c:	89 83       	std	Y+1, r24	; 0x01
    271e:	89 81       	ldd	r24, Y+1	; 0x01
    2720:	88 23       	and	r24, r24
    2722:	99 f4       	brne	.+38     	; 0x274a <EXT0_init+0x38>
    2724:	85 e5       	ldi	r24, 0x55	; 85
    2726:	90 e0       	ldi	r25, 0x00	; 0
    2728:	25 e5       	ldi	r18, 0x55	; 85
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	f9 01       	movw	r30, r18
    272e:	20 81       	ld	r18, Z
    2730:	2e 7f       	andi	r18, 0xFE	; 254
    2732:	fc 01       	movw	r30, r24
    2734:	20 83       	st	Z, r18
    2736:	85 e5       	ldi	r24, 0x55	; 85
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	25 e5       	ldi	r18, 0x55	; 85
    273c:	30 e0       	ldi	r19, 0x00	; 0
    273e:	f9 01       	movw	r30, r18
    2740:	20 81       	ld	r18, Z
    2742:	2d 7f       	andi	r18, 0xFD	; 253
    2744:	fc 01       	movw	r30, r24
    2746:	20 83       	st	Z, r18
    2748:	41 c0       	rjmp	.+130    	; 0x27cc <EXT0_init+0xba>
    274a:	89 81       	ldd	r24, Y+1	; 0x01
    274c:	81 30       	cpi	r24, 0x01	; 1
    274e:	99 f4       	brne	.+38     	; 0x2776 <EXT0_init+0x64>
    2750:	85 e5       	ldi	r24, 0x55	; 85
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	25 e5       	ldi	r18, 0x55	; 85
    2756:	30 e0       	ldi	r19, 0x00	; 0
    2758:	f9 01       	movw	r30, r18
    275a:	20 81       	ld	r18, Z
    275c:	21 60       	ori	r18, 0x01	; 1
    275e:	fc 01       	movw	r30, r24
    2760:	20 83       	st	Z, r18
    2762:	85 e5       	ldi	r24, 0x55	; 85
    2764:	90 e0       	ldi	r25, 0x00	; 0
    2766:	25 e5       	ldi	r18, 0x55	; 85
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	f9 01       	movw	r30, r18
    276c:	20 81       	ld	r18, Z
    276e:	2d 7f       	andi	r18, 0xFD	; 253
    2770:	fc 01       	movw	r30, r24
    2772:	20 83       	st	Z, r18
    2774:	2b c0       	rjmp	.+86     	; 0x27cc <EXT0_init+0xba>
    2776:	89 81       	ldd	r24, Y+1	; 0x01
    2778:	82 30       	cpi	r24, 0x02	; 2
    277a:	99 f4       	brne	.+38     	; 0x27a2 <EXT0_init+0x90>
    277c:	85 e5       	ldi	r24, 0x55	; 85
    277e:	90 e0       	ldi	r25, 0x00	; 0
    2780:	25 e5       	ldi	r18, 0x55	; 85
    2782:	30 e0       	ldi	r19, 0x00	; 0
    2784:	f9 01       	movw	r30, r18
    2786:	20 81       	ld	r18, Z
    2788:	2e 7f       	andi	r18, 0xFE	; 254
    278a:	fc 01       	movw	r30, r24
    278c:	20 83       	st	Z, r18
    278e:	85 e5       	ldi	r24, 0x55	; 85
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	25 e5       	ldi	r18, 0x55	; 85
    2794:	30 e0       	ldi	r19, 0x00	; 0
    2796:	f9 01       	movw	r30, r18
    2798:	20 81       	ld	r18, Z
    279a:	22 60       	ori	r18, 0x02	; 2
    279c:	fc 01       	movw	r30, r24
    279e:	20 83       	st	Z, r18
    27a0:	15 c0       	rjmp	.+42     	; 0x27cc <EXT0_init+0xba>
    27a2:	89 81       	ldd	r24, Y+1	; 0x01
    27a4:	83 30       	cpi	r24, 0x03	; 3
    27a6:	91 f4       	brne	.+36     	; 0x27cc <EXT0_init+0xba>
    27a8:	85 e5       	ldi	r24, 0x55	; 85
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	25 e5       	ldi	r18, 0x55	; 85
    27ae:	30 e0       	ldi	r19, 0x00	; 0
    27b0:	f9 01       	movw	r30, r18
    27b2:	20 81       	ld	r18, Z
    27b4:	21 60       	ori	r18, 0x01	; 1
    27b6:	fc 01       	movw	r30, r24
    27b8:	20 83       	st	Z, r18
    27ba:	85 e5       	ldi	r24, 0x55	; 85
    27bc:	90 e0       	ldi	r25, 0x00	; 0
    27be:	25 e5       	ldi	r18, 0x55	; 85
    27c0:	30 e0       	ldi	r19, 0x00	; 0
    27c2:	f9 01       	movw	r30, r18
    27c4:	20 81       	ld	r18, Z
    27c6:	22 60       	ori	r18, 0x02	; 2
    27c8:	fc 01       	movw	r30, r24
    27ca:	20 83       	st	Z, r18
    27cc:	8b e5       	ldi	r24, 0x5B	; 91
    27ce:	90 e0       	ldi	r25, 0x00	; 0
    27d0:	2b e5       	ldi	r18, 0x5B	; 91
    27d2:	30 e0       	ldi	r19, 0x00	; 0
    27d4:	f9 01       	movw	r30, r18
    27d6:	20 81       	ld	r18, Z
    27d8:	20 64       	ori	r18, 0x40	; 64
    27da:	fc 01       	movw	r30, r24
    27dc:	20 83       	st	Z, r18
    27de:	00 00       	nop
    27e0:	0f 90       	pop	r0
    27e2:	df 91       	pop	r29
    27e4:	cf 91       	pop	r28
    27e6:	08 95       	ret

000027e8 <__vector_1>:
    27e8:	1f 92       	push	r1
    27ea:	0f 92       	push	r0
    27ec:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    27f0:	0f 92       	push	r0
    27f2:	11 24       	eor	r1, r1
    27f4:	2f 93       	push	r18
    27f6:	3f 93       	push	r19
    27f8:	4f 93       	push	r20
    27fa:	5f 93       	push	r21
    27fc:	6f 93       	push	r22
    27fe:	7f 93       	push	r23
    2800:	8f 93       	push	r24
    2802:	9f 93       	push	r25
    2804:	af 93       	push	r26
    2806:	bf 93       	push	r27
    2808:	ef 93       	push	r30
    280a:	ff 93       	push	r31
    280c:	cf 93       	push	r28
    280e:	df 93       	push	r29
    2810:	cd b7       	in	r28, 0x3d	; 61
    2812:	de b7       	in	r29, 0x3e	; 62
    2814:	c0 55       	subi	r28, 0x50	; 80
    2816:	d1 09       	sbc	r29, r1
    2818:	de bf       	out	0x3e, r29	; 62
    281a:	cd bf       	out	0x3d, r28	; 61
    281c:	61 e0       	ldi	r22, 0x01	; 1
    281e:	87 e0       	ldi	r24, 0x07	; 7
    2820:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    2824:	61 e0       	ldi	r22, 0x01	; 1
    2826:	86 e0       	ldi	r24, 0x06	; 6
    2828:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    282c:	61 e0       	ldi	r22, 0x01	; 1
    282e:	85 e0       	ldi	r24, 0x05	; 5
    2830:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    2834:	83 e3       	ldi	r24, 0x33	; 51
    2836:	ef e9       	ldi	r30, 0x9F	; 159
    2838:	f3 e0       	ldi	r31, 0x03	; 3
    283a:	de 01       	movw	r26, r28
    283c:	5e 96       	adiw	r26, 0x1e	; 30
    283e:	01 90       	ld	r0, Z+
    2840:	0d 92       	st	X+, r0
    2842:	8a 95       	dec	r24
    2844:	e1 f7       	brne	.-8      	; 0x283e <__vector_1+0x56>
    2846:	ce 01       	movw	r24, r28
    2848:	4e 96       	adiw	r24, 0x1e	; 30
    284a:	0e 94 6d 1a 	call	0x34da	; 0x34da <UART_sendString>
    284e:	0e 94 97 1a 	call	0x352e	; 0x352e <UART_receiveData>
    2852:	89 83       	std	Y+1, r24	; 0x01
    2854:	89 81       	ldd	r24, Y+1	; 0x01
    2856:	8b 36       	cpi	r24, 0x6B	; 107
    2858:	09 f0       	breq	.+2      	; 0x285c <__vector_1+0x74>
    285a:	83 c0       	rjmp	.+262    	; 0x2962 <__vector_1+0x17a>
    285c:	61 e0       	ldi	r22, 0x01	; 1
    285e:	86 e0       	ldi	r24, 0x06	; 6
    2860:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2864:	61 e0       	ldi	r22, 0x01	; 1
    2866:	85 e0       	ldi	r24, 0x05	; 5
    2868:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    286c:	80 e0       	ldi	r24, 0x00	; 0
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	a8 ec       	ldi	r26, 0xC8	; 200
    2872:	b2 e4       	ldi	r27, 0x42	; 66
    2874:	8e 83       	std	Y+6, r24	; 0x06
    2876:	9f 83       	std	Y+7, r25	; 0x07
    2878:	a8 87       	std	Y+8, r26	; 0x08
    287a:	b9 87       	std	Y+9, r27	; 0x09
    287c:	20 e0       	ldi	r18, 0x00	; 0
    287e:	30 e0       	ldi	r19, 0x00	; 0
    2880:	4a e7       	ldi	r20, 0x7A	; 122
    2882:	55 e4       	ldi	r21, 0x45	; 69
    2884:	6e 81       	ldd	r22, Y+6	; 0x06
    2886:	7f 81       	ldd	r23, Y+7	; 0x07
    2888:	88 85       	ldd	r24, Y+8	; 0x08
    288a:	99 85       	ldd	r25, Y+9	; 0x09
    288c:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    2890:	dc 01       	movw	r26, r24
    2892:	cb 01       	movw	r24, r22
    2894:	8a 87       	std	Y+10, r24	; 0x0a
    2896:	9b 87       	std	Y+11, r25	; 0x0b
    2898:	ac 87       	std	Y+12, r26	; 0x0c
    289a:	bd 87       	std	Y+13, r27	; 0x0d
    289c:	20 e0       	ldi	r18, 0x00	; 0
    289e:	30 e0       	ldi	r19, 0x00	; 0
    28a0:	40 e8       	ldi	r20, 0x80	; 128
    28a2:	5f e3       	ldi	r21, 0x3F	; 63
    28a4:	6a 85       	ldd	r22, Y+10	; 0x0a
    28a6:	7b 85       	ldd	r23, Y+11	; 0x0b
    28a8:	8c 85       	ldd	r24, Y+12	; 0x0c
    28aa:	9d 85       	ldd	r25, Y+13	; 0x0d
    28ac:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    28b0:	88 23       	and	r24, r24
    28b2:	2c f4       	brge	.+10     	; 0x28be <__vector_1+0xd6>
    28b4:	81 e0       	ldi	r24, 0x01	; 1
    28b6:	90 e0       	ldi	r25, 0x00	; 0
    28b8:	9f 87       	std	Y+15, r25	; 0x0f
    28ba:	8e 87       	std	Y+14, r24	; 0x0e
    28bc:	3f c0       	rjmp	.+126    	; 0x293c <__vector_1+0x154>
    28be:	20 e0       	ldi	r18, 0x00	; 0
    28c0:	3f ef       	ldi	r19, 0xFF	; 255
    28c2:	4f e7       	ldi	r20, 0x7F	; 127
    28c4:	57 e4       	ldi	r21, 0x47	; 71
    28c6:	6a 85       	ldd	r22, Y+10	; 0x0a
    28c8:	7b 85       	ldd	r23, Y+11	; 0x0b
    28ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    28cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    28ce:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    28d2:	18 16       	cp	r1, r24
    28d4:	4c f5       	brge	.+82     	; 0x2928 <__vector_1+0x140>
    28d6:	20 e0       	ldi	r18, 0x00	; 0
    28d8:	30 e0       	ldi	r19, 0x00	; 0
    28da:	40 e2       	ldi	r20, 0x20	; 32
    28dc:	51 e4       	ldi	r21, 0x41	; 65
    28de:	6e 81       	ldd	r22, Y+6	; 0x06
    28e0:	7f 81       	ldd	r23, Y+7	; 0x07
    28e2:	88 85       	ldd	r24, Y+8	; 0x08
    28e4:	99 85       	ldd	r25, Y+9	; 0x09
    28e6:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    28ea:	dc 01       	movw	r26, r24
    28ec:	cb 01       	movw	r24, r22
    28ee:	bc 01       	movw	r22, r24
    28f0:	cd 01       	movw	r24, r26
    28f2:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    28f6:	dc 01       	movw	r26, r24
    28f8:	cb 01       	movw	r24, r22
    28fa:	9f 87       	std	Y+15, r25	; 0x0f
    28fc:	8e 87       	std	Y+14, r24	; 0x0e
    28fe:	0f c0       	rjmp	.+30     	; 0x291e <__vector_1+0x136>
    2900:	80 e9       	ldi	r24, 0x90	; 144
    2902:	91 e0       	ldi	r25, 0x01	; 1
    2904:	99 8b       	std	Y+17, r25	; 0x11
    2906:	88 8b       	std	Y+16, r24	; 0x10
    2908:	88 89       	ldd	r24, Y+16	; 0x10
    290a:	99 89       	ldd	r25, Y+17	; 0x11
    290c:	01 97       	sbiw	r24, 0x01	; 1
    290e:	f1 f7       	brne	.-4      	; 0x290c <__vector_1+0x124>
    2910:	99 8b       	std	Y+17, r25	; 0x11
    2912:	88 8b       	std	Y+16, r24	; 0x10
    2914:	8e 85       	ldd	r24, Y+14	; 0x0e
    2916:	9f 85       	ldd	r25, Y+15	; 0x0f
    2918:	01 97       	sbiw	r24, 0x01	; 1
    291a:	9f 87       	std	Y+15, r25	; 0x0f
    291c:	8e 87       	std	Y+14, r24	; 0x0e
    291e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2920:	9f 85       	ldd	r25, Y+15	; 0x0f
    2922:	89 2b       	or	r24, r25
    2924:	69 f7       	brne	.-38     	; 0x2900 <__vector_1+0x118>
    2926:	14 c0       	rjmp	.+40     	; 0x2950 <__vector_1+0x168>
    2928:	6a 85       	ldd	r22, Y+10	; 0x0a
    292a:	7b 85       	ldd	r23, Y+11	; 0x0b
    292c:	8c 85       	ldd	r24, Y+12	; 0x0c
    292e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2930:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    2934:	dc 01       	movw	r26, r24
    2936:	cb 01       	movw	r24, r22
    2938:	9f 87       	std	Y+15, r25	; 0x0f
    293a:	8e 87       	std	Y+14, r24	; 0x0e
    293c:	8e 85       	ldd	r24, Y+14	; 0x0e
    293e:	9f 85       	ldd	r25, Y+15	; 0x0f
    2940:	9b 8b       	std	Y+19, r25	; 0x13
    2942:	8a 8b       	std	Y+18, r24	; 0x12
    2944:	8a 89       	ldd	r24, Y+18	; 0x12
    2946:	9b 89       	ldd	r25, Y+19	; 0x13
    2948:	01 97       	sbiw	r24, 0x01	; 1
    294a:	f1 f7       	brne	.-4      	; 0x2948 <__vector_1+0x160>
    294c:	9b 8b       	std	Y+19, r25	; 0x13
    294e:	8a 8b       	std	Y+18, r24	; 0x12
    2950:	60 e0       	ldi	r22, 0x00	; 0
    2952:	86 e0       	ldi	r24, 0x06	; 6
    2954:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2958:	60 e0       	ldi	r22, 0x00	; 0
    295a:	85 e0       	ldi	r24, 0x05	; 5
    295c:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2960:	82 c0       	rjmp	.+260    	; 0x2a66 <__vector_1+0x27e>
    2962:	61 e0       	ldi	r22, 0x01	; 1
    2964:	87 e0       	ldi	r24, 0x07	; 7
    2966:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    296a:	61 e0       	ldi	r22, 0x01	; 1
    296c:	85 e0       	ldi	r24, 0x05	; 5
    296e:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2972:	80 e0       	ldi	r24, 0x00	; 0
    2974:	90 e0       	ldi	r25, 0x00	; 0
    2976:	a8 ec       	ldi	r26, 0xC8	; 200
    2978:	b2 e4       	ldi	r27, 0x42	; 66
    297a:	8a 83       	std	Y+2, r24	; 0x02
    297c:	9b 83       	std	Y+3, r25	; 0x03
    297e:	ac 83       	std	Y+4, r26	; 0x04
    2980:	bd 83       	std	Y+5, r27	; 0x05
    2982:	20 e0       	ldi	r18, 0x00	; 0
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	4a e7       	ldi	r20, 0x7A	; 122
    2988:	55 e4       	ldi	r21, 0x45	; 69
    298a:	6a 81       	ldd	r22, Y+2	; 0x02
    298c:	7b 81       	ldd	r23, Y+3	; 0x03
    298e:	8c 81       	ldd	r24, Y+4	; 0x04
    2990:	9d 81       	ldd	r25, Y+5	; 0x05
    2992:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    2996:	dc 01       	movw	r26, r24
    2998:	cb 01       	movw	r24, r22
    299a:	8c 8b       	std	Y+20, r24	; 0x14
    299c:	9d 8b       	std	Y+21, r25	; 0x15
    299e:	ae 8b       	std	Y+22, r26	; 0x16
    29a0:	bf 8b       	std	Y+23, r27	; 0x17
    29a2:	20 e0       	ldi	r18, 0x00	; 0
    29a4:	30 e0       	ldi	r19, 0x00	; 0
    29a6:	40 e8       	ldi	r20, 0x80	; 128
    29a8:	5f e3       	ldi	r21, 0x3F	; 63
    29aa:	6c 89       	ldd	r22, Y+20	; 0x14
    29ac:	7d 89       	ldd	r23, Y+21	; 0x15
    29ae:	8e 89       	ldd	r24, Y+22	; 0x16
    29b0:	9f 89       	ldd	r25, Y+23	; 0x17
    29b2:	0e 94 27 1b 	call	0x364e	; 0x364e <__cmpsf2>
    29b6:	88 23       	and	r24, r24
    29b8:	2c f4       	brge	.+10     	; 0x29c4 <__vector_1+0x1dc>
    29ba:	81 e0       	ldi	r24, 0x01	; 1
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	99 8f       	std	Y+25, r25	; 0x19
    29c0:	88 8f       	std	Y+24, r24	; 0x18
    29c2:	3f c0       	rjmp	.+126    	; 0x2a42 <__vector_1+0x25a>
    29c4:	20 e0       	ldi	r18, 0x00	; 0
    29c6:	3f ef       	ldi	r19, 0xFF	; 255
    29c8:	4f e7       	ldi	r20, 0x7F	; 127
    29ca:	57 e4       	ldi	r21, 0x47	; 71
    29cc:	6c 89       	ldd	r22, Y+20	; 0x14
    29ce:	7d 89       	ldd	r23, Y+21	; 0x15
    29d0:	8e 89       	ldd	r24, Y+22	; 0x16
    29d2:	9f 89       	ldd	r25, Y+23	; 0x17
    29d4:	0e 94 7f 1c 	call	0x38fe	; 0x38fe <__gesf2>
    29d8:	18 16       	cp	r1, r24
    29da:	4c f5       	brge	.+82     	; 0x2a2e <__vector_1+0x246>
    29dc:	20 e0       	ldi	r18, 0x00	; 0
    29de:	30 e0       	ldi	r19, 0x00	; 0
    29e0:	40 e2       	ldi	r20, 0x20	; 32
    29e2:	51 e4       	ldi	r21, 0x41	; 65
    29e4:	6a 81       	ldd	r22, Y+2	; 0x02
    29e6:	7b 81       	ldd	r23, Y+3	; 0x03
    29e8:	8c 81       	ldd	r24, Y+4	; 0x04
    29ea:	9d 81       	ldd	r25, Y+5	; 0x05
    29ec:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    29f0:	dc 01       	movw	r26, r24
    29f2:	cb 01       	movw	r24, r22
    29f4:	bc 01       	movw	r22, r24
    29f6:	cd 01       	movw	r24, r26
    29f8:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    29fc:	dc 01       	movw	r26, r24
    29fe:	cb 01       	movw	r24, r22
    2a00:	99 8f       	std	Y+25, r25	; 0x19
    2a02:	88 8f       	std	Y+24, r24	; 0x18
    2a04:	0f c0       	rjmp	.+30     	; 0x2a24 <__vector_1+0x23c>
    2a06:	80 e9       	ldi	r24, 0x90	; 144
    2a08:	91 e0       	ldi	r25, 0x01	; 1
    2a0a:	9b 8f       	std	Y+27, r25	; 0x1b
    2a0c:	8a 8f       	std	Y+26, r24	; 0x1a
    2a0e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2a10:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2a12:	01 97       	sbiw	r24, 0x01	; 1
    2a14:	f1 f7       	brne	.-4      	; 0x2a12 <__vector_1+0x22a>
    2a16:	9b 8f       	std	Y+27, r25	; 0x1b
    2a18:	8a 8f       	std	Y+26, r24	; 0x1a
    2a1a:	88 8d       	ldd	r24, Y+24	; 0x18
    2a1c:	99 8d       	ldd	r25, Y+25	; 0x19
    2a1e:	01 97       	sbiw	r24, 0x01	; 1
    2a20:	99 8f       	std	Y+25, r25	; 0x19
    2a22:	88 8f       	std	Y+24, r24	; 0x18
    2a24:	88 8d       	ldd	r24, Y+24	; 0x18
    2a26:	99 8d       	ldd	r25, Y+25	; 0x19
    2a28:	89 2b       	or	r24, r25
    2a2a:	69 f7       	brne	.-38     	; 0x2a06 <__vector_1+0x21e>
    2a2c:	14 c0       	rjmp	.+40     	; 0x2a56 <__vector_1+0x26e>
    2a2e:	6c 89       	ldd	r22, Y+20	; 0x14
    2a30:	7d 89       	ldd	r23, Y+21	; 0x15
    2a32:	8e 89       	ldd	r24, Y+22	; 0x16
    2a34:	9f 89       	ldd	r25, Y+23	; 0x17
    2a36:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    2a3a:	dc 01       	movw	r26, r24
    2a3c:	cb 01       	movw	r24, r22
    2a3e:	99 8f       	std	Y+25, r25	; 0x19
    2a40:	88 8f       	std	Y+24, r24	; 0x18
    2a42:	88 8d       	ldd	r24, Y+24	; 0x18
    2a44:	99 8d       	ldd	r25, Y+25	; 0x19
    2a46:	9d 8f       	std	Y+29, r25	; 0x1d
    2a48:	8c 8f       	std	Y+28, r24	; 0x1c
    2a4a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a4c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a4e:	01 97       	sbiw	r24, 0x01	; 1
    2a50:	f1 f7       	brne	.-4      	; 0x2a4e <__vector_1+0x266>
    2a52:	9d 8f       	std	Y+29, r25	; 0x1d
    2a54:	8c 8f       	std	Y+28, r24	; 0x1c
    2a56:	60 e0       	ldi	r22, 0x00	; 0
    2a58:	87 e0       	ldi	r24, 0x07	; 7
    2a5a:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2a5e:	60 e0       	ldi	r22, 0x00	; 0
    2a60:	85 e0       	ldi	r24, 0x05	; 5
    2a62:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
    2a66:	00 00       	nop
    2a68:	c0 5b       	subi	r28, 0xB0	; 176
    2a6a:	df 4f       	sbci	r29, 0xFF	; 255
    2a6c:	0f b6       	in	r0, 0x3f	; 63
    2a6e:	f8 94       	cli
    2a70:	de bf       	out	0x3e, r29	; 62
    2a72:	0f be       	out	0x3f, r0	; 63
    2a74:	cd bf       	out	0x3d, r28	; 61
    2a76:	df 91       	pop	r29
    2a78:	cf 91       	pop	r28
    2a7a:	ff 91       	pop	r31
    2a7c:	ef 91       	pop	r30
    2a7e:	bf 91       	pop	r27
    2a80:	af 91       	pop	r26
    2a82:	9f 91       	pop	r25
    2a84:	8f 91       	pop	r24
    2a86:	7f 91       	pop	r23
    2a88:	6f 91       	pop	r22
    2a8a:	5f 91       	pop	r21
    2a8c:	4f 91       	pop	r20
    2a8e:	3f 91       	pop	r19
    2a90:	2f 91       	pop	r18
    2a92:	0f 90       	pop	r0
    2a94:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2a98:	0f 90       	pop	r0
    2a9a:	1f 90       	pop	r1
    2a9c:	18 95       	reti

00002a9e <__vector_2>:
    2a9e:	1f 92       	push	r1
    2aa0:	0f 92       	push	r0
    2aa2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2aa6:	0f 92       	push	r0
    2aa8:	11 24       	eor	r1, r1
    2aaa:	2f 93       	push	r18
    2aac:	3f 93       	push	r19
    2aae:	4f 93       	push	r20
    2ab0:	5f 93       	push	r21
    2ab2:	6f 93       	push	r22
    2ab4:	7f 93       	push	r23
    2ab6:	8f 93       	push	r24
    2ab8:	9f 93       	push	r25
    2aba:	af 93       	push	r26
    2abc:	bf 93       	push	r27
    2abe:	ef 93       	push	r30
    2ac0:	ff 93       	push	r31
    2ac2:	cf 93       	push	r28
    2ac4:	df 93       	push	r29
    2ac6:	cd b7       	in	r28, 0x3d	; 61
    2ac8:	de b7       	in	r29, 0x3e	; 62
    2aca:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <INT1_ptr>
    2ace:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <INT1_ptr+0x1>
    2ad2:	fc 01       	movw	r30, r24
    2ad4:	09 95       	icall
    2ad6:	00 00       	nop
    2ad8:	df 91       	pop	r29
    2ada:	cf 91       	pop	r28
    2adc:	ff 91       	pop	r31
    2ade:	ef 91       	pop	r30
    2ae0:	bf 91       	pop	r27
    2ae2:	af 91       	pop	r26
    2ae4:	9f 91       	pop	r25
    2ae6:	8f 91       	pop	r24
    2ae8:	7f 91       	pop	r23
    2aea:	6f 91       	pop	r22
    2aec:	5f 91       	pop	r21
    2aee:	4f 91       	pop	r20
    2af0:	3f 91       	pop	r19
    2af2:	2f 91       	pop	r18
    2af4:	0f 90       	pop	r0
    2af6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2afa:	0f 90       	pop	r0
    2afc:	1f 90       	pop	r1
    2afe:	18 95       	reti

00002b00 <__vector_3>:
    2b00:	1f 92       	push	r1
    2b02:	0f 92       	push	r0
    2b04:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2b08:	0f 92       	push	r0
    2b0a:	11 24       	eor	r1, r1
    2b0c:	2f 93       	push	r18
    2b0e:	3f 93       	push	r19
    2b10:	4f 93       	push	r20
    2b12:	5f 93       	push	r21
    2b14:	6f 93       	push	r22
    2b16:	7f 93       	push	r23
    2b18:	8f 93       	push	r24
    2b1a:	9f 93       	push	r25
    2b1c:	af 93       	push	r26
    2b1e:	bf 93       	push	r27
    2b20:	ef 93       	push	r30
    2b22:	ff 93       	push	r31
    2b24:	cf 93       	push	r28
    2b26:	df 93       	push	r29
    2b28:	cd b7       	in	r28, 0x3d	; 61
    2b2a:	de b7       	in	r29, 0x3e	; 62
    2b2c:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <INT2_ptr>
    2b30:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <INT2_ptr+0x1>
    2b34:	fc 01       	movw	r30, r24
    2b36:	09 95       	icall
    2b38:	00 00       	nop
    2b3a:	df 91       	pop	r29
    2b3c:	cf 91       	pop	r28
    2b3e:	ff 91       	pop	r31
    2b40:	ef 91       	pop	r30
    2b42:	bf 91       	pop	r27
    2b44:	af 91       	pop	r26
    2b46:	9f 91       	pop	r25
    2b48:	8f 91       	pop	r24
    2b4a:	7f 91       	pop	r23
    2b4c:	6f 91       	pop	r22
    2b4e:	5f 91       	pop	r21
    2b50:	4f 91       	pop	r20
    2b52:	3f 91       	pop	r19
    2b54:	2f 91       	pop	r18
    2b56:	0f 90       	pop	r0
    2b58:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2b5c:	0f 90       	pop	r0
    2b5e:	1f 90       	pop	r1
    2b60:	18 95       	reti

00002b62 <GI_enable>:
    2b62:	cf 93       	push	r28
    2b64:	df 93       	push	r29
    2b66:	cd b7       	in	r28, 0x3d	; 61
    2b68:	de b7       	in	r29, 0x3e	; 62
    2b6a:	8f e5       	ldi	r24, 0x5F	; 95
    2b6c:	90 e0       	ldi	r25, 0x00	; 0
    2b6e:	2f e5       	ldi	r18, 0x5F	; 95
    2b70:	30 e0       	ldi	r19, 0x00	; 0
    2b72:	f9 01       	movw	r30, r18
    2b74:	20 81       	ld	r18, Z
    2b76:	20 68       	ori	r18, 0x80	; 128
    2b78:	fc 01       	movw	r30, r24
    2b7a:	20 83       	st	Z, r18
    2b7c:	00 00       	nop
    2b7e:	df 91       	pop	r29
    2b80:	cf 91       	pop	r28
    2b82:	08 95       	ret

00002b84 <I2C_init>:
    2b84:	cf 93       	push	r28
    2b86:	df 93       	push	r29
    2b88:	1f 92       	push	r1
    2b8a:	cd b7       	in	r28, 0x3d	; 61
    2b8c:	de b7       	in	r29, 0x3e	; 62
    2b8e:	89 83       	std	Y+1, r24	; 0x01
    2b90:	89 81       	ldd	r24, Y+1	; 0x01
    2b92:	81 30       	cpi	r24, 0x01	; 1
    2b94:	41 f0       	breq	.+16     	; 0x2ba6 <I2C_init+0x22>
    2b96:	89 81       	ldd	r24, Y+1	; 0x01
    2b98:	88 23       	and	r24, r24
    2b9a:	29 f4       	brne	.+10     	; 0x2ba6 <I2C_init+0x22>
    2b9c:	82 e2       	ldi	r24, 0x22	; 34
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	20 ea       	ldi	r18, 0xA0	; 160
    2ba2:	fc 01       	movw	r30, r24
    2ba4:	20 83       	st	Z, r18
    2ba6:	86 e5       	ldi	r24, 0x56	; 86
    2ba8:	90 e0       	ldi	r25, 0x00	; 0
    2baa:	26 e5       	ldi	r18, 0x56	; 86
    2bac:	30 e0       	ldi	r19, 0x00	; 0
    2bae:	f9 01       	movw	r30, r18
    2bb0:	20 81       	ld	r18, Z
    2bb2:	24 60       	ori	r18, 0x04	; 4
    2bb4:	fc 01       	movw	r30, r24
    2bb6:	20 83       	st	Z, r18
    2bb8:	80 e2       	ldi	r24, 0x20	; 32
    2bba:	90 e0       	ldi	r25, 0x00	; 0
    2bbc:	28 e4       	ldi	r18, 0x48	; 72
    2bbe:	fc 01       	movw	r30, r24
    2bc0:	20 83       	st	Z, r18
    2bc2:	00 00       	nop
    2bc4:	0f 90       	pop	r0
    2bc6:	df 91       	pop	r29
    2bc8:	cf 91       	pop	r28
    2bca:	08 95       	ret

00002bcc <SPI_Init>:
{
	DIO_setPinValue(DIO_PINB4,DIO_HIGH);
	DIO_setPinValue(DIO_PINB4,DIO_LOW);
	SPDR=data;
	while(GET_BIT(SPSR,SPIF)==0);
}
    2bcc:	cf 93       	push	r28
    2bce:	df 93       	push	r29
    2bd0:	cd b7       	in	r28, 0x3d	; 61
    2bd2:	de b7       	in	r29, 0x3e	; 62
    2bd4:	8d e2       	ldi	r24, 0x2D	; 45
    2bd6:	90 e0       	ldi	r25, 0x00	; 0
    2bd8:	2d e2       	ldi	r18, 0x2D	; 45
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	f9 01       	movw	r30, r18
    2bde:	20 81       	ld	r18, Z
    2be0:	2f 7e       	andi	r18, 0xEF	; 239
    2be2:	fc 01       	movw	r30, r24
    2be4:	20 83       	st	Z, r18
    2be6:	61 e0       	ldi	r22, 0x01	; 1
    2be8:	8d e0       	ldi	r24, 0x0D	; 13
    2bea:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    2bee:	61 e0       	ldi	r22, 0x01	; 1
    2bf0:	8f e0       	ldi	r24, 0x0F	; 15
    2bf2:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    2bf6:	60 e0       	ldi	r22, 0x00	; 0
    2bf8:	8e e0       	ldi	r24, 0x0E	; 14
    2bfa:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    2bfe:	61 e0       	ldi	r22, 0x01	; 1
    2c00:	8c e0       	ldi	r24, 0x0C	; 12
    2c02:	0e 94 94 12 	call	0x2528	; 0x2528 <DIO_setPinDir>
    2c06:	8d e2       	ldi	r24, 0x2D	; 45
    2c08:	90 e0       	ldi	r25, 0x00	; 0
    2c0a:	2d e2       	ldi	r18, 0x2D	; 45
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	f9 01       	movw	r30, r18
    2c10:	20 81       	ld	r18, Z
    2c12:	20 68       	ori	r18, 0x80	; 128
    2c14:	fc 01       	movw	r30, r24
    2c16:	20 83       	st	Z, r18
    2c18:	8d e2       	ldi	r24, 0x2D	; 45
    2c1a:	90 e0       	ldi	r25, 0x00	; 0
    2c1c:	2d e2       	ldi	r18, 0x2D	; 45
    2c1e:	30 e0       	ldi	r19, 0x00	; 0
    2c20:	f9 01       	movw	r30, r18
    2c22:	20 81       	ld	r18, Z
    2c24:	20 64       	ori	r18, 0x40	; 64
    2c26:	fc 01       	movw	r30, r24
    2c28:	20 83       	st	Z, r18
    2c2a:	00 00       	nop
    2c2c:	df 91       	pop	r29
    2c2e:	cf 91       	pop	r28
    2c30:	08 95       	ret

00002c32 <SPI_Read>:
    2c32:	cf 93       	push	r28
    2c34:	df 93       	push	r29
    2c36:	cd b7       	in	r28, 0x3d	; 61
    2c38:	de b7       	in	r29, 0x3e	; 62
    2c3a:	00 00       	nop
    2c3c:	8e e2       	ldi	r24, 0x2E	; 46
    2c3e:	90 e0       	ldi	r25, 0x00	; 0
    2c40:	fc 01       	movw	r30, r24
    2c42:	80 81       	ld	r24, Z
    2c44:	88 1f       	adc	r24, r24
    2c46:	88 27       	eor	r24, r24
    2c48:	88 1f       	adc	r24, r24
    2c4a:	88 2f       	mov	r24, r24
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	81 70       	andi	r24, 0x01	; 1
    2c50:	99 27       	eor	r25, r25
    2c52:	89 2b       	or	r24, r25
    2c54:	99 f3       	breq	.-26     	; 0x2c3c <SPI_Read+0xa>
    2c56:	8f e2       	ldi	r24, 0x2F	; 47
    2c58:	90 e0       	ldi	r25, 0x00	; 0
    2c5a:	fc 01       	movw	r30, r24
    2c5c:	80 81       	ld	r24, Z
    2c5e:	df 91       	pop	r29
    2c60:	cf 91       	pop	r28
    2c62:	08 95       	ret

00002c64 <control>:
// SPI interrupt service routine using __vector keyword

void control(u8 Val)
{
    2c64:	cf 93       	push	r28
    2c66:	df 93       	push	r29
    2c68:	1f 92       	push	r1
    2c6a:	cd b7       	in	r28, 0x3d	; 61
    2c6c:	de b7       	in	r29, 0x3e	; 62
    2c6e:	89 83       	std	Y+1, r24	; 0x01
	
	if(Val=='g')
    2c70:	89 81       	ldd	r24, Y+1	; 0x01
    2c72:	87 36       	cpi	r24, 0x67	; 103
    2c74:	79 f4       	brne	.+30     	; 0x2c94 <control+0x30>
		{
			DIO_setPinValue(DIO_PINA0,DIO_HIGH);
    2c76:	61 e0       	ldi	r22, 0x01	; 1
    2c78:	80 e0       	ldi	r24, 0x00	; 0
    2c7a:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(0,2);
    2c7e:	62 e0       	ldi	r22, 0x02	; 2
    2c80:	70 e0       	ldi	r23, 0x00	; 0
    2c82:	80 e0       	ldi	r24, 0x00	; 0
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("L1");
    2c8a:	82 ed       	ldi	r24, 0xD2	; 210
    2c8c:	93 e0       	ldi	r25, 0x03	; 3
    2c8e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2c92:	07 c1       	rjmp	.+526    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA0,DIO_HIGH);
			LCD_goto(0,2);
			LCD_writeStr("L1");
		}
	else if(Val=='h')
    2c94:	89 81       	ldd	r24, Y+1	; 0x01
    2c96:	88 36       	cpi	r24, 0x68	; 104
    2c98:	79 f4       	brne	.+30     	; 0x2cb8 <control+0x54>
		{
			DIO_setPinValue(DIO_PINA1,DIO_HIGH);
    2c9a:	61 e0       	ldi	r22, 0x01	; 1
    2c9c:	81 e0       	ldi	r24, 0x01	; 1
    2c9e:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(2,2);
    2ca2:	62 e0       	ldi	r22, 0x02	; 2
    2ca4:	70 e0       	ldi	r23, 0x00	; 0
    2ca6:	82 e0       	ldi	r24, 0x02	; 2
    2ca8:	90 e0       	ldi	r25, 0x00	; 0
    2caa:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("L2");
    2cae:	85 ed       	ldi	r24, 0xD5	; 213
    2cb0:	93 e0       	ldi	r25, 0x03	; 3
    2cb2:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2cb6:	f5 c0       	rjmp	.+490    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA1,DIO_HIGH);
			LCD_goto(2,2);
			LCD_writeStr("L2");
		}
	else if(Val=='i')
    2cb8:	89 81       	ldd	r24, Y+1	; 0x01
    2cba:	89 36       	cpi	r24, 0x69	; 105
    2cbc:	79 f4       	brne	.+30     	; 0x2cdc <control+0x78>
		{
			DIO_setPinValue(DIO_PINA2,DIO_HIGH);
    2cbe:	61 e0       	ldi	r22, 0x01	; 1
    2cc0:	82 e0       	ldi	r24, 0x02	; 2
    2cc2:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(4,2);
    2cc6:	62 e0       	ldi	r22, 0x02	; 2
    2cc8:	70 e0       	ldi	r23, 0x00	; 0
    2cca:	84 e0       	ldi	r24, 0x04	; 4
    2ccc:	90 e0       	ldi	r25, 0x00	; 0
    2cce:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("L3");
    2cd2:	88 ed       	ldi	r24, 0xD8	; 216
    2cd4:	93 e0       	ldi	r25, 0x03	; 3
    2cd6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2cda:	e3 c0       	rjmp	.+454    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA2,DIO_HIGH);
			LCD_goto(4,2);
			LCD_writeStr("L3");
		}
	else if(Val=='j')
    2cdc:	89 81       	ldd	r24, Y+1	; 0x01
    2cde:	8a 36       	cpi	r24, 0x6A	; 106
    2ce0:	79 f4       	brne	.+30     	; 0x2d00 <control+0x9c>
		{
			DIO_setPinValue(DIO_PINA3,DIO_HIGH);
    2ce2:	61 e0       	ldi	r22, 0x01	; 1
    2ce4:	83 e0       	ldi	r24, 0x03	; 3
    2ce6:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(6,2);
    2cea:	62 e0       	ldi	r22, 0x02	; 2
    2cec:	70 e0       	ldi	r23, 0x00	; 0
    2cee:	86 e0       	ldi	r24, 0x06	; 6
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("L4");
    2cf6:	8b ed       	ldi	r24, 0xDB	; 219
    2cf8:	93 e0       	ldi	r25, 0x03	; 3
    2cfa:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2cfe:	d1 c0       	rjmp	.+418    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA3,DIO_HIGH);
			LCD_goto(6,2);
			LCD_writeStr("L4");
		}
	else if(Val=='k')
    2d00:	89 81       	ldd	r24, Y+1	; 0x01
    2d02:	8b 36       	cpi	r24, 0x6B	; 107
    2d04:	79 f4       	brne	.+30     	; 0x2d24 <control+0xc0>
		{
			DIO_setPinValue(DIO_PINA4,DIO_HIGH);
    2d06:	61 e0       	ldi	r22, 0x01	; 1
    2d08:	84 e0       	ldi	r24, 0x04	; 4
    2d0a:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(8,2);
    2d0e:	62 e0       	ldi	r22, 0x02	; 2
    2d10:	70 e0       	ldi	r23, 0x00	; 0
    2d12:	88 e0       	ldi	r24, 0x08	; 8
    2d14:	90 e0       	ldi	r25, 0x00	; 0
    2d16:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("L5");
    2d1a:	8e ed       	ldi	r24, 0xDE	; 222
    2d1c:	93 e0       	ldi	r25, 0x03	; 3
    2d1e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2d22:	bf c0       	rjmp	.+382    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA4,DIO_HIGH);
			LCD_goto(8,2);
			LCD_writeStr("L5");
		}
	else if(Val=='l')
    2d24:	89 81       	ldd	r24, Y+1	; 0x01
    2d26:	8c 36       	cpi	r24, 0x6C	; 108
    2d28:	79 f4       	brne	.+30     	; 0x2d48 <control+0xe4>
		{
			DIO_setPinValue(DIO_PINA0,DIO_LOW);
    2d2a:	60 e0       	ldi	r22, 0x00	; 0
    2d2c:	80 e0       	ldi	r24, 0x00	; 0
    2d2e:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(0,2);
    2d32:	62 e0       	ldi	r22, 0x02	; 2
    2d34:	70 e0       	ldi	r23, 0x00	; 0
    2d36:	80 e0       	ldi	r24, 0x00	; 0
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("  ");
    2d3e:	81 ee       	ldi	r24, 0xE1	; 225
    2d40:	93 e0       	ldi	r25, 0x03	; 3
    2d42:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2d46:	ad c0       	rjmp	.+346    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA0,DIO_LOW);
			LCD_goto(0,2);
			LCD_writeStr("  ");
		}
	else if(Val=='m')
    2d48:	89 81       	ldd	r24, Y+1	; 0x01
    2d4a:	8d 36       	cpi	r24, 0x6D	; 109
    2d4c:	79 f4       	brne	.+30     	; 0x2d6c <control+0x108>
		{
			DIO_setPinValue(DIO_PINA1,DIO_LOW);
    2d4e:	60 e0       	ldi	r22, 0x00	; 0
    2d50:	81 e0       	ldi	r24, 0x01	; 1
    2d52:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(2,2);
    2d56:	62 e0       	ldi	r22, 0x02	; 2
    2d58:	70 e0       	ldi	r23, 0x00	; 0
    2d5a:	82 e0       	ldi	r24, 0x02	; 2
    2d5c:	90 e0       	ldi	r25, 0x00	; 0
    2d5e:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("  ");
    2d62:	81 ee       	ldi	r24, 0xE1	; 225
    2d64:	93 e0       	ldi	r25, 0x03	; 3
    2d66:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2d6a:	9b c0       	rjmp	.+310    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA1,DIO_LOW);
			LCD_goto(2,2);
			LCD_writeStr("  ");
		}
	else if(Val=='n')
    2d6c:	89 81       	ldd	r24, Y+1	; 0x01
    2d6e:	8e 36       	cpi	r24, 0x6E	; 110
    2d70:	79 f4       	brne	.+30     	; 0x2d90 <control+0x12c>
		{
			DIO_setPinValue(DIO_PINA2,DIO_LOW);
    2d72:	60 e0       	ldi	r22, 0x00	; 0
    2d74:	82 e0       	ldi	r24, 0x02	; 2
    2d76:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(4,2);
    2d7a:	62 e0       	ldi	r22, 0x02	; 2
    2d7c:	70 e0       	ldi	r23, 0x00	; 0
    2d7e:	84 e0       	ldi	r24, 0x04	; 4
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("  ");
    2d86:	81 ee       	ldi	r24, 0xE1	; 225
    2d88:	93 e0       	ldi	r25, 0x03	; 3
    2d8a:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2d8e:	89 c0       	rjmp	.+274    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA2,DIO_LOW);
			LCD_goto(4,2);
			LCD_writeStr("  ");
		}
	else if(Val=='o')
    2d90:	89 81       	ldd	r24, Y+1	; 0x01
    2d92:	8f 36       	cpi	r24, 0x6F	; 111
    2d94:	79 f4       	brne	.+30     	; 0x2db4 <control+0x150>
		{
			DIO_setPinValue(DIO_PINA3,DIO_LOW);
    2d96:	60 e0       	ldi	r22, 0x00	; 0
    2d98:	83 e0       	ldi	r24, 0x03	; 3
    2d9a:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(6,2);
    2d9e:	62 e0       	ldi	r22, 0x02	; 2
    2da0:	70 e0       	ldi	r23, 0x00	; 0
    2da2:	86 e0       	ldi	r24, 0x06	; 6
    2da4:	90 e0       	ldi	r25, 0x00	; 0
    2da6:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("  ");
    2daa:	81 ee       	ldi	r24, 0xE1	; 225
    2dac:	93 e0       	ldi	r25, 0x03	; 3
    2dae:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2db2:	77 c0       	rjmp	.+238    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA3,DIO_LOW);
			LCD_goto(6,2);
			LCD_writeStr("  ");
		}
	else if(Val=='p')
    2db4:	89 81       	ldd	r24, Y+1	; 0x01
    2db6:	80 37       	cpi	r24, 0x70	; 112
    2db8:	79 f4       	brne	.+30     	; 0x2dd8 <control+0x174>
		{
			DIO_setPinValue(DIO_PINA4,DIO_LOW);
    2dba:	60 e0       	ldi	r22, 0x00	; 0
    2dbc:	84 e0       	ldi	r24, 0x04	; 4
    2dbe:	0e 94 9f 11 	call	0x233e	; 0x233e <DIO_setPinValue>
			LCD_goto(8,2);
    2dc2:	62 e0       	ldi	r22, 0x02	; 2
    2dc4:	70 e0       	ldi	r23, 0x00	; 0
    2dc6:	88 e0       	ldi	r24, 0x08	; 8
    2dc8:	90 e0       	ldi	r25, 0x00	; 0
    2dca:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("  ");
    2dce:	81 ee       	ldi	r24, 0xE1	; 225
    2dd0:	93 e0       	ldi	r25, 0x03	; 3
    2dd2:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2dd6:	65 c0       	rjmp	.+202    	; 0x2ea2 <control+0x23e>
		{
			DIO_setPinValue(DIO_PINA4,DIO_LOW);
			LCD_goto(8,2);
			LCD_writeStr("  ");
		}
	else if(Val == 'a')
    2dd8:	89 81       	ldd	r24, Y+1	; 0x01
    2dda:	81 36       	cpi	r24, 0x61	; 97
    2ddc:	71 f4       	brne	.+28     	; 0x2dfa <control+0x196>
		{ 
		LED_DIMMER(0);
    2dde:	80 e0       	ldi	r24, 0x00	; 0
    2de0:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
		LCD_goto(10,2);
    2de4:	62 e0       	ldi	r22, 0x02	; 2
    2de6:	70 e0       	ldi	r23, 0x00	; 0
    2de8:	8a e0       	ldi	r24, 0x0A	; 10
    2dea:	90 e0       	ldi	r25, 0x00	; 0
    2dec:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
		LCD_writeStr("      ");
    2df0:	84 ee       	ldi	r24, 0xE4	; 228
    2df2:	93 e0       	ldi	r25, 0x03	; 3
    2df4:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2df8:	54 c0       	rjmp	.+168    	; 0x2ea2 <control+0x23e>
		{ 
		LED_DIMMER(0);
		LCD_goto(10,2);
		LCD_writeStr("      ");
		} 
	else if(Val == 'b')
    2dfa:	89 81       	ldd	r24, Y+1	; 0x01
    2dfc:	82 36       	cpi	r24, 0x62	; 98
    2dfe:	71 f4       	brne	.+28     	; 0x2e1c <control+0x1b8>
		{
			LED_DIMMER(1);
    2e00:	81 e0       	ldi	r24, 0x01	; 1
    2e02:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
			LCD_goto(10,2);
    2e06:	62 e0       	ldi	r22, 0x02	; 2
    2e08:	70 e0       	ldi	r23, 0x00	; 0
    2e0a:	8a e0       	ldi	r24, 0x0A	; 10
    2e0c:	90 e0       	ldi	r25, 0x00	; 0
    2e0e:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("Dim L1");
    2e12:	8b ee       	ldi	r24, 0xEB	; 235
    2e14:	93 e0       	ldi	r25, 0x03	; 3
    2e16:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2e1a:	43 c0       	rjmp	.+134    	; 0x2ea2 <control+0x23e>
		{
			LED_DIMMER(1);
			LCD_goto(10,2);
			LCD_writeStr("Dim L1");
		}
	else if(Val == 'c')
    2e1c:	89 81       	ldd	r24, Y+1	; 0x01
    2e1e:	83 36       	cpi	r24, 0x63	; 99
    2e20:	71 f4       	brne	.+28     	; 0x2e3e <control+0x1da>
		{
			LED_DIMMER(2);
    2e22:	82 e0       	ldi	r24, 0x02	; 2
    2e24:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
			LCD_goto(10,2);
    2e28:	62 e0       	ldi	r22, 0x02	; 2
    2e2a:	70 e0       	ldi	r23, 0x00	; 0
    2e2c:	8a e0       	ldi	r24, 0x0A	; 10
    2e2e:	90 e0       	ldi	r25, 0x00	; 0
    2e30:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("Dim L2");
    2e34:	82 ef       	ldi	r24, 0xF2	; 242
    2e36:	93 e0       	ldi	r25, 0x03	; 3
    2e38:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2e3c:	32 c0       	rjmp	.+100    	; 0x2ea2 <control+0x23e>
		{
			LED_DIMMER(2);
			LCD_goto(10,2);
			LCD_writeStr("Dim L2");
		}
	else if(Val == 'd')
    2e3e:	89 81       	ldd	r24, Y+1	; 0x01
    2e40:	84 36       	cpi	r24, 0x64	; 100
    2e42:	71 f4       	brne	.+28     	; 0x2e60 <control+0x1fc>
		{
			LED_DIMMER(3);
    2e44:	83 e0       	ldi	r24, 0x03	; 3
    2e46:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
			LCD_goto(10,2);
    2e4a:	62 e0       	ldi	r22, 0x02	; 2
    2e4c:	70 e0       	ldi	r23, 0x00	; 0
    2e4e:	8a e0       	ldi	r24, 0x0A	; 10
    2e50:	90 e0       	ldi	r25, 0x00	; 0
    2e52:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("Dim L3");
    2e56:	89 ef       	ldi	r24, 0xF9	; 249
    2e58:	93 e0       	ldi	r25, 0x03	; 3
    2e5a:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2e5e:	21 c0       	rjmp	.+66     	; 0x2ea2 <control+0x23e>
		{
			LED_DIMMER(3);
			LCD_goto(10,2);
			LCD_writeStr("Dim L3");
		}
	else if(Val == 'e')
    2e60:	89 81       	ldd	r24, Y+1	; 0x01
    2e62:	85 36       	cpi	r24, 0x65	; 101
    2e64:	71 f4       	brne	.+28     	; 0x2e82 <control+0x21e>
		{
			LED_DIMMER(4);
    2e66:	84 e0       	ldi	r24, 0x04	; 4
    2e68:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
			LCD_goto(10,2);
    2e6c:	62 e0       	ldi	r22, 0x02	; 2
    2e6e:	70 e0       	ldi	r23, 0x00	; 0
    2e70:	8a e0       	ldi	r24, 0x0A	; 10
    2e72:	90 e0       	ldi	r25, 0x00	; 0
    2e74:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("Dim L4");
    2e78:	80 e0       	ldi	r24, 0x00	; 0
    2e7a:	94 e0       	ldi	r25, 0x04	; 4
    2e7c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
			LCD_goto(10,2);
			LCD_writeStr("Dim L5");
		}	 	 	 
		

}
    2e80:	10 c0       	rjmp	.+32     	; 0x2ea2 <control+0x23e>
		{
			LED_DIMMER(4);
			LCD_goto(10,2);
			LCD_writeStr("Dim L4");
		} 
	else if(Val == 'f')
    2e82:	89 81       	ldd	r24, Y+1	; 0x01
    2e84:	86 36       	cpi	r24, 0x66	; 102
    2e86:	69 f4       	brne	.+26     	; 0x2ea2 <control+0x23e>
		{
			LED_DIMMER(0);
    2e88:	80 e0       	ldi	r24, 0x00	; 0
    2e8a:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <LED_DIMMER>
			LCD_goto(10,2);
    2e8e:	62 e0       	ldi	r22, 0x02	; 2
    2e90:	70 e0       	ldi	r23, 0x00	; 0
    2e92:	8a e0       	ldi	r24, 0x0A	; 10
    2e94:	90 e0       	ldi	r25, 0x00	; 0
    2e96:	0e 94 83 11 	call	0x2306	; 0x2306 <LCD_goto>
			LCD_writeStr("Dim L5");
    2e9a:	87 e0       	ldi	r24, 0x07	; 7
    2e9c:	94 e0       	ldi	r25, 0x04	; 4
    2e9e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD_writeStr>
		}	 	 	 
		

}
    2ea2:	00 00       	nop
    2ea4:	0f 90       	pop	r0
    2ea6:	df 91       	pop	r29
    2ea8:	cf 91       	pop	r28
    2eaa:	08 95       	ret

00002eac <__vector_12>:
void __vector_12(void) __attribute__((signal,used));
void __vector_12(void) 
{
    2eac:	1f 92       	push	r1
    2eae:	0f 92       	push	r0
    2eb0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2eb4:	0f 92       	push	r0
    2eb6:	11 24       	eor	r1, r1
    2eb8:	2f 93       	push	r18
    2eba:	3f 93       	push	r19
    2ebc:	4f 93       	push	r20
    2ebe:	5f 93       	push	r21
    2ec0:	6f 93       	push	r22
    2ec2:	7f 93       	push	r23
    2ec4:	8f 93       	push	r24
    2ec6:	9f 93       	push	r25
    2ec8:	af 93       	push	r26
    2eca:	bf 93       	push	r27
    2ecc:	ef 93       	push	r30
    2ece:	ff 93       	push	r31
    2ed0:	cf 93       	push	r28
    2ed2:	df 93       	push	r29
    2ed4:	1f 92       	push	r1
    2ed6:	cd b7       	in	r28, 0x3d	; 61
    2ed8:	de b7       	in	r29, 0x3e	; 62
	u8 Val=SPI_Read();
    2eda:	0e 94 19 16 	call	0x2c32	; 0x2c32 <SPI_Read>
    2ede:	89 83       	std	Y+1, r24	; 0x01
		control(Val);
    2ee0:	89 81       	ldd	r24, Y+1	; 0x01
    2ee2:	0e 94 32 16 	call	0x2c64	; 0x2c64 <control>
	// Add any processing code here
}
    2ee6:	00 00       	nop
    2ee8:	0f 90       	pop	r0
    2eea:	df 91       	pop	r29
    2eec:	cf 91       	pop	r28
    2eee:	ff 91       	pop	r31
    2ef0:	ef 91       	pop	r30
    2ef2:	bf 91       	pop	r27
    2ef4:	af 91       	pop	r26
    2ef6:	9f 91       	pop	r25
    2ef8:	8f 91       	pop	r24
    2efa:	7f 91       	pop	r23
    2efc:	6f 91       	pop	r22
    2efe:	5f 91       	pop	r21
    2f00:	4f 91       	pop	r20
    2f02:	3f 91       	pop	r19
    2f04:	2f 91       	pop	r18
    2f06:	0f 90       	pop	r0
    2f08:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2f0c:	0f 90       	pop	r0
    2f0e:	1f 90       	pop	r1
    2f10:	18 95       	reti

00002f12 <TIMER0_initFastPwm>:
    2f12:	cf 93       	push	r28
    2f14:	df 93       	push	r29
    2f16:	cd b7       	in	r28, 0x3d	; 61
    2f18:	de b7       	in	r29, 0x3e	; 62
    2f1a:	83 e5       	ldi	r24, 0x53	; 83
    2f1c:	90 e0       	ldi	r25, 0x00	; 0
    2f1e:	23 e5       	ldi	r18, 0x53	; 83
    2f20:	30 e0       	ldi	r19, 0x00	; 0
    2f22:	f9 01       	movw	r30, r18
    2f24:	20 81       	ld	r18, Z
    2f26:	2f 77       	andi	r18, 0x7F	; 127
    2f28:	fc 01       	movw	r30, r24
    2f2a:	20 83       	st	Z, r18
    2f2c:	83 e5       	ldi	r24, 0x53	; 83
    2f2e:	90 e0       	ldi	r25, 0x00	; 0
    2f30:	23 e5       	ldi	r18, 0x53	; 83
    2f32:	30 e0       	ldi	r19, 0x00	; 0
    2f34:	f9 01       	movw	r30, r18
    2f36:	20 81       	ld	r18, Z
    2f38:	20 64       	ori	r18, 0x40	; 64
    2f3a:	fc 01       	movw	r30, r24
    2f3c:	20 83       	st	Z, r18
    2f3e:	83 e5       	ldi	r24, 0x53	; 83
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	23 e5       	ldi	r18, 0x53	; 83
    2f44:	30 e0       	ldi	r19, 0x00	; 0
    2f46:	f9 01       	movw	r30, r18
    2f48:	20 81       	ld	r18, Z
    2f4a:	28 60       	ori	r18, 0x08	; 8
    2f4c:	fc 01       	movw	r30, r24
    2f4e:	20 83       	st	Z, r18
    2f50:	83 e5       	ldi	r24, 0x53	; 83
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	23 e5       	ldi	r18, 0x53	; 83
    2f56:	30 e0       	ldi	r19, 0x00	; 0
    2f58:	f9 01       	movw	r30, r18
    2f5a:	20 81       	ld	r18, Z
    2f5c:	2f 7e       	andi	r18, 0xEF	; 239
    2f5e:	fc 01       	movw	r30, r24
    2f60:	20 83       	st	Z, r18
    2f62:	83 e5       	ldi	r24, 0x53	; 83
    2f64:	90 e0       	ldi	r25, 0x00	; 0
    2f66:	23 e5       	ldi	r18, 0x53	; 83
    2f68:	30 e0       	ldi	r19, 0x00	; 0
    2f6a:	f9 01       	movw	r30, r18
    2f6c:	20 81       	ld	r18, Z
    2f6e:	20 62       	ori	r18, 0x20	; 32
    2f70:	fc 01       	movw	r30, r24
    2f72:	20 83       	st	Z, r18
    2f74:	00 00       	nop
    2f76:	df 91       	pop	r29
    2f78:	cf 91       	pop	r28
    2f7a:	08 95       	ret

00002f7c <TIMER0_start>:
    2f7c:	cf 93       	push	r28
    2f7e:	df 93       	push	r29
    2f80:	1f 92       	push	r1
    2f82:	cd b7       	in	r28, 0x3d	; 61
    2f84:	de b7       	in	r29, 0x3e	; 62
    2f86:	89 83       	std	Y+1, r24	; 0x01
    2f88:	89 81       	ldd	r24, Y+1	; 0x01
    2f8a:	88 23       	and	r24, r24
    2f8c:	e1 f4       	brne	.+56     	; 0x2fc6 <TIMER0_start+0x4a>
    2f8e:	83 e5       	ldi	r24, 0x53	; 83
    2f90:	90 e0       	ldi	r25, 0x00	; 0
    2f92:	23 e5       	ldi	r18, 0x53	; 83
    2f94:	30 e0       	ldi	r19, 0x00	; 0
    2f96:	f9 01       	movw	r30, r18
    2f98:	20 81       	ld	r18, Z
    2f9a:	21 60       	ori	r18, 0x01	; 1
    2f9c:	fc 01       	movw	r30, r24
    2f9e:	20 83       	st	Z, r18
    2fa0:	83 e5       	ldi	r24, 0x53	; 83
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	23 e5       	ldi	r18, 0x53	; 83
    2fa6:	30 e0       	ldi	r19, 0x00	; 0
    2fa8:	f9 01       	movw	r30, r18
    2faa:	20 81       	ld	r18, Z
    2fac:	2d 7f       	andi	r18, 0xFD	; 253
    2fae:	fc 01       	movw	r30, r24
    2fb0:	20 83       	st	Z, r18
    2fb2:	83 e5       	ldi	r24, 0x53	; 83
    2fb4:	90 e0       	ldi	r25, 0x00	; 0
    2fb6:	23 e5       	ldi	r18, 0x53	; 83
    2fb8:	30 e0       	ldi	r19, 0x00	; 0
    2fba:	f9 01       	movw	r30, r18
    2fbc:	20 81       	ld	r18, Z
    2fbe:	2b 7f       	andi	r18, 0xFB	; 251
    2fc0:	fc 01       	movw	r30, r24
    2fc2:	20 83       	st	Z, r18
    2fc4:	7b c0       	rjmp	.+246    	; 0x30bc <TIMER0_start+0x140>
    2fc6:	89 81       	ldd	r24, Y+1	; 0x01
    2fc8:	81 30       	cpi	r24, 0x01	; 1
    2fca:	e1 f4       	brne	.+56     	; 0x3004 <TIMER0_start+0x88>
    2fcc:	83 e5       	ldi	r24, 0x53	; 83
    2fce:	90 e0       	ldi	r25, 0x00	; 0
    2fd0:	23 e5       	ldi	r18, 0x53	; 83
    2fd2:	30 e0       	ldi	r19, 0x00	; 0
    2fd4:	f9 01       	movw	r30, r18
    2fd6:	20 81       	ld	r18, Z
    2fd8:	2e 7f       	andi	r18, 0xFE	; 254
    2fda:	fc 01       	movw	r30, r24
    2fdc:	20 83       	st	Z, r18
    2fde:	83 e5       	ldi	r24, 0x53	; 83
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	23 e5       	ldi	r18, 0x53	; 83
    2fe4:	30 e0       	ldi	r19, 0x00	; 0
    2fe6:	f9 01       	movw	r30, r18
    2fe8:	20 81       	ld	r18, Z
    2fea:	22 60       	ori	r18, 0x02	; 2
    2fec:	fc 01       	movw	r30, r24
    2fee:	20 83       	st	Z, r18
    2ff0:	83 e5       	ldi	r24, 0x53	; 83
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	23 e5       	ldi	r18, 0x53	; 83
    2ff6:	30 e0       	ldi	r19, 0x00	; 0
    2ff8:	f9 01       	movw	r30, r18
    2ffa:	20 81       	ld	r18, Z
    2ffc:	2b 7f       	andi	r18, 0xFB	; 251
    2ffe:	fc 01       	movw	r30, r24
    3000:	20 83       	st	Z, r18
    3002:	5c c0       	rjmp	.+184    	; 0x30bc <TIMER0_start+0x140>
    3004:	89 81       	ldd	r24, Y+1	; 0x01
    3006:	82 30       	cpi	r24, 0x02	; 2
    3008:	e1 f4       	brne	.+56     	; 0x3042 <TIMER0_start+0xc6>
    300a:	83 e5       	ldi	r24, 0x53	; 83
    300c:	90 e0       	ldi	r25, 0x00	; 0
    300e:	23 e5       	ldi	r18, 0x53	; 83
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	f9 01       	movw	r30, r18
    3014:	20 81       	ld	r18, Z
    3016:	21 60       	ori	r18, 0x01	; 1
    3018:	fc 01       	movw	r30, r24
    301a:	20 83       	st	Z, r18
    301c:	83 e5       	ldi	r24, 0x53	; 83
    301e:	90 e0       	ldi	r25, 0x00	; 0
    3020:	23 e5       	ldi	r18, 0x53	; 83
    3022:	30 e0       	ldi	r19, 0x00	; 0
    3024:	f9 01       	movw	r30, r18
    3026:	20 81       	ld	r18, Z
    3028:	22 60       	ori	r18, 0x02	; 2
    302a:	fc 01       	movw	r30, r24
    302c:	20 83       	st	Z, r18
    302e:	83 e5       	ldi	r24, 0x53	; 83
    3030:	90 e0       	ldi	r25, 0x00	; 0
    3032:	23 e5       	ldi	r18, 0x53	; 83
    3034:	30 e0       	ldi	r19, 0x00	; 0
    3036:	f9 01       	movw	r30, r18
    3038:	20 81       	ld	r18, Z
    303a:	2b 7f       	andi	r18, 0xFB	; 251
    303c:	fc 01       	movw	r30, r24
    303e:	20 83       	st	Z, r18
    3040:	3d c0       	rjmp	.+122    	; 0x30bc <TIMER0_start+0x140>
    3042:	89 81       	ldd	r24, Y+1	; 0x01
    3044:	83 30       	cpi	r24, 0x03	; 3
    3046:	e1 f4       	brne	.+56     	; 0x3080 <TIMER0_start+0x104>
    3048:	83 e5       	ldi	r24, 0x53	; 83
    304a:	90 e0       	ldi	r25, 0x00	; 0
    304c:	23 e5       	ldi	r18, 0x53	; 83
    304e:	30 e0       	ldi	r19, 0x00	; 0
    3050:	f9 01       	movw	r30, r18
    3052:	20 81       	ld	r18, Z
    3054:	2e 7f       	andi	r18, 0xFE	; 254
    3056:	fc 01       	movw	r30, r24
    3058:	20 83       	st	Z, r18
    305a:	83 e5       	ldi	r24, 0x53	; 83
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	23 e5       	ldi	r18, 0x53	; 83
    3060:	30 e0       	ldi	r19, 0x00	; 0
    3062:	f9 01       	movw	r30, r18
    3064:	20 81       	ld	r18, Z
    3066:	2d 7f       	andi	r18, 0xFD	; 253
    3068:	fc 01       	movw	r30, r24
    306a:	20 83       	st	Z, r18
    306c:	83 e5       	ldi	r24, 0x53	; 83
    306e:	90 e0       	ldi	r25, 0x00	; 0
    3070:	23 e5       	ldi	r18, 0x53	; 83
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	f9 01       	movw	r30, r18
    3076:	20 81       	ld	r18, Z
    3078:	24 60       	ori	r18, 0x04	; 4
    307a:	fc 01       	movw	r30, r24
    307c:	20 83       	st	Z, r18
    307e:	1e c0       	rjmp	.+60     	; 0x30bc <TIMER0_start+0x140>
    3080:	89 81       	ldd	r24, Y+1	; 0x01
    3082:	84 30       	cpi	r24, 0x04	; 4
    3084:	d9 f4       	brne	.+54     	; 0x30bc <TIMER0_start+0x140>
    3086:	83 e5       	ldi	r24, 0x53	; 83
    3088:	90 e0       	ldi	r25, 0x00	; 0
    308a:	23 e5       	ldi	r18, 0x53	; 83
    308c:	30 e0       	ldi	r19, 0x00	; 0
    308e:	f9 01       	movw	r30, r18
    3090:	20 81       	ld	r18, Z
    3092:	21 60       	ori	r18, 0x01	; 1
    3094:	fc 01       	movw	r30, r24
    3096:	20 83       	st	Z, r18
    3098:	83 e5       	ldi	r24, 0x53	; 83
    309a:	90 e0       	ldi	r25, 0x00	; 0
    309c:	23 e5       	ldi	r18, 0x53	; 83
    309e:	30 e0       	ldi	r19, 0x00	; 0
    30a0:	f9 01       	movw	r30, r18
    30a2:	20 81       	ld	r18, Z
    30a4:	2d 7f       	andi	r18, 0xFD	; 253
    30a6:	fc 01       	movw	r30, r24
    30a8:	20 83       	st	Z, r18
    30aa:	83 e5       	ldi	r24, 0x53	; 83
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	23 e5       	ldi	r18, 0x53	; 83
    30b0:	30 e0       	ldi	r19, 0x00	; 0
    30b2:	f9 01       	movw	r30, r18
    30b4:	20 81       	ld	r18, Z
    30b6:	24 60       	ori	r18, 0x04	; 4
    30b8:	fc 01       	movw	r30, r24
    30ba:	20 83       	st	Z, r18
    30bc:	00 00       	nop
    30be:	0f 90       	pop	r0
    30c0:	df 91       	pop	r29
    30c2:	cf 91       	pop	r28
    30c4:	08 95       	ret

000030c6 <TIMER0_stop>:
    30c6:	cf 93       	push	r28
    30c8:	df 93       	push	r29
    30ca:	cd b7       	in	r28, 0x3d	; 61
    30cc:	de b7       	in	r29, 0x3e	; 62
    30ce:	83 e5       	ldi	r24, 0x53	; 83
    30d0:	90 e0       	ldi	r25, 0x00	; 0
    30d2:	23 e5       	ldi	r18, 0x53	; 83
    30d4:	30 e0       	ldi	r19, 0x00	; 0
    30d6:	f9 01       	movw	r30, r18
    30d8:	20 81       	ld	r18, Z
    30da:	2e 7f       	andi	r18, 0xFE	; 254
    30dc:	fc 01       	movw	r30, r24
    30de:	20 83       	st	Z, r18
    30e0:	83 e5       	ldi	r24, 0x53	; 83
    30e2:	90 e0       	ldi	r25, 0x00	; 0
    30e4:	23 e5       	ldi	r18, 0x53	; 83
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	f9 01       	movw	r30, r18
    30ea:	20 81       	ld	r18, Z
    30ec:	2d 7f       	andi	r18, 0xFD	; 253
    30ee:	fc 01       	movw	r30, r24
    30f0:	20 83       	st	Z, r18
    30f2:	83 e5       	ldi	r24, 0x53	; 83
    30f4:	90 e0       	ldi	r25, 0x00	; 0
    30f6:	23 e5       	ldi	r18, 0x53	; 83
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	f9 01       	movw	r30, r18
    30fc:	20 81       	ld	r18, Z
    30fe:	2b 7f       	andi	r18, 0xFB	; 251
    3100:	fc 01       	movw	r30, r24
    3102:	20 83       	st	Z, r18
    3104:	00 00       	nop
    3106:	df 91       	pop	r29
    3108:	cf 91       	pop	r28
    310a:	08 95       	ret

0000310c <__vector_11>:
    310c:	1f 92       	push	r1
    310e:	0f 92       	push	r0
    3110:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    3114:	0f 92       	push	r0
    3116:	11 24       	eor	r1, r1
    3118:	2f 93       	push	r18
    311a:	3f 93       	push	r19
    311c:	4f 93       	push	r20
    311e:	5f 93       	push	r21
    3120:	6f 93       	push	r22
    3122:	7f 93       	push	r23
    3124:	8f 93       	push	r24
    3126:	9f 93       	push	r25
    3128:	af 93       	push	r26
    312a:	bf 93       	push	r27
    312c:	ef 93       	push	r30
    312e:	ff 93       	push	r31
    3130:	cf 93       	push	r28
    3132:	df 93       	push	r29
    3134:	cd b7       	in	r28, 0x3d	; 61
    3136:	de b7       	in	r29, 0x3e	; 62
    3138:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <OV_ptr>
    313c:	90 91 18 04 	lds	r25, 0x0418	; 0x800418 <OV_ptr+0x1>
    3140:	fc 01       	movw	r30, r24
    3142:	09 95       	icall
    3144:	00 00       	nop
    3146:	df 91       	pop	r29
    3148:	cf 91       	pop	r28
    314a:	ff 91       	pop	r31
    314c:	ef 91       	pop	r30
    314e:	bf 91       	pop	r27
    3150:	af 91       	pop	r26
    3152:	9f 91       	pop	r25
    3154:	8f 91       	pop	r24
    3156:	7f 91       	pop	r23
    3158:	6f 91       	pop	r22
    315a:	5f 91       	pop	r21
    315c:	4f 91       	pop	r20
    315e:	3f 91       	pop	r19
    3160:	2f 91       	pop	r18
    3162:	0f 90       	pop	r0
    3164:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    3168:	0f 90       	pop	r0
    316a:	1f 90       	pop	r1
    316c:	18 95       	reti

0000316e <__vector_10>:
    316e:	1f 92       	push	r1
    3170:	0f 92       	push	r0
    3172:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    3176:	0f 92       	push	r0
    3178:	11 24       	eor	r1, r1
    317a:	2f 93       	push	r18
    317c:	3f 93       	push	r19
    317e:	4f 93       	push	r20
    3180:	5f 93       	push	r21
    3182:	6f 93       	push	r22
    3184:	7f 93       	push	r23
    3186:	8f 93       	push	r24
    3188:	9f 93       	push	r25
    318a:	af 93       	push	r26
    318c:	bf 93       	push	r27
    318e:	ef 93       	push	r30
    3190:	ff 93       	push	r31
    3192:	cf 93       	push	r28
    3194:	df 93       	push	r29
    3196:	cd b7       	in	r28, 0x3d	; 61
    3198:	de b7       	in	r29, 0x3e	; 62
    319a:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <CTC_ptr>
    319e:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <CTC_ptr+0x1>
    31a2:	fc 01       	movw	r30, r24
    31a4:	09 95       	icall
    31a6:	00 00       	nop
    31a8:	df 91       	pop	r29
    31aa:	cf 91       	pop	r28
    31ac:	ff 91       	pop	r31
    31ae:	ef 91       	pop	r30
    31b0:	bf 91       	pop	r27
    31b2:	af 91       	pop	r26
    31b4:	9f 91       	pop	r25
    31b6:	8f 91       	pop	r24
    31b8:	7f 91       	pop	r23
    31ba:	6f 91       	pop	r22
    31bc:	5f 91       	pop	r21
    31be:	4f 91       	pop	r20
    31c0:	3f 91       	pop	r19
    31c2:	2f 91       	pop	r18
    31c4:	0f 90       	pop	r0
    31c6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    31ca:	0f 90       	pop	r0
    31cc:	1f 90       	pop	r1
    31ce:	18 95       	reti

000031d0 <TIMER0_setDuty>:
    31d0:	cf 93       	push	r28
    31d2:	df 93       	push	r29
    31d4:	1f 92       	push	r1
    31d6:	cd b7       	in	r28, 0x3d	; 61
    31d8:	de b7       	in	r29, 0x3e	; 62
    31da:	89 83       	std	Y+1, r24	; 0x01
    31dc:	2c e5       	ldi	r18, 0x5C	; 92
    31de:	30 e0       	ldi	r19, 0x00	; 0
    31e0:	89 81       	ldd	r24, Y+1	; 0x01
    31e2:	88 2f       	mov	r24, r24
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	98 2f       	mov	r25, r24
    31e8:	88 27       	eor	r24, r24
    31ea:	44 e6       	ldi	r20, 0x64	; 100
    31ec:	50 e0       	ldi	r21, 0x00	; 0
    31ee:	ba 01       	movw	r22, r20
    31f0:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divmodhi4>
    31f4:	cb 01       	movw	r24, r22
    31f6:	81 50       	subi	r24, 0x01	; 1
    31f8:	f9 01       	movw	r30, r18
    31fa:	80 83       	st	Z, r24
    31fc:	00 00       	nop
    31fe:	0f 90       	pop	r0
    3200:	df 91       	pop	r29
    3202:	cf 91       	pop	r28
    3204:	08 95       	ret

00003206 <TIMER0_setFrequency>:
    3206:	cf 93       	push	r28
    3208:	df 93       	push	r29
    320a:	1f 92       	push	r1
    320c:	cd b7       	in	r28, 0x3d	; 61
    320e:	de b7       	in	r29, 0x3e	; 62
    3210:	89 83       	std	Y+1, r24	; 0x01
    3212:	89 81       	ldd	r24, Y+1	; 0x01
    3214:	88 23       	and	r24, r24
    3216:	21 f4       	brne	.+8      	; 0x3220 <TIMER0_setFrequency+0x1a>
    3218:	80 e0       	ldi	r24, 0x00	; 0
    321a:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <TIMER0_start>
    321e:	06 c0       	rjmp	.+12     	; 0x322c <TIMER0_setFrequency+0x26>
    3220:	89 81       	ldd	r24, Y+1	; 0x01
    3222:	81 30       	cpi	r24, 0x01	; 1
    3224:	19 f4       	brne	.+6      	; 0x322c <TIMER0_setFrequency+0x26>
    3226:	81 e0       	ldi	r24, 0x01	; 1
    3228:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <TIMER0_start>
    322c:	00 00       	nop
    322e:	0f 90       	pop	r0
    3230:	df 91       	pop	r29
    3232:	cf 91       	pop	r28
    3234:	08 95       	ret

00003236 <TIMER1_initFastPwmMod14>:
    3236:	cf 93       	push	r28
    3238:	df 93       	push	r29
    323a:	cd b7       	in	r28, 0x3d	; 61
    323c:	de b7       	in	r29, 0x3e	; 62
    323e:	8f e4       	ldi	r24, 0x4F	; 79
    3240:	90 e0       	ldi	r25, 0x00	; 0
    3242:	2f e4       	ldi	r18, 0x4F	; 79
    3244:	30 e0       	ldi	r19, 0x00	; 0
    3246:	f9 01       	movw	r30, r18
    3248:	20 81       	ld	r18, Z
    324a:	24 60       	ori	r18, 0x04	; 4
    324c:	fc 01       	movw	r30, r24
    324e:	20 83       	st	Z, r18
    3250:	8f e4       	ldi	r24, 0x4F	; 79
    3252:	90 e0       	ldi	r25, 0x00	; 0
    3254:	2f e4       	ldi	r18, 0x4F	; 79
    3256:	30 e0       	ldi	r19, 0x00	; 0
    3258:	f9 01       	movw	r30, r18
    325a:	20 81       	ld	r18, Z
    325c:	2e 7f       	andi	r18, 0xFE	; 254
    325e:	fc 01       	movw	r30, r24
    3260:	20 83       	st	Z, r18
    3262:	8f e4       	ldi	r24, 0x4F	; 79
    3264:	90 e0       	ldi	r25, 0x00	; 0
    3266:	2f e4       	ldi	r18, 0x4F	; 79
    3268:	30 e0       	ldi	r19, 0x00	; 0
    326a:	f9 01       	movw	r30, r18
    326c:	20 81       	ld	r18, Z
    326e:	22 60       	ori	r18, 0x02	; 2
    3270:	fc 01       	movw	r30, r24
    3272:	20 83       	st	Z, r18
    3274:	8e e4       	ldi	r24, 0x4E	; 78
    3276:	90 e0       	ldi	r25, 0x00	; 0
    3278:	2e e4       	ldi	r18, 0x4E	; 78
    327a:	30 e0       	ldi	r19, 0x00	; 0
    327c:	f9 01       	movw	r30, r18
    327e:	20 81       	ld	r18, Z
    3280:	28 60       	ori	r18, 0x08	; 8
    3282:	fc 01       	movw	r30, r24
    3284:	20 83       	st	Z, r18
    3286:	8e e4       	ldi	r24, 0x4E	; 78
    3288:	90 e0       	ldi	r25, 0x00	; 0
    328a:	2e e4       	ldi	r18, 0x4E	; 78
    328c:	30 e0       	ldi	r19, 0x00	; 0
    328e:	f9 01       	movw	r30, r18
    3290:	20 81       	ld	r18, Z
    3292:	20 61       	ori	r18, 0x10	; 16
    3294:	fc 01       	movw	r30, r24
    3296:	20 83       	st	Z, r18
    3298:	8f e4       	ldi	r24, 0x4F	; 79
    329a:	90 e0       	ldi	r25, 0x00	; 0
    329c:	2f e4       	ldi	r18, 0x4F	; 79
    329e:	30 e0       	ldi	r19, 0x00	; 0
    32a0:	f9 01       	movw	r30, r18
    32a2:	20 81       	ld	r18, Z
    32a4:	2f 7b       	andi	r18, 0xBF	; 191
    32a6:	fc 01       	movw	r30, r24
    32a8:	20 83       	st	Z, r18
    32aa:	8f e4       	ldi	r24, 0x4F	; 79
    32ac:	90 e0       	ldi	r25, 0x00	; 0
    32ae:	2f e4       	ldi	r18, 0x4F	; 79
    32b0:	30 e0       	ldi	r19, 0x00	; 0
    32b2:	f9 01       	movw	r30, r18
    32b4:	20 81       	ld	r18, Z
    32b6:	20 68       	ori	r18, 0x80	; 128
    32b8:	fc 01       	movw	r30, r24
    32ba:	20 83       	st	Z, r18
    32bc:	00 00       	nop
    32be:	df 91       	pop	r29
    32c0:	cf 91       	pop	r28
    32c2:	08 95       	ret

000032c4 <TIMER1_setDuty>:
    32c4:	0f 93       	push	r16
    32c6:	1f 93       	push	r17
    32c8:	cf 93       	push	r28
    32ca:	df 93       	push	r29
    32cc:	00 d0       	rcall	.+0      	; 0x32ce <TIMER1_setDuty+0xa>
    32ce:	00 d0       	rcall	.+0      	; 0x32d0 <TIMER1_setDuty+0xc>
    32d0:	cd b7       	in	r28, 0x3d	; 61
    32d2:	de b7       	in	r29, 0x3e	; 62
    32d4:	69 83       	std	Y+1, r22	; 0x01
    32d6:	7a 83       	std	Y+2, r23	; 0x02
    32d8:	8b 83       	std	Y+3, r24	; 0x03
    32da:	9c 83       	std	Y+4, r25	; 0x04
    32dc:	0a e4       	ldi	r16, 0x4A	; 74
    32de:	10 e0       	ldi	r17, 0x00	; 0
    32e0:	86 e4       	ldi	r24, 0x46	; 70
    32e2:	90 e0       	ldi	r25, 0x00	; 0
    32e4:	fc 01       	movw	r30, r24
    32e6:	80 81       	ld	r24, Z
    32e8:	91 81       	ldd	r25, Z+1	; 0x01
    32ea:	cc 01       	movw	r24, r24
    32ec:	a0 e0       	ldi	r26, 0x00	; 0
    32ee:	b0 e0       	ldi	r27, 0x00	; 0
    32f0:	bc 01       	movw	r22, r24
    32f2:	cd 01       	movw	r24, r26
    32f4:	0e 94 cd 1b 	call	0x379a	; 0x379a <__floatunsisf>
    32f8:	dc 01       	movw	r26, r24
    32fa:	cb 01       	movw	r24, r22
    32fc:	29 81       	ldd	r18, Y+1	; 0x01
    32fe:	3a 81       	ldd	r19, Y+2	; 0x02
    3300:	4b 81       	ldd	r20, Y+3	; 0x03
    3302:	5c 81       	ldd	r21, Y+4	; 0x04
    3304:	bc 01       	movw	r22, r24
    3306:	cd 01       	movw	r24, r26
    3308:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    330c:	dc 01       	movw	r26, r24
    330e:	cb 01       	movw	r24, r22
    3310:	20 e0       	ldi	r18, 0x00	; 0
    3312:	30 e0       	ldi	r19, 0x00	; 0
    3314:	48 ec       	ldi	r20, 0xC8	; 200
    3316:	52 e4       	ldi	r21, 0x42	; 66
    3318:	bc 01       	movw	r22, r24
    331a:	cd 01       	movw	r24, r26
    331c:	0e 94 2c 1b 	call	0x3658	; 0x3658 <__divsf3>
    3320:	dc 01       	movw	r26, r24
    3322:	cb 01       	movw	r24, r22
    3324:	20 e0       	ldi	r18, 0x00	; 0
    3326:	30 e0       	ldi	r19, 0x00	; 0
    3328:	40 e8       	ldi	r20, 0x80	; 128
    332a:	5f e3       	ldi	r21, 0x3F	; 63
    332c:	bc 01       	movw	r22, r24
    332e:	cd 01       	movw	r24, r26
    3330:	0e 94 ba 1a 	call	0x3574	; 0x3574 <__subsf3>
    3334:	dc 01       	movw	r26, r24
    3336:	cb 01       	movw	r24, r22
    3338:	bc 01       	movw	r22, r24
    333a:	cd 01       	movw	r24, r26
    333c:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    3340:	dc 01       	movw	r26, r24
    3342:	cb 01       	movw	r24, r22
    3344:	f8 01       	movw	r30, r16
    3346:	91 83       	std	Z+1, r25	; 0x01
    3348:	80 83       	st	Z, r24
    334a:	00 00       	nop
    334c:	0f 90       	pop	r0
    334e:	0f 90       	pop	r0
    3350:	0f 90       	pop	r0
    3352:	0f 90       	pop	r0
    3354:	df 91       	pop	r29
    3356:	cf 91       	pop	r28
    3358:	1f 91       	pop	r17
    335a:	0f 91       	pop	r16
    335c:	08 95       	ret

0000335e <TIMER1_setFrequency>:
    335e:	0f 93       	push	r16
    3360:	1f 93       	push	r17
    3362:	cf 93       	push	r28
    3364:	df 93       	push	r29
    3366:	00 d0       	rcall	.+0      	; 0x3368 <TIMER1_setFrequency+0xa>
    3368:	cd b7       	in	r28, 0x3d	; 61
    336a:	de b7       	in	r29, 0x3e	; 62
    336c:	9a 83       	std	Y+2, r25	; 0x02
    336e:	89 83       	std	Y+1, r24	; 0x01
    3370:	06 e4       	ldi	r16, 0x46	; 70
    3372:	10 e0       	ldi	r17, 0x00	; 0
    3374:	89 81       	ldd	r24, Y+1	; 0x01
    3376:	9a 81       	ldd	r25, Y+2	; 0x02
    3378:	cc 01       	movw	r24, r24
    337a:	a0 e0       	ldi	r26, 0x00	; 0
    337c:	b0 e0       	ldi	r27, 0x00	; 0
    337e:	bc 01       	movw	r22, r24
    3380:	cd 01       	movw	r24, r26
    3382:	0e 94 cd 1b 	call	0x379a	; 0x379a <__floatunsisf>
    3386:	dc 01       	movw	r26, r24
    3388:	cb 01       	movw	r24, r22
    338a:	20 e0       	ldi	r18, 0x00	; 0
    338c:	30 e0       	ldi	r19, 0x00	; 0
    338e:	40 e8       	ldi	r20, 0x80	; 128
    3390:	52 e4       	ldi	r21, 0x42	; 66
    3392:	bc 01       	movw	r22, r24
    3394:	cd 01       	movw	r24, r26
    3396:	0e 94 84 1c 	call	0x3908	; 0x3908 <__mulsf3>
    339a:	dc 01       	movw	r26, r24
    339c:	cb 01       	movw	r24, r22
    339e:	9c 01       	movw	r18, r24
    33a0:	ad 01       	movw	r20, r26
    33a2:	60 e0       	ldi	r22, 0x00	; 0
    33a4:	74 e2       	ldi	r23, 0x24	; 36
    33a6:	84 e7       	ldi	r24, 0x74	; 116
    33a8:	9b e4       	ldi	r25, 0x4B	; 75
    33aa:	0e 94 2c 1b 	call	0x3658	; 0x3658 <__divsf3>
    33ae:	dc 01       	movw	r26, r24
    33b0:	cb 01       	movw	r24, r22
    33b2:	20 e0       	ldi	r18, 0x00	; 0
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	40 e8       	ldi	r20, 0x80	; 128
    33b8:	5f e3       	ldi	r21, 0x3F	; 63
    33ba:	bc 01       	movw	r22, r24
    33bc:	cd 01       	movw	r24, r26
    33be:	0e 94 ba 1a 	call	0x3574	; 0x3574 <__subsf3>
    33c2:	dc 01       	movw	r26, r24
    33c4:	cb 01       	movw	r24, r22
    33c6:	bc 01       	movw	r22, r24
    33c8:	cd 01       	movw	r24, r26
    33ca:	0e 94 9e 1b 	call	0x373c	; 0x373c <__fixunssfsi>
    33ce:	dc 01       	movw	r26, r24
    33d0:	cb 01       	movw	r24, r22
    33d2:	f8 01       	movw	r30, r16
    33d4:	91 83       	std	Z+1, r25	; 0x01
    33d6:	80 83       	st	Z, r24
    33d8:	8e e4       	ldi	r24, 0x4E	; 78
    33da:	90 e0       	ldi	r25, 0x00	; 0
    33dc:	2e e4       	ldi	r18, 0x4E	; 78
    33de:	30 e0       	ldi	r19, 0x00	; 0
    33e0:	f9 01       	movw	r30, r18
    33e2:	20 81       	ld	r18, Z
    33e4:	21 60       	ori	r18, 0x01	; 1
    33e6:	fc 01       	movw	r30, r24
    33e8:	20 83       	st	Z, r18
    33ea:	8e e4       	ldi	r24, 0x4E	; 78
    33ec:	90 e0       	ldi	r25, 0x00	; 0
    33ee:	2e e4       	ldi	r18, 0x4E	; 78
    33f0:	30 e0       	ldi	r19, 0x00	; 0
    33f2:	f9 01       	movw	r30, r18
    33f4:	20 81       	ld	r18, Z
    33f6:	22 60       	ori	r18, 0x02	; 2
    33f8:	fc 01       	movw	r30, r24
    33fa:	20 83       	st	Z, r18
    33fc:	8e e4       	ldi	r24, 0x4E	; 78
    33fe:	90 e0       	ldi	r25, 0x00	; 0
    3400:	2e e4       	ldi	r18, 0x4E	; 78
    3402:	30 e0       	ldi	r19, 0x00	; 0
    3404:	f9 01       	movw	r30, r18
    3406:	20 81       	ld	r18, Z
    3408:	2b 7f       	andi	r18, 0xFB	; 251
    340a:	fc 01       	movw	r30, r24
    340c:	20 83       	st	Z, r18
    340e:	00 00       	nop
    3410:	0f 90       	pop	r0
    3412:	0f 90       	pop	r0
    3414:	df 91       	pop	r29
    3416:	cf 91       	pop	r28
    3418:	1f 91       	pop	r17
    341a:	0f 91       	pop	r16
    341c:	08 95       	ret

0000341e <UART_init>:
    341e:	cf 93       	push	r28
    3420:	df 93       	push	r29
    3422:	1f 92       	push	r1
    3424:	cd b7       	in	r28, 0x3d	; 61
    3426:	de b7       	in	r29, 0x3e	; 62
    3428:	8a e2       	ldi	r24, 0x2A	; 42
    342a:	90 e0       	ldi	r25, 0x00	; 0
    342c:	2a e2       	ldi	r18, 0x2A	; 42
    342e:	30 e0       	ldi	r19, 0x00	; 0
    3430:	f9 01       	movw	r30, r18
    3432:	20 81       	ld	r18, Z
    3434:	20 61       	ori	r18, 0x10	; 16
    3436:	fc 01       	movw	r30, r24
    3438:	20 83       	st	Z, r18
    343a:	8a e2       	ldi	r24, 0x2A	; 42
    343c:	90 e0       	ldi	r25, 0x00	; 0
    343e:	2a e2       	ldi	r18, 0x2A	; 42
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	f9 01       	movw	r30, r18
    3444:	20 81       	ld	r18, Z
    3446:	28 60       	ori	r18, 0x08	; 8
    3448:	fc 01       	movw	r30, r24
    344a:	20 83       	st	Z, r18
    344c:	80 e8       	ldi	r24, 0x80	; 128
    344e:	89 83       	std	Y+1, r24	; 0x01
    3450:	8a e2       	ldi	r24, 0x2A	; 42
    3452:	90 e0       	ldi	r25, 0x00	; 0
    3454:	2a e2       	ldi	r18, 0x2A	; 42
    3456:	30 e0       	ldi	r19, 0x00	; 0
    3458:	f9 01       	movw	r30, r18
    345a:	20 81       	ld	r18, Z
    345c:	24 60       	ori	r18, 0x04	; 4
    345e:	fc 01       	movw	r30, r24
    3460:	20 83       	st	Z, r18
    3462:	89 81       	ldd	r24, Y+1	; 0x01
    3464:	84 60       	ori	r24, 0x04	; 4
    3466:	89 83       	std	Y+1, r24	; 0x01
    3468:	89 81       	ldd	r24, Y+1	; 0x01
    346a:	84 60       	ori	r24, 0x04	; 4
    346c:	89 83       	std	Y+1, r24	; 0x01
    346e:	89 81       	ldd	r24, Y+1	; 0x01
    3470:	87 7f       	andi	r24, 0xF7	; 247
    3472:	89 83       	std	Y+1, r24	; 0x01
    3474:	89 81       	ldd	r24, Y+1	; 0x01
    3476:	8f 7e       	andi	r24, 0xEF	; 239
    3478:	89 83       	std	Y+1, r24	; 0x01
    347a:	89 81       	ldd	r24, Y+1	; 0x01
    347c:	8f 7d       	andi	r24, 0xDF	; 223
    347e:	89 83       	std	Y+1, r24	; 0x01
    3480:	80 e4       	ldi	r24, 0x40	; 64
    3482:	90 e0       	ldi	r25, 0x00	; 0
    3484:	29 81       	ldd	r18, Y+1	; 0x01
    3486:	fc 01       	movw	r30, r24
    3488:	20 83       	st	Z, r18
    348a:	89 e2       	ldi	r24, 0x29	; 41
    348c:	90 e0       	ldi	r25, 0x00	; 0
    348e:	27 e6       	ldi	r18, 0x67	; 103
    3490:	fc 01       	movw	r30, r24
    3492:	20 83       	st	Z, r18
    3494:	00 00       	nop
    3496:	0f 90       	pop	r0
    3498:	df 91       	pop	r29
    349a:	cf 91       	pop	r28
    349c:	08 95       	ret

0000349e <UART_sendData>:
    349e:	cf 93       	push	r28
    34a0:	df 93       	push	r29
    34a2:	1f 92       	push	r1
    34a4:	cd b7       	in	r28, 0x3d	; 61
    34a6:	de b7       	in	r29, 0x3e	; 62
    34a8:	89 83       	std	Y+1, r24	; 0x01
    34aa:	00 00       	nop
    34ac:	8b e2       	ldi	r24, 0x2B	; 43
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	fc 01       	movw	r30, r24
    34b2:	80 81       	ld	r24, Z
    34b4:	82 95       	swap	r24
    34b6:	86 95       	lsr	r24
    34b8:	87 70       	andi	r24, 0x07	; 7
    34ba:	88 2f       	mov	r24, r24
    34bc:	90 e0       	ldi	r25, 0x00	; 0
    34be:	81 70       	andi	r24, 0x01	; 1
    34c0:	99 27       	eor	r25, r25
    34c2:	89 2b       	or	r24, r25
    34c4:	99 f3       	breq	.-26     	; 0x34ac <UART_sendData+0xe>
    34c6:	8c e2       	ldi	r24, 0x2C	; 44
    34c8:	90 e0       	ldi	r25, 0x00	; 0
    34ca:	29 81       	ldd	r18, Y+1	; 0x01
    34cc:	fc 01       	movw	r30, r24
    34ce:	20 83       	st	Z, r18
    34d0:	00 00       	nop
    34d2:	0f 90       	pop	r0
    34d4:	df 91       	pop	r29
    34d6:	cf 91       	pop	r28
    34d8:	08 95       	ret

000034da <UART_sendString>:
    34da:	cf 93       	push	r28
    34dc:	df 93       	push	r29
    34de:	00 d0       	rcall	.+0      	; 0x34e0 <UART_sendString+0x6>
    34e0:	1f 92       	push	r1
    34e2:	cd b7       	in	r28, 0x3d	; 61
    34e4:	de b7       	in	r29, 0x3e	; 62
    34e6:	9b 83       	std	Y+3, r25	; 0x03
    34e8:	8a 83       	std	Y+2, r24	; 0x02
    34ea:	19 82       	std	Y+1, r1	; 0x01
    34ec:	0e c0       	rjmp	.+28     	; 0x350a <UART_sendString+0x30>
    34ee:	89 81       	ldd	r24, Y+1	; 0x01
    34f0:	88 2f       	mov	r24, r24
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	2a 81       	ldd	r18, Y+2	; 0x02
    34f6:	3b 81       	ldd	r19, Y+3	; 0x03
    34f8:	82 0f       	add	r24, r18
    34fa:	93 1f       	adc	r25, r19
    34fc:	fc 01       	movw	r30, r24
    34fe:	80 81       	ld	r24, Z
    3500:	0e 94 4f 1a 	call	0x349e	; 0x349e <UART_sendData>
    3504:	89 81       	ldd	r24, Y+1	; 0x01
    3506:	8f 5f       	subi	r24, 0xFF	; 255
    3508:	89 83       	std	Y+1, r24	; 0x01
    350a:	89 81       	ldd	r24, Y+1	; 0x01
    350c:	88 2f       	mov	r24, r24
    350e:	90 e0       	ldi	r25, 0x00	; 0
    3510:	2a 81       	ldd	r18, Y+2	; 0x02
    3512:	3b 81       	ldd	r19, Y+3	; 0x03
    3514:	82 0f       	add	r24, r18
    3516:	93 1f       	adc	r25, r19
    3518:	fc 01       	movw	r30, r24
    351a:	80 81       	ld	r24, Z
    351c:	88 23       	and	r24, r24
    351e:	39 f7       	brne	.-50     	; 0x34ee <UART_sendString+0x14>
    3520:	00 00       	nop
    3522:	0f 90       	pop	r0
    3524:	0f 90       	pop	r0
    3526:	0f 90       	pop	r0
    3528:	df 91       	pop	r29
    352a:	cf 91       	pop	r28
    352c:	08 95       	ret

0000352e <UART_receiveData>:
    352e:	cf 93       	push	r28
    3530:	df 93       	push	r29
    3532:	00 d0       	rcall	.+0      	; 0x3534 <UART_receiveData+0x6>
    3534:	cd b7       	in	r28, 0x3d	; 61
    3536:	de b7       	in	r29, 0x3e	; 62
    3538:	1a 82       	std	Y+2, r1	; 0x02
    353a:	19 82       	std	Y+1, r1	; 0x01
    353c:	05 c0       	rjmp	.+10     	; 0x3548 <UART_receiveData+0x1a>
    353e:	89 81       	ldd	r24, Y+1	; 0x01
    3540:	9a 81       	ldd	r25, Y+2	; 0x02
    3542:	01 96       	adiw	r24, 0x01	; 1
    3544:	9a 83       	std	Y+2, r25	; 0x02
    3546:	89 83       	std	Y+1, r24	; 0x01
    3548:	8b e2       	ldi	r24, 0x2B	; 43
    354a:	90 e0       	ldi	r25, 0x00	; 0
    354c:	fc 01       	movw	r30, r24
    354e:	80 81       	ld	r24, Z
    3550:	88 1f       	adc	r24, r24
    3552:	88 27       	eor	r24, r24
    3554:	88 1f       	adc	r24, r24
    3556:	88 2f       	mov	r24, r24
    3558:	90 e0       	ldi	r25, 0x00	; 0
    355a:	81 70       	andi	r24, 0x01	; 1
    355c:	99 27       	eor	r25, r25
    355e:	89 2b       	or	r24, r25
    3560:	71 f3       	breq	.-36     	; 0x353e <UART_receiveData+0x10>
    3562:	8c e2       	ldi	r24, 0x2C	; 44
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	fc 01       	movw	r30, r24
    3568:	80 81       	ld	r24, Z
    356a:	0f 90       	pop	r0
    356c:	0f 90       	pop	r0
    356e:	df 91       	pop	r29
    3570:	cf 91       	pop	r28
    3572:	08 95       	ret

00003574 <__subsf3>:
    3574:	50 58       	subi	r21, 0x80	; 128

00003576 <__addsf3>:
    3576:	bb 27       	eor	r27, r27
    3578:	aa 27       	eor	r26, r26
    357a:	0e 94 d2 1a 	call	0x35a4	; 0x35a4 <__addsf3x>
    357e:	0c 94 45 1c 	jmp	0x388a	; 0x388a <__fp_round>
    3582:	0e 94 37 1c 	call	0x386e	; 0x386e <__fp_pscA>
    3586:	38 f0       	brcs	.+14     	; 0x3596 <__addsf3+0x20>
    3588:	0e 94 3e 1c 	call	0x387c	; 0x387c <__fp_pscB>
    358c:	20 f0       	brcs	.+8      	; 0x3596 <__addsf3+0x20>
    358e:	39 f4       	brne	.+14     	; 0x359e <__addsf3+0x28>
    3590:	9f 3f       	cpi	r25, 0xFF	; 255
    3592:	19 f4       	brne	.+6      	; 0x359a <__addsf3+0x24>
    3594:	26 f4       	brtc	.+8      	; 0x359e <__addsf3+0x28>
    3596:	0c 94 34 1c 	jmp	0x3868	; 0x3868 <__fp_nan>
    359a:	0e f4       	brtc	.+2      	; 0x359e <__addsf3+0x28>
    359c:	e0 95       	com	r30
    359e:	e7 fb       	bst	r30, 7
    35a0:	0c 94 2e 1c 	jmp	0x385c	; 0x385c <__fp_inf>

000035a4 <__addsf3x>:
    35a4:	e9 2f       	mov	r30, r25
    35a6:	0e 94 56 1c 	call	0x38ac	; 0x38ac <__fp_split3>
    35aa:	58 f3       	brcs	.-42     	; 0x3582 <__addsf3+0xc>
    35ac:	ba 17       	cp	r27, r26
    35ae:	62 07       	cpc	r22, r18
    35b0:	73 07       	cpc	r23, r19
    35b2:	84 07       	cpc	r24, r20
    35b4:	95 07       	cpc	r25, r21
    35b6:	20 f0       	brcs	.+8      	; 0x35c0 <__addsf3x+0x1c>
    35b8:	79 f4       	brne	.+30     	; 0x35d8 <__addsf3x+0x34>
    35ba:	a6 f5       	brtc	.+104    	; 0x3624 <__addsf3x+0x80>
    35bc:	0c 94 78 1c 	jmp	0x38f0	; 0x38f0 <__fp_zero>
    35c0:	0e f4       	brtc	.+2      	; 0x35c4 <__addsf3x+0x20>
    35c2:	e0 95       	com	r30
    35c4:	0b 2e       	mov	r0, r27
    35c6:	ba 2f       	mov	r27, r26
    35c8:	a0 2d       	mov	r26, r0
    35ca:	0b 01       	movw	r0, r22
    35cc:	b9 01       	movw	r22, r18
    35ce:	90 01       	movw	r18, r0
    35d0:	0c 01       	movw	r0, r24
    35d2:	ca 01       	movw	r24, r20
    35d4:	a0 01       	movw	r20, r0
    35d6:	11 24       	eor	r1, r1
    35d8:	ff 27       	eor	r31, r31
    35da:	59 1b       	sub	r21, r25
    35dc:	99 f0       	breq	.+38     	; 0x3604 <__addsf3x+0x60>
    35de:	59 3f       	cpi	r21, 0xF9	; 249
    35e0:	50 f4       	brcc	.+20     	; 0x35f6 <__addsf3x+0x52>
    35e2:	50 3e       	cpi	r21, 0xE0	; 224
    35e4:	68 f1       	brcs	.+90     	; 0x3640 <__addsf3x+0x9c>
    35e6:	1a 16       	cp	r1, r26
    35e8:	f0 40       	sbci	r31, 0x00	; 0
    35ea:	a2 2f       	mov	r26, r18
    35ec:	23 2f       	mov	r18, r19
    35ee:	34 2f       	mov	r19, r20
    35f0:	44 27       	eor	r20, r20
    35f2:	58 5f       	subi	r21, 0xF8	; 248
    35f4:	f3 cf       	rjmp	.-26     	; 0x35dc <__addsf3x+0x38>
    35f6:	46 95       	lsr	r20
    35f8:	37 95       	ror	r19
    35fa:	27 95       	ror	r18
    35fc:	a7 95       	ror	r26
    35fe:	f0 40       	sbci	r31, 0x00	; 0
    3600:	53 95       	inc	r21
    3602:	c9 f7       	brne	.-14     	; 0x35f6 <__addsf3x+0x52>
    3604:	7e f4       	brtc	.+30     	; 0x3624 <__addsf3x+0x80>
    3606:	1f 16       	cp	r1, r31
    3608:	ba 0b       	sbc	r27, r26
    360a:	62 0b       	sbc	r22, r18
    360c:	73 0b       	sbc	r23, r19
    360e:	84 0b       	sbc	r24, r20
    3610:	ba f0       	brmi	.+46     	; 0x3640 <__addsf3x+0x9c>
    3612:	91 50       	subi	r25, 0x01	; 1
    3614:	a1 f0       	breq	.+40     	; 0x363e <__addsf3x+0x9a>
    3616:	ff 0f       	add	r31, r31
    3618:	bb 1f       	adc	r27, r27
    361a:	66 1f       	adc	r22, r22
    361c:	77 1f       	adc	r23, r23
    361e:	88 1f       	adc	r24, r24
    3620:	c2 f7       	brpl	.-16     	; 0x3612 <__addsf3x+0x6e>
    3622:	0e c0       	rjmp	.+28     	; 0x3640 <__addsf3x+0x9c>
    3624:	ba 0f       	add	r27, r26
    3626:	62 1f       	adc	r22, r18
    3628:	73 1f       	adc	r23, r19
    362a:	84 1f       	adc	r24, r20
    362c:	48 f4       	brcc	.+18     	; 0x3640 <__addsf3x+0x9c>
    362e:	87 95       	ror	r24
    3630:	77 95       	ror	r23
    3632:	67 95       	ror	r22
    3634:	b7 95       	ror	r27
    3636:	f7 95       	ror	r31
    3638:	9e 3f       	cpi	r25, 0xFE	; 254
    363a:	08 f0       	brcs	.+2      	; 0x363e <__addsf3x+0x9a>
    363c:	b0 cf       	rjmp	.-160    	; 0x359e <__addsf3+0x28>
    363e:	93 95       	inc	r25
    3640:	88 0f       	add	r24, r24
    3642:	08 f0       	brcs	.+2      	; 0x3646 <__addsf3x+0xa2>
    3644:	99 27       	eor	r25, r25
    3646:	ee 0f       	add	r30, r30
    3648:	97 95       	ror	r25
    364a:	87 95       	ror	r24
    364c:	08 95       	ret

0000364e <__cmpsf2>:
    364e:	0e 94 0a 1c 	call	0x3814	; 0x3814 <__fp_cmp>
    3652:	08 f4       	brcc	.+2      	; 0x3656 <__cmpsf2+0x8>
    3654:	81 e0       	ldi	r24, 0x01	; 1
    3656:	08 95       	ret

00003658 <__divsf3>:
    3658:	0e 94 40 1b 	call	0x3680	; 0x3680 <__divsf3x>
    365c:	0c 94 45 1c 	jmp	0x388a	; 0x388a <__fp_round>
    3660:	0e 94 3e 1c 	call	0x387c	; 0x387c <__fp_pscB>
    3664:	58 f0       	brcs	.+22     	; 0x367c <__divsf3+0x24>
    3666:	0e 94 37 1c 	call	0x386e	; 0x386e <__fp_pscA>
    366a:	40 f0       	brcs	.+16     	; 0x367c <__divsf3+0x24>
    366c:	29 f4       	brne	.+10     	; 0x3678 <__divsf3+0x20>
    366e:	5f 3f       	cpi	r21, 0xFF	; 255
    3670:	29 f0       	breq	.+10     	; 0x367c <__divsf3+0x24>
    3672:	0c 94 2e 1c 	jmp	0x385c	; 0x385c <__fp_inf>
    3676:	51 11       	cpse	r21, r1
    3678:	0c 94 79 1c 	jmp	0x38f2	; 0x38f2 <__fp_szero>
    367c:	0c 94 34 1c 	jmp	0x3868	; 0x3868 <__fp_nan>

00003680 <__divsf3x>:
    3680:	0e 94 56 1c 	call	0x38ac	; 0x38ac <__fp_split3>
    3684:	68 f3       	brcs	.-38     	; 0x3660 <__divsf3+0x8>

00003686 <__divsf3_pse>:
    3686:	99 23       	and	r25, r25
    3688:	b1 f3       	breq	.-20     	; 0x3676 <__divsf3+0x1e>
    368a:	55 23       	and	r21, r21
    368c:	91 f3       	breq	.-28     	; 0x3672 <__divsf3+0x1a>
    368e:	95 1b       	sub	r25, r21
    3690:	55 0b       	sbc	r21, r21
    3692:	bb 27       	eor	r27, r27
    3694:	aa 27       	eor	r26, r26
    3696:	62 17       	cp	r22, r18
    3698:	73 07       	cpc	r23, r19
    369a:	84 07       	cpc	r24, r20
    369c:	38 f0       	brcs	.+14     	; 0x36ac <__divsf3_pse+0x26>
    369e:	9f 5f       	subi	r25, 0xFF	; 255
    36a0:	5f 4f       	sbci	r21, 0xFF	; 255
    36a2:	22 0f       	add	r18, r18
    36a4:	33 1f       	adc	r19, r19
    36a6:	44 1f       	adc	r20, r20
    36a8:	aa 1f       	adc	r26, r26
    36aa:	a9 f3       	breq	.-22     	; 0x3696 <__divsf3_pse+0x10>
    36ac:	35 d0       	rcall	.+106    	; 0x3718 <__divsf3_pse+0x92>
    36ae:	0e 2e       	mov	r0, r30
    36b0:	3a f0       	brmi	.+14     	; 0x36c0 <__divsf3_pse+0x3a>
    36b2:	e0 e8       	ldi	r30, 0x80	; 128
    36b4:	32 d0       	rcall	.+100    	; 0x371a <__divsf3_pse+0x94>
    36b6:	91 50       	subi	r25, 0x01	; 1
    36b8:	50 40       	sbci	r21, 0x00	; 0
    36ba:	e6 95       	lsr	r30
    36bc:	00 1c       	adc	r0, r0
    36be:	ca f7       	brpl	.-14     	; 0x36b2 <__divsf3_pse+0x2c>
    36c0:	2b d0       	rcall	.+86     	; 0x3718 <__divsf3_pse+0x92>
    36c2:	fe 2f       	mov	r31, r30
    36c4:	29 d0       	rcall	.+82     	; 0x3718 <__divsf3_pse+0x92>
    36c6:	66 0f       	add	r22, r22
    36c8:	77 1f       	adc	r23, r23
    36ca:	88 1f       	adc	r24, r24
    36cc:	bb 1f       	adc	r27, r27
    36ce:	26 17       	cp	r18, r22
    36d0:	37 07       	cpc	r19, r23
    36d2:	48 07       	cpc	r20, r24
    36d4:	ab 07       	cpc	r26, r27
    36d6:	b0 e8       	ldi	r27, 0x80	; 128
    36d8:	09 f0       	breq	.+2      	; 0x36dc <__divsf3_pse+0x56>
    36da:	bb 0b       	sbc	r27, r27
    36dc:	80 2d       	mov	r24, r0
    36de:	bf 01       	movw	r22, r30
    36e0:	ff 27       	eor	r31, r31
    36e2:	93 58       	subi	r25, 0x83	; 131
    36e4:	5f 4f       	sbci	r21, 0xFF	; 255
    36e6:	3a f0       	brmi	.+14     	; 0x36f6 <__divsf3_pse+0x70>
    36e8:	9e 3f       	cpi	r25, 0xFE	; 254
    36ea:	51 05       	cpc	r21, r1
    36ec:	78 f0       	brcs	.+30     	; 0x370c <__divsf3_pse+0x86>
    36ee:	0c 94 2e 1c 	jmp	0x385c	; 0x385c <__fp_inf>
    36f2:	0c 94 79 1c 	jmp	0x38f2	; 0x38f2 <__fp_szero>
    36f6:	5f 3f       	cpi	r21, 0xFF	; 255
    36f8:	e4 f3       	brlt	.-8      	; 0x36f2 <__divsf3_pse+0x6c>
    36fa:	98 3e       	cpi	r25, 0xE8	; 232
    36fc:	d4 f3       	brlt	.-12     	; 0x36f2 <__divsf3_pse+0x6c>
    36fe:	86 95       	lsr	r24
    3700:	77 95       	ror	r23
    3702:	67 95       	ror	r22
    3704:	b7 95       	ror	r27
    3706:	f7 95       	ror	r31
    3708:	9f 5f       	subi	r25, 0xFF	; 255
    370a:	c9 f7       	brne	.-14     	; 0x36fe <__divsf3_pse+0x78>
    370c:	88 0f       	add	r24, r24
    370e:	91 1d       	adc	r25, r1
    3710:	96 95       	lsr	r25
    3712:	87 95       	ror	r24
    3714:	97 f9       	bld	r25, 7
    3716:	08 95       	ret
    3718:	e1 e0       	ldi	r30, 0x01	; 1
    371a:	66 0f       	add	r22, r22
    371c:	77 1f       	adc	r23, r23
    371e:	88 1f       	adc	r24, r24
    3720:	bb 1f       	adc	r27, r27
    3722:	62 17       	cp	r22, r18
    3724:	73 07       	cpc	r23, r19
    3726:	84 07       	cpc	r24, r20
    3728:	ba 07       	cpc	r27, r26
    372a:	20 f0       	brcs	.+8      	; 0x3734 <__divsf3_pse+0xae>
    372c:	62 1b       	sub	r22, r18
    372e:	73 0b       	sbc	r23, r19
    3730:	84 0b       	sbc	r24, r20
    3732:	ba 0b       	sbc	r27, r26
    3734:	ee 1f       	adc	r30, r30
    3736:	88 f7       	brcc	.-30     	; 0x371a <__divsf3_pse+0x94>
    3738:	e0 95       	com	r30
    373a:	08 95       	ret

0000373c <__fixunssfsi>:
    373c:	0e 94 5e 1c 	call	0x38bc	; 0x38bc <__fp_splitA>
    3740:	88 f0       	brcs	.+34     	; 0x3764 <__fixunssfsi+0x28>
    3742:	9f 57       	subi	r25, 0x7F	; 127
    3744:	98 f0       	brcs	.+38     	; 0x376c <__fixunssfsi+0x30>
    3746:	b9 2f       	mov	r27, r25
    3748:	99 27       	eor	r25, r25
    374a:	b7 51       	subi	r27, 0x17	; 23
    374c:	b0 f0       	brcs	.+44     	; 0x377a <__fixunssfsi+0x3e>
    374e:	e1 f0       	breq	.+56     	; 0x3788 <__fixunssfsi+0x4c>
    3750:	66 0f       	add	r22, r22
    3752:	77 1f       	adc	r23, r23
    3754:	88 1f       	adc	r24, r24
    3756:	99 1f       	adc	r25, r25
    3758:	1a f0       	brmi	.+6      	; 0x3760 <__fixunssfsi+0x24>
    375a:	ba 95       	dec	r27
    375c:	c9 f7       	brne	.-14     	; 0x3750 <__fixunssfsi+0x14>
    375e:	14 c0       	rjmp	.+40     	; 0x3788 <__fixunssfsi+0x4c>
    3760:	b1 30       	cpi	r27, 0x01	; 1
    3762:	91 f0       	breq	.+36     	; 0x3788 <__fixunssfsi+0x4c>
    3764:	0e 94 78 1c 	call	0x38f0	; 0x38f0 <__fp_zero>
    3768:	b1 e0       	ldi	r27, 0x01	; 1
    376a:	08 95       	ret
    376c:	0c 94 78 1c 	jmp	0x38f0	; 0x38f0 <__fp_zero>
    3770:	67 2f       	mov	r22, r23
    3772:	78 2f       	mov	r23, r24
    3774:	88 27       	eor	r24, r24
    3776:	b8 5f       	subi	r27, 0xF8	; 248
    3778:	39 f0       	breq	.+14     	; 0x3788 <__fixunssfsi+0x4c>
    377a:	b9 3f       	cpi	r27, 0xF9	; 249
    377c:	cc f3       	brlt	.-14     	; 0x3770 <__fixunssfsi+0x34>
    377e:	86 95       	lsr	r24
    3780:	77 95       	ror	r23
    3782:	67 95       	ror	r22
    3784:	b3 95       	inc	r27
    3786:	d9 f7       	brne	.-10     	; 0x377e <__fixunssfsi+0x42>
    3788:	3e f4       	brtc	.+14     	; 0x3798 <__fixunssfsi+0x5c>
    378a:	90 95       	com	r25
    378c:	80 95       	com	r24
    378e:	70 95       	com	r23
    3790:	61 95       	neg	r22
    3792:	7f 4f       	sbci	r23, 0xFF	; 255
    3794:	8f 4f       	sbci	r24, 0xFF	; 255
    3796:	9f 4f       	sbci	r25, 0xFF	; 255
    3798:	08 95       	ret

0000379a <__floatunsisf>:
    379a:	e8 94       	clt
    379c:	09 c0       	rjmp	.+18     	; 0x37b0 <__floatsisf+0x12>

0000379e <__floatsisf>:
    379e:	97 fb       	bst	r25, 7
    37a0:	3e f4       	brtc	.+14     	; 0x37b0 <__floatsisf+0x12>
    37a2:	90 95       	com	r25
    37a4:	80 95       	com	r24
    37a6:	70 95       	com	r23
    37a8:	61 95       	neg	r22
    37aa:	7f 4f       	sbci	r23, 0xFF	; 255
    37ac:	8f 4f       	sbci	r24, 0xFF	; 255
    37ae:	9f 4f       	sbci	r25, 0xFF	; 255
    37b0:	99 23       	and	r25, r25
    37b2:	a9 f0       	breq	.+42     	; 0x37de <__floatsisf+0x40>
    37b4:	f9 2f       	mov	r31, r25
    37b6:	96 e9       	ldi	r25, 0x96	; 150
    37b8:	bb 27       	eor	r27, r27
    37ba:	93 95       	inc	r25
    37bc:	f6 95       	lsr	r31
    37be:	87 95       	ror	r24
    37c0:	77 95       	ror	r23
    37c2:	67 95       	ror	r22
    37c4:	b7 95       	ror	r27
    37c6:	f1 11       	cpse	r31, r1
    37c8:	f8 cf       	rjmp	.-16     	; 0x37ba <__floatsisf+0x1c>
    37ca:	fa f4       	brpl	.+62     	; 0x380a <__floatsisf+0x6c>
    37cc:	bb 0f       	add	r27, r27
    37ce:	11 f4       	brne	.+4      	; 0x37d4 <__floatsisf+0x36>
    37d0:	60 ff       	sbrs	r22, 0
    37d2:	1b c0       	rjmp	.+54     	; 0x380a <__floatsisf+0x6c>
    37d4:	6f 5f       	subi	r22, 0xFF	; 255
    37d6:	7f 4f       	sbci	r23, 0xFF	; 255
    37d8:	8f 4f       	sbci	r24, 0xFF	; 255
    37da:	9f 4f       	sbci	r25, 0xFF	; 255
    37dc:	16 c0       	rjmp	.+44     	; 0x380a <__floatsisf+0x6c>
    37de:	88 23       	and	r24, r24
    37e0:	11 f0       	breq	.+4      	; 0x37e6 <__floatsisf+0x48>
    37e2:	96 e9       	ldi	r25, 0x96	; 150
    37e4:	11 c0       	rjmp	.+34     	; 0x3808 <__floatsisf+0x6a>
    37e6:	77 23       	and	r23, r23
    37e8:	21 f0       	breq	.+8      	; 0x37f2 <__floatsisf+0x54>
    37ea:	9e e8       	ldi	r25, 0x8E	; 142
    37ec:	87 2f       	mov	r24, r23
    37ee:	76 2f       	mov	r23, r22
    37f0:	05 c0       	rjmp	.+10     	; 0x37fc <__floatsisf+0x5e>
    37f2:	66 23       	and	r22, r22
    37f4:	71 f0       	breq	.+28     	; 0x3812 <__floatsisf+0x74>
    37f6:	96 e8       	ldi	r25, 0x86	; 134
    37f8:	86 2f       	mov	r24, r22
    37fa:	70 e0       	ldi	r23, 0x00	; 0
    37fc:	60 e0       	ldi	r22, 0x00	; 0
    37fe:	2a f0       	brmi	.+10     	; 0x380a <__floatsisf+0x6c>
    3800:	9a 95       	dec	r25
    3802:	66 0f       	add	r22, r22
    3804:	77 1f       	adc	r23, r23
    3806:	88 1f       	adc	r24, r24
    3808:	da f7       	brpl	.-10     	; 0x3800 <__floatsisf+0x62>
    380a:	88 0f       	add	r24, r24
    380c:	96 95       	lsr	r25
    380e:	87 95       	ror	r24
    3810:	97 f9       	bld	r25, 7
    3812:	08 95       	ret

00003814 <__fp_cmp>:
    3814:	99 0f       	add	r25, r25
    3816:	00 08       	sbc	r0, r0
    3818:	55 0f       	add	r21, r21
    381a:	aa 0b       	sbc	r26, r26
    381c:	e0 e8       	ldi	r30, 0x80	; 128
    381e:	fe ef       	ldi	r31, 0xFE	; 254
    3820:	16 16       	cp	r1, r22
    3822:	17 06       	cpc	r1, r23
    3824:	e8 07       	cpc	r30, r24
    3826:	f9 07       	cpc	r31, r25
    3828:	c0 f0       	brcs	.+48     	; 0x385a <__fp_cmp+0x46>
    382a:	12 16       	cp	r1, r18
    382c:	13 06       	cpc	r1, r19
    382e:	e4 07       	cpc	r30, r20
    3830:	f5 07       	cpc	r31, r21
    3832:	98 f0       	brcs	.+38     	; 0x385a <__fp_cmp+0x46>
    3834:	62 1b       	sub	r22, r18
    3836:	73 0b       	sbc	r23, r19
    3838:	84 0b       	sbc	r24, r20
    383a:	95 0b       	sbc	r25, r21
    383c:	39 f4       	brne	.+14     	; 0x384c <__fp_cmp+0x38>
    383e:	0a 26       	eor	r0, r26
    3840:	61 f0       	breq	.+24     	; 0x385a <__fp_cmp+0x46>
    3842:	23 2b       	or	r18, r19
    3844:	24 2b       	or	r18, r20
    3846:	25 2b       	or	r18, r21
    3848:	21 f4       	brne	.+8      	; 0x3852 <__fp_cmp+0x3e>
    384a:	08 95       	ret
    384c:	0a 26       	eor	r0, r26
    384e:	09 f4       	brne	.+2      	; 0x3852 <__fp_cmp+0x3e>
    3850:	a1 40       	sbci	r26, 0x01	; 1
    3852:	a6 95       	lsr	r26
    3854:	8f ef       	ldi	r24, 0xFF	; 255
    3856:	81 1d       	adc	r24, r1
    3858:	81 1d       	adc	r24, r1
    385a:	08 95       	ret

0000385c <__fp_inf>:
    385c:	97 f9       	bld	r25, 7
    385e:	9f 67       	ori	r25, 0x7F	; 127
    3860:	80 e8       	ldi	r24, 0x80	; 128
    3862:	70 e0       	ldi	r23, 0x00	; 0
    3864:	60 e0       	ldi	r22, 0x00	; 0
    3866:	08 95       	ret

00003868 <__fp_nan>:
    3868:	9f ef       	ldi	r25, 0xFF	; 255
    386a:	80 ec       	ldi	r24, 0xC0	; 192
    386c:	08 95       	ret

0000386e <__fp_pscA>:
    386e:	00 24       	eor	r0, r0
    3870:	0a 94       	dec	r0
    3872:	16 16       	cp	r1, r22
    3874:	17 06       	cpc	r1, r23
    3876:	18 06       	cpc	r1, r24
    3878:	09 06       	cpc	r0, r25
    387a:	08 95       	ret

0000387c <__fp_pscB>:
    387c:	00 24       	eor	r0, r0
    387e:	0a 94       	dec	r0
    3880:	12 16       	cp	r1, r18
    3882:	13 06       	cpc	r1, r19
    3884:	14 06       	cpc	r1, r20
    3886:	05 06       	cpc	r0, r21
    3888:	08 95       	ret

0000388a <__fp_round>:
    388a:	09 2e       	mov	r0, r25
    388c:	03 94       	inc	r0
    388e:	00 0c       	add	r0, r0
    3890:	11 f4       	brne	.+4      	; 0x3896 <__fp_round+0xc>
    3892:	88 23       	and	r24, r24
    3894:	52 f0       	brmi	.+20     	; 0x38aa <__fp_round+0x20>
    3896:	bb 0f       	add	r27, r27
    3898:	40 f4       	brcc	.+16     	; 0x38aa <__fp_round+0x20>
    389a:	bf 2b       	or	r27, r31
    389c:	11 f4       	brne	.+4      	; 0x38a2 <__fp_round+0x18>
    389e:	60 ff       	sbrs	r22, 0
    38a0:	04 c0       	rjmp	.+8      	; 0x38aa <__fp_round+0x20>
    38a2:	6f 5f       	subi	r22, 0xFF	; 255
    38a4:	7f 4f       	sbci	r23, 0xFF	; 255
    38a6:	8f 4f       	sbci	r24, 0xFF	; 255
    38a8:	9f 4f       	sbci	r25, 0xFF	; 255
    38aa:	08 95       	ret

000038ac <__fp_split3>:
    38ac:	57 fd       	sbrc	r21, 7
    38ae:	90 58       	subi	r25, 0x80	; 128
    38b0:	44 0f       	add	r20, r20
    38b2:	55 1f       	adc	r21, r21
    38b4:	59 f0       	breq	.+22     	; 0x38cc <__fp_splitA+0x10>
    38b6:	5f 3f       	cpi	r21, 0xFF	; 255
    38b8:	71 f0       	breq	.+28     	; 0x38d6 <__fp_splitA+0x1a>
    38ba:	47 95       	ror	r20

000038bc <__fp_splitA>:
    38bc:	88 0f       	add	r24, r24
    38be:	97 fb       	bst	r25, 7
    38c0:	99 1f       	adc	r25, r25
    38c2:	61 f0       	breq	.+24     	; 0x38dc <__fp_splitA+0x20>
    38c4:	9f 3f       	cpi	r25, 0xFF	; 255
    38c6:	79 f0       	breq	.+30     	; 0x38e6 <__fp_splitA+0x2a>
    38c8:	87 95       	ror	r24
    38ca:	08 95       	ret
    38cc:	12 16       	cp	r1, r18
    38ce:	13 06       	cpc	r1, r19
    38d0:	14 06       	cpc	r1, r20
    38d2:	55 1f       	adc	r21, r21
    38d4:	f2 cf       	rjmp	.-28     	; 0x38ba <__fp_split3+0xe>
    38d6:	46 95       	lsr	r20
    38d8:	f1 df       	rcall	.-30     	; 0x38bc <__fp_splitA>
    38da:	08 c0       	rjmp	.+16     	; 0x38ec <__fp_splitA+0x30>
    38dc:	16 16       	cp	r1, r22
    38de:	17 06       	cpc	r1, r23
    38e0:	18 06       	cpc	r1, r24
    38e2:	99 1f       	adc	r25, r25
    38e4:	f1 cf       	rjmp	.-30     	; 0x38c8 <__fp_splitA+0xc>
    38e6:	86 95       	lsr	r24
    38e8:	71 05       	cpc	r23, r1
    38ea:	61 05       	cpc	r22, r1
    38ec:	08 94       	sec
    38ee:	08 95       	ret

000038f0 <__fp_zero>:
    38f0:	e8 94       	clt

000038f2 <__fp_szero>:
    38f2:	bb 27       	eor	r27, r27
    38f4:	66 27       	eor	r22, r22
    38f6:	77 27       	eor	r23, r23
    38f8:	cb 01       	movw	r24, r22
    38fa:	97 f9       	bld	r25, 7
    38fc:	08 95       	ret

000038fe <__gesf2>:
    38fe:	0e 94 0a 1c 	call	0x3814	; 0x3814 <__fp_cmp>
    3902:	08 f4       	brcc	.+2      	; 0x3906 <__gesf2+0x8>
    3904:	8f ef       	ldi	r24, 0xFF	; 255
    3906:	08 95       	ret

00003908 <__mulsf3>:
    3908:	0e 94 97 1c 	call	0x392e	; 0x392e <__mulsf3x>
    390c:	0c 94 45 1c 	jmp	0x388a	; 0x388a <__fp_round>
    3910:	0e 94 37 1c 	call	0x386e	; 0x386e <__fp_pscA>
    3914:	38 f0       	brcs	.+14     	; 0x3924 <__mulsf3+0x1c>
    3916:	0e 94 3e 1c 	call	0x387c	; 0x387c <__fp_pscB>
    391a:	20 f0       	brcs	.+8      	; 0x3924 <__mulsf3+0x1c>
    391c:	95 23       	and	r25, r21
    391e:	11 f0       	breq	.+4      	; 0x3924 <__mulsf3+0x1c>
    3920:	0c 94 2e 1c 	jmp	0x385c	; 0x385c <__fp_inf>
    3924:	0c 94 34 1c 	jmp	0x3868	; 0x3868 <__fp_nan>
    3928:	11 24       	eor	r1, r1
    392a:	0c 94 79 1c 	jmp	0x38f2	; 0x38f2 <__fp_szero>

0000392e <__mulsf3x>:
    392e:	0e 94 56 1c 	call	0x38ac	; 0x38ac <__fp_split3>
    3932:	70 f3       	brcs	.-36     	; 0x3910 <__mulsf3+0x8>

00003934 <__mulsf3_pse>:
    3934:	95 9f       	mul	r25, r21
    3936:	c1 f3       	breq	.-16     	; 0x3928 <__mulsf3+0x20>
    3938:	95 0f       	add	r25, r21
    393a:	50 e0       	ldi	r21, 0x00	; 0
    393c:	55 1f       	adc	r21, r21
    393e:	62 9f       	mul	r22, r18
    3940:	f0 01       	movw	r30, r0
    3942:	72 9f       	mul	r23, r18
    3944:	bb 27       	eor	r27, r27
    3946:	f0 0d       	add	r31, r0
    3948:	b1 1d       	adc	r27, r1
    394a:	63 9f       	mul	r22, r19
    394c:	aa 27       	eor	r26, r26
    394e:	f0 0d       	add	r31, r0
    3950:	b1 1d       	adc	r27, r1
    3952:	aa 1f       	adc	r26, r26
    3954:	64 9f       	mul	r22, r20
    3956:	66 27       	eor	r22, r22
    3958:	b0 0d       	add	r27, r0
    395a:	a1 1d       	adc	r26, r1
    395c:	66 1f       	adc	r22, r22
    395e:	82 9f       	mul	r24, r18
    3960:	22 27       	eor	r18, r18
    3962:	b0 0d       	add	r27, r0
    3964:	a1 1d       	adc	r26, r1
    3966:	62 1f       	adc	r22, r18
    3968:	73 9f       	mul	r23, r19
    396a:	b0 0d       	add	r27, r0
    396c:	a1 1d       	adc	r26, r1
    396e:	62 1f       	adc	r22, r18
    3970:	83 9f       	mul	r24, r19
    3972:	a0 0d       	add	r26, r0
    3974:	61 1d       	adc	r22, r1
    3976:	22 1f       	adc	r18, r18
    3978:	74 9f       	mul	r23, r20
    397a:	33 27       	eor	r19, r19
    397c:	a0 0d       	add	r26, r0
    397e:	61 1d       	adc	r22, r1
    3980:	23 1f       	adc	r18, r19
    3982:	84 9f       	mul	r24, r20
    3984:	60 0d       	add	r22, r0
    3986:	21 1d       	adc	r18, r1
    3988:	82 2f       	mov	r24, r18
    398a:	76 2f       	mov	r23, r22
    398c:	6a 2f       	mov	r22, r26
    398e:	11 24       	eor	r1, r1
    3990:	9f 57       	subi	r25, 0x7F	; 127
    3992:	50 40       	sbci	r21, 0x00	; 0
    3994:	9a f0       	brmi	.+38     	; 0x39bc <__mulsf3_pse+0x88>
    3996:	f1 f0       	breq	.+60     	; 0x39d4 <__mulsf3_pse+0xa0>
    3998:	88 23       	and	r24, r24
    399a:	4a f0       	brmi	.+18     	; 0x39ae <__mulsf3_pse+0x7a>
    399c:	ee 0f       	add	r30, r30
    399e:	ff 1f       	adc	r31, r31
    39a0:	bb 1f       	adc	r27, r27
    39a2:	66 1f       	adc	r22, r22
    39a4:	77 1f       	adc	r23, r23
    39a6:	88 1f       	adc	r24, r24
    39a8:	91 50       	subi	r25, 0x01	; 1
    39aa:	50 40       	sbci	r21, 0x00	; 0
    39ac:	a9 f7       	brne	.-22     	; 0x3998 <__mulsf3_pse+0x64>
    39ae:	9e 3f       	cpi	r25, 0xFE	; 254
    39b0:	51 05       	cpc	r21, r1
    39b2:	80 f0       	brcs	.+32     	; 0x39d4 <__mulsf3_pse+0xa0>
    39b4:	0c 94 2e 1c 	jmp	0x385c	; 0x385c <__fp_inf>
    39b8:	0c 94 79 1c 	jmp	0x38f2	; 0x38f2 <__fp_szero>
    39bc:	5f 3f       	cpi	r21, 0xFF	; 255
    39be:	e4 f3       	brlt	.-8      	; 0x39b8 <__mulsf3_pse+0x84>
    39c0:	98 3e       	cpi	r25, 0xE8	; 232
    39c2:	d4 f3       	brlt	.-12     	; 0x39b8 <__mulsf3_pse+0x84>
    39c4:	86 95       	lsr	r24
    39c6:	77 95       	ror	r23
    39c8:	67 95       	ror	r22
    39ca:	b7 95       	ror	r27
    39cc:	f7 95       	ror	r31
    39ce:	e7 95       	ror	r30
    39d0:	9f 5f       	subi	r25, 0xFF	; 255
    39d2:	c1 f7       	brne	.-16     	; 0x39c4 <__mulsf3_pse+0x90>
    39d4:	fe 2b       	or	r31, r30
    39d6:	88 0f       	add	r24, r24
    39d8:	91 1d       	adc	r25, r1
    39da:	96 95       	lsr	r25
    39dc:	87 95       	ror	r24
    39de:	97 f9       	bld	r25, 7
    39e0:	08 95       	ret

000039e2 <__divmodhi4>:
    39e2:	97 fb       	bst	r25, 7
    39e4:	07 2e       	mov	r0, r23
    39e6:	16 f4       	brtc	.+4      	; 0x39ec <__divmodhi4+0xa>
    39e8:	00 94       	com	r0
    39ea:	07 d0       	rcall	.+14     	; 0x39fa <__divmodhi4_neg1>
    39ec:	77 fd       	sbrc	r23, 7
    39ee:	09 d0       	rcall	.+18     	; 0x3a02 <__divmodhi4_neg2>
    39f0:	0e 94 05 1d 	call	0x3a0a	; 0x3a0a <__udivmodhi4>
    39f4:	07 fc       	sbrc	r0, 7
    39f6:	05 d0       	rcall	.+10     	; 0x3a02 <__divmodhi4_neg2>
    39f8:	3e f4       	brtc	.+14     	; 0x3a08 <__divmodhi4_exit>

000039fa <__divmodhi4_neg1>:
    39fa:	90 95       	com	r25
    39fc:	81 95       	neg	r24
    39fe:	9f 4f       	sbci	r25, 0xFF	; 255
    3a00:	08 95       	ret

00003a02 <__divmodhi4_neg2>:
    3a02:	70 95       	com	r23
    3a04:	61 95       	neg	r22
    3a06:	7f 4f       	sbci	r23, 0xFF	; 255

00003a08 <__divmodhi4_exit>:
    3a08:	08 95       	ret

00003a0a <__udivmodhi4>:
    3a0a:	aa 1b       	sub	r26, r26
    3a0c:	bb 1b       	sub	r27, r27
    3a0e:	51 e1       	ldi	r21, 0x11	; 17
    3a10:	07 c0       	rjmp	.+14     	; 0x3a20 <__udivmodhi4_ep>

00003a12 <__udivmodhi4_loop>:
    3a12:	aa 1f       	adc	r26, r26
    3a14:	bb 1f       	adc	r27, r27
    3a16:	a6 17       	cp	r26, r22
    3a18:	b7 07       	cpc	r27, r23
    3a1a:	10 f0       	brcs	.+4      	; 0x3a20 <__udivmodhi4_ep>
    3a1c:	a6 1b       	sub	r26, r22
    3a1e:	b7 0b       	sbc	r27, r23

00003a20 <__udivmodhi4_ep>:
    3a20:	88 1f       	adc	r24, r24
    3a22:	99 1f       	adc	r25, r25
    3a24:	5a 95       	dec	r21
    3a26:	a9 f7       	brne	.-22     	; 0x3a12 <__udivmodhi4_loop>
    3a28:	80 95       	com	r24
    3a2a:	90 95       	com	r25
    3a2c:	bc 01       	movw	r22, r24
    3a2e:	cd 01       	movw	r24, r26
    3a30:	08 95       	ret

00003a32 <strcmp>:
    3a32:	fb 01       	movw	r30, r22
    3a34:	dc 01       	movw	r26, r24
    3a36:	8d 91       	ld	r24, X+
    3a38:	01 90       	ld	r0, Z+
    3a3a:	80 19       	sub	r24, r0
    3a3c:	01 10       	cpse	r0, r1
    3a3e:	d9 f3       	breq	.-10     	; 0x3a36 <strcmp+0x4>
    3a40:	99 0b       	sbc	r25, r25
    3a42:	08 95       	ret

00003a44 <_exit>:
    3a44:	f8 94       	cli

00003a46 <__stop_program>:
    3a46:	ff cf       	rjmp	.-2      	; 0x3a46 <__stop_program>
