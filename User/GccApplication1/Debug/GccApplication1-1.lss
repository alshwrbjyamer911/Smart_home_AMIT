
GccApplication1-1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002bfe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000194  00800060  00002bfe  00002c92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  008001f4  008001f4  00002e26  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002e26  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002e58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000350  00000000  00000000  00002e94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f5e  00000000  00000000  000031e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f35  00000000  00000000  00005142  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002418  00000000  00000000  00006077  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ac8  00000000  00000000  00008490  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000098f  00000000  00000000  00008f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001598  00000000  00000000  000098e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000298  00000000  00000000  0000ae7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 9c 11 	jmp	0x2338	; 0x2338 <__vector_1>
       8:	0c 94 cd 11 	jmp	0x239a	; 0x239a <__vector_2>
       c:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 c0 13 	jmp	0x2780	; 0x2780 <__vector_10>
      2c:	0c 94 8f 13 	jmp	0x271e	; 0x271e <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ef       	ldi	r30, 0xFE	; 254
      68:	fb e2       	ldi	r31, 0x2B	; 43
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a4 3f       	cpi	r26, 0xF4	; 244
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	22 e0       	ldi	r18, 0x02	; 2
      78:	a4 ef       	ldi	r26, 0xF4	; 244
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 30       	cpi	r26, 0x01	; 1
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ae 00 	call	0x15c	; 0x15c <main>
      8a:	0c 94 fd 15 	jmp	0x2bfa	; 0x2bfa <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <AC>:
#include "TIMER0_INT.h"
#include <string.h>
#include "ADC_INT.h"

void AC()
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	00 d0       	rcall	.+0      	; 0x98 <AC+0x6>
      98:	00 d0       	rcall	.+0      	; 0x9a <AC+0x8>
      9a:	00 d0       	rcall	.+0      	; 0x9c <AC+0xa>
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
	
	
	static u16 counter=0;
	counter++;
      a0:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <__data_end>
      a4:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <__data_end+0x1>
      a8:	01 96       	adiw	r24, 0x01	; 1
      aa:	90 93 f5 01 	sts	0x01F5, r25	; 0x8001f5 <__data_end+0x1>
      ae:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <__data_end>
	if(counter==1220)
      b2:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <__data_end>
      b6:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <__data_end+0x1>
      ba:	84 3c       	cpi	r24, 0xC4	; 196
      bc:	94 40       	sbci	r25, 0x04	; 4
      be:	09 f0       	breq	.+2      	; 0xc2 <AC+0x30>
      c0:	43 c0       	rjmp	.+134    	; 0x148 <AC+0xb6>
	{
		u16 x = ADC_read(ADC0);
      c2:	80 e0       	ldi	r24, 0x00	; 0
      c4:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <ADC_read>
      c8:	9a 83       	std	Y+2, r25	; 0x02
      ca:	89 83       	std	Y+1, r24	; 0x01
		f32 y = x * (500.0/1023.0);
      cc:	89 81       	ldd	r24, Y+1	; 0x01
      ce:	9a 81       	ldd	r25, Y+2	; 0x02
      d0:	cc 01       	movw	r24, r24
      d2:	a0 e0       	ldi	r26, 0x00	; 0
      d4:	b0 e0       	ldi	r27, 0x00	; 0
      d6:	bc 01       	movw	r22, r24
      d8:	cd 01       	movw	r24, r26
      da:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <__floatunsisf>
      de:	dc 01       	movw	r26, r24
      e0:	cb 01       	movw	r24, r22
      e2:	20 e9       	ldi	r18, 0x90	; 144
      e4:	3e e3       	ldi	r19, 0x3E	; 62
      e6:	4a ef       	ldi	r20, 0xFA	; 250
      e8:	5e e3       	ldi	r21, 0x3E	; 62
      ea:	bc 01       	movw	r22, r24
      ec:	cd 01       	movw	r24, r26
      ee:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
      f2:	dc 01       	movw	r26, r24
      f4:	cb 01       	movw	r24, r22
      f6:	8b 83       	std	Y+3, r24	; 0x03
      f8:	9c 83       	std	Y+4, r25	; 0x04
      fa:	ad 83       	std	Y+5, r26	; 0x05
      fc:	be 83       	std	Y+6, r27	; 0x06
		if(y>=30)
      fe:	20 e0       	ldi	r18, 0x00	; 0
     100:	30 e0       	ldi	r19, 0x00	; 0
     102:	40 ef       	ldi	r20, 0xF0	; 240
     104:	51 e4       	ldi	r21, 0x41	; 65
     106:	6b 81       	ldd	r22, Y+3	; 0x03
     108:	7c 81       	ldd	r23, Y+4	; 0x04
     10a:	8d 81       	ldd	r24, Y+5	; 0x05
     10c:	9e 81       	ldd	r25, Y+6	; 0x06
     10e:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     112:	88 23       	and	r24, r24
     114:	2c f0       	brlt	.+10     	; 0x120 <AC+0x8e>
		{
			DIO_setPinValue(DIO_PINA1,DIO_HIGH);
     116:	61 e0       	ldi	r22, 0x01	; 1
     118:	81 e0       	ldi	r24, 0x01	; 1
     11a:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
     11e:	10 c0       	rjmp	.+32     	; 0x140 <AC+0xae>
		}
		else if(y<22)
     120:	20 e0       	ldi	r18, 0x00	; 0
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	40 eb       	ldi	r20, 0xB0	; 176
     126:	51 e4       	ldi	r21, 0x41	; 65
     128:	6b 81       	ldd	r22, Y+3	; 0x03
     12a:	7c 81       	ldd	r23, Y+4	; 0x04
     12c:	8d 81       	ldd	r24, Y+5	; 0x05
     12e:	9e 81       	ldd	r25, Y+6	; 0x06
     130:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     134:	88 23       	and	r24, r24
     136:	24 f4       	brge	.+8      	; 0x140 <AC+0xae>
		{
			DIO_setPinValue(DIO_PINA1,DIO_LOW);
     138:	60 e0       	ldi	r22, 0x00	; 0
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
		}
		counter=0;
     140:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <__data_end+0x1>
     144:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <__data_end>
	}
}
     148:	00 00       	nop
     14a:	26 96       	adiw	r28, 0x06	; 6
     14c:	0f b6       	in	r0, 0x3f	; 63
     14e:	f8 94       	cli
     150:	de bf       	out	0x3e, r29	; 62
     152:	0f be       	out	0x3f, r0	; 63
     154:	cd bf       	out	0x3d, r28	; 61
     156:	df 91       	pop	r29
     158:	cf 91       	pop	r28
     15a:	08 95       	ret

0000015c <main>:
int main(void)
{ 
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	cd b7       	in	r28, 0x3d	; 61
     162:	de b7       	in	r29, 0x3e	; 62
     164:	a8 97       	sbiw	r28, 0x28	; 40
     166:	0f b6       	in	r0, 0x3f	; 63
     168:	f8 94       	cli
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	0f be       	out	0x3f, r0	; 63
     16e:	cd bf       	out	0x3d, r28	; 61
	
	DIO_setPinDir(DIO_PIND3,DIO_INPUT);
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	8b e1       	ldi	r24, 0x1B	; 27
     174:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	DIO_setPinDir(DIO_PIND7,DIO_INPUT);
     178:	60 e0       	ldi	r22, 0x00	; 0
     17a:	8f e1       	ldi	r24, 0x1F	; 31
     17c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	DIO_setPinDir(DIO_PIND6,DIO_INPUT);
     180:	60 e0       	ldi	r22, 0x00	; 0
     182:	8e e1       	ldi	r24, 0x1E	; 30
     184:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA2,DIO_OUTPUT);
     188:	61 e0       	ldi	r22, 0x01	; 1
     18a:	82 e0       	ldi	r24, 0x02	; 2
     18c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA1,DIO_OUTPUT);
     190:	61 e0       	ldi	r22, 0x01	; 1
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA0,DIO_INPUT);
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINA1,DIO_OUTPUT);
     1a0:	61 e0       	ldi	r22, 0x01	; 1
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	ADC_init();
     1a8:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <ADC_init>

	SPI_Init();
     1ac:	0e 94 64 12 	call	0x24c8	; 0x24c8 <SPI_Init>
	UART_init();
     1b0:	0e 94 f1 13 	call	0x27e2	; 0x27e2 <UART_init>
	I2C_init(MASTER);
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	0e 94 40 12 	call	0x2480	; 0x2480 <I2C_init>
	GI_enable();
     1ba:	0e 94 2f 12 	call	0x245e	; 0x245e <GI_enable>
	EXT0_init(EXT_RISING);
     1be:	83 e0       	ldi	r24, 0x03	; 3
     1c0:	0e 94 1e 11 	call	0x223c	; 0x223c <EXT0_init>
	TIMER0_initNormalMode();
     1c4:	0e 94 b4 12 	call	0x2568	; 0x2568 <TIMER0_initNormalMode>
	TIMER0_setCallback(AC);
     1c8:	89 e4       	ldi	r24, 0x49	; 73
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	0e 94 7c 13 	call	0x26f8	; 0x26f8 <TIMER0_setCallback>
	TIMER0_start(TIMER0_CLK_DIV_256);
     1d0:	83 e0       	ldi	r24, 0x03	; 3
     1d2:	0e 94 d7 12 	call	0x25ae	; 0x25ae <TIMER0_start>
	KEYPAD_init();
     1d6:	0e 94 8e 08 	call	0x111c	; 0x111c <KEYPAD_init>
    LCD_init();
     1da:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <LCD_init>
	EXT_setCallbackInt0(ext_fun);
     1de:	85 ea       	ldi	r24, 0xA5	; 165
     1e0:	95 e0       	ldi	r25, 0x05	; 5
     1e2:	0e 94 89 11 	call	0x2312	; 0x2312 <EXT_setCallbackInt0>
	u8 wrongPass=0;
     1e6:	19 82       	std	Y+1, r1	; 0x01
	u8 signout=1;
     1e8:	81 e0       	ldi	r24, 0x01	; 1
     1ea:	8a 83       	std	Y+2, r24	; 0x02
	
while (1)
{
	
			
if (wrongPass!=3)
     1ec:	89 81       	ldd	r24, Y+1	; 0x01
     1ee:	83 30       	cpi	r24, 0x03	; 3
     1f0:	09 f4       	brne	.+2      	; 0x1f4 <main+0x98>
     1f2:	8a c1       	rjmp	.+788    	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
{
	if(userCheck()==1)
     1f4:	0e 94 14 05 	call	0xa28	; 0xa28 <userCheck>
     1f8:	81 30       	cpi	r24, 0x01	; 1
     1fa:	09 f0       	breq	.+2      	; 0x1fe <main+0xa2>
     1fc:	7d c1       	rjmp	.+762    	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
	{
		wrongPass=0;
     1fe:	19 82       	std	Y+1, r1	; 0x01
		UART_sendString("waiting admin approval...\r");
     200:	80 e6       	ldi	r24, 0x60	; 96
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
		DIO_setPinDir(DIO_PINB0,DIO_OUTPUT);
     208:	61 e0       	ldi	r22, 0x01	; 1
     20a:	88 e0       	ldi	r24, 0x08	; 8
     20c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
		DIO_setPinValue(DIO_PINB0,DIO_HIGH);	
     210:	61 e0       	ldi	r22, 0x01	; 1
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	a8 e4       	ldi	r26, 0x48	; 72
     21e:	b2 e4       	ldi	r27, 0x42	; 66
     220:	8f 83       	std	Y+7, r24	; 0x07
     222:	98 87       	std	Y+8, r25	; 0x08
     224:	a9 87       	std	Y+9, r26	; 0x09
     226:	ba 87       	std	Y+10, r27	; 0x0a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     228:	20 e0       	ldi	r18, 0x00	; 0
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	4a e7       	ldi	r20, 0x7A	; 122
     22e:	55 e4       	ldi	r21, 0x45	; 69
     230:	6f 81       	ldd	r22, Y+7	; 0x07
     232:	78 85       	ldd	r23, Y+8	; 0x08
     234:	89 85       	ldd	r24, Y+9	; 0x09
     236:	9a 85       	ldd	r25, Y+10	; 0x0a
     238:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     23c:	dc 01       	movw	r26, r24
     23e:	cb 01       	movw	r24, r22
     240:	8b 87       	std	Y+11, r24	; 0x0b
     242:	9c 87       	std	Y+12, r25	; 0x0c
     244:	ad 87       	std	Y+13, r26	; 0x0d
     246:	be 87       	std	Y+14, r27	; 0x0e
	if (__tmp < 1.0)
     248:	20 e0       	ldi	r18, 0x00	; 0
     24a:	30 e0       	ldi	r19, 0x00	; 0
     24c:	40 e8       	ldi	r20, 0x80	; 128
     24e:	5f e3       	ldi	r21, 0x3F	; 63
     250:	6b 85       	ldd	r22, Y+11	; 0x0b
     252:	7c 85       	ldd	r23, Y+12	; 0x0c
     254:	8d 85       	ldd	r24, Y+13	; 0x0d
     256:	9e 85       	ldd	r25, Y+14	; 0x0e
     258:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     25c:	88 23       	and	r24, r24
     25e:	2c f4       	brge	.+10     	; 0x26a <main+0x10e>
		__ticks = 1;
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	98 8b       	std	Y+16, r25	; 0x10
     266:	8f 87       	std	Y+15, r24	; 0x0f
     268:	3f c0       	rjmp	.+126    	; 0x2e8 <main+0x18c>
	else if (__tmp > 65535)
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	3f ef       	ldi	r19, 0xFF	; 255
     26e:	4f e7       	ldi	r20, 0x7F	; 127
     270:	57 e4       	ldi	r21, 0x47	; 71
     272:	6b 85       	ldd	r22, Y+11	; 0x0b
     274:	7c 85       	ldd	r23, Y+12	; 0x0c
     276:	8d 85       	ldd	r24, Y+13	; 0x0d
     278:	9e 85       	ldd	r25, Y+14	; 0x0e
     27a:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     27e:	18 16       	cp	r1, r24
     280:	4c f5       	brge	.+82     	; 0x2d4 <main+0x178>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e2       	ldi	r20, 0x20	; 32
     288:	51 e4       	ldi	r21, 0x41	; 65
     28a:	6f 81       	ldd	r22, Y+7	; 0x07
     28c:	78 85       	ldd	r23, Y+8	; 0x08
     28e:	89 85       	ldd	r24, Y+9	; 0x09
     290:	9a 85       	ldd	r25, Y+10	; 0x0a
     292:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	bc 01       	movw	r22, r24
     29c:	cd 01       	movw	r24, r26
     29e:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     2a2:	dc 01       	movw	r26, r24
     2a4:	cb 01       	movw	r24, r22
     2a6:	98 8b       	std	Y+16, r25	; 0x10
     2a8:	8f 87       	std	Y+15, r24	; 0x0f
     2aa:	0f c0       	rjmp	.+30     	; 0x2ca <main+0x16e>
     2ac:	80 e9       	ldi	r24, 0x90	; 144
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	9a 8b       	std	Y+18, r25	; 0x12
     2b2:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2b4:	89 89       	ldd	r24, Y+17	; 0x11
     2b6:	9a 89       	ldd	r25, Y+18	; 0x12
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	f1 f7       	brne	.-4      	; 0x2b8 <main+0x15c>
     2bc:	9a 8b       	std	Y+18, r25	; 0x12
     2be:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     2c2:	98 89       	ldd	r25, Y+16	; 0x10
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	98 8b       	std	Y+16, r25	; 0x10
     2c8:	8f 87       	std	Y+15, r24	; 0x0f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2ca:	8f 85       	ldd	r24, Y+15	; 0x0f
     2cc:	98 89       	ldd	r25, Y+16	; 0x10
     2ce:	89 2b       	or	r24, r25
     2d0:	69 f7       	brne	.-38     	; 0x2ac <main+0x150>
     2d2:	14 c0       	rjmp	.+40     	; 0x2fc <main+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2d4:	6b 85       	ldd	r22, Y+11	; 0x0b
     2d6:	7c 85       	ldd	r23, Y+12	; 0x0c
     2d8:	8d 85       	ldd	r24, Y+13	; 0x0d
     2da:	9e 85       	ldd	r25, Y+14	; 0x0e
     2dc:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     2e0:	dc 01       	movw	r26, r24
     2e2:	cb 01       	movw	r24, r22
     2e4:	98 8b       	std	Y+16, r25	; 0x10
     2e6:	8f 87       	std	Y+15, r24	; 0x0f
     2e8:	8f 85       	ldd	r24, Y+15	; 0x0f
     2ea:	98 89       	ldd	r25, Y+16	; 0x10
     2ec:	9c 8b       	std	Y+20, r25	; 0x14
     2ee:	8b 8b       	std	Y+19, r24	; 0x13
     2f0:	8b 89       	ldd	r24, Y+19	; 0x13
     2f2:	9c 89       	ldd	r25, Y+20	; 0x14
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	f1 f7       	brne	.-4      	; 0x2f4 <main+0x198>
     2f8:	9c 8b       	std	Y+20, r25	; 0x14
     2fa:	8b 8b       	std	Y+19, r24	; 0x13
		_delay_ms(50);	
		DIO_setPinValue(DIO_PINB0,DIO_LOW);
     2fc:	60 e0       	ldi	r22, 0x00	; 0
     2fe:	88 e0       	ldi	r24, 0x08	; 8
     300:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
		
		while ((!DIO_readPinValue(DIO_PIND3)));
     304:	00 00       	nop
     306:	8b e1       	ldi	r24, 0x1B	; 27
     308:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
     30c:	88 23       	and	r24, r24
     30e:	d9 f3       	breq	.-10     	; 0x306 <main+0x1aa>
		if (DIO_readPinValue(DIO_PIND6))
     310:	8e e1       	ldi	r24, 0x1E	; 30
     312:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
     316:	88 23       	and	r24, r24
     318:	09 f4       	brne	.+2      	; 0x31c <main+0x1c0>
     31a:	dd c0       	rjmp	.+442    	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
		{
			UART_sendString("welcome\r");
     31c:	8b e7       	ldi	r24, 0x7B	; 123
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
			///////////////////////////////////////////////
			u8 userchoice[10];
			 
			   
			     
				 while (signout==1)
     324:	d3 c0       	rjmp	.+422    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
				 {
					 UART_sendString("Write the number of the led then on or off to control it\rPress a number between 1 and 5 to control the dimming\rWrite off to turn dimmer off\rPress s to signout\r");
     326:	84 e8       	ldi	r24, 0x84	; 132
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
					 userInput(userchoice);
     32e:	ce 01       	movw	r24, r28
     330:	4f 96       	adiw	r24, 0x1f	; 31
     332:	0e 94 45 03 	call	0x68a	; 0x68a <userInput>
					 AC();
     336:	0e 94 49 00 	call	0x92	; 0x92 <AC>
					 if ((!(strcmp(userchoice,"off"))))
     33a:	ce 01       	movw	r24, r28
     33c:	4f 96       	adiw	r24, 0x1f	; 31
     33e:	64 e2       	ldi	r22, 0x24	; 36
     340:	71 e0       	ldi	r23, 0x01	; 1
     342:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     346:	89 2b       	or	r24, r25
     348:	21 f4       	brne	.+8      	; 0x352 <main+0x1f6>
					 {
						 //dimmeroff
						 SPI_Write('a');
     34a:	81 e6       	ldi	r24, 0x61	; 97
     34c:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     350:	bd c0       	rjmp	.+378    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"1"))))
     352:	ce 01       	movw	r24, r28
     354:	4f 96       	adiw	r24, 0x1f	; 31
     356:	68 e2       	ldi	r22, 0x28	; 40
     358:	71 e0       	ldi	r23, 0x01	; 1
     35a:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     35e:	89 2b       	or	r24, r25
     360:	21 f4       	brne	.+8      	; 0x36a <main+0x20e>
					 {
						// LED_DIMMER(1);
						SPI_Write('b');
     362:	82 e6       	ldi	r24, 0x62	; 98
     364:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     368:	b1 c0       	rjmp	.+354    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"2"))))
     36a:	ce 01       	movw	r24, r28
     36c:	4f 96       	adiw	r24, 0x1f	; 31
     36e:	6a e2       	ldi	r22, 0x2A	; 42
     370:	71 e0       	ldi	r23, 0x01	; 1
     372:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     376:	89 2b       	or	r24, r25
     378:	21 f4       	brne	.+8      	; 0x382 <main+0x226>
					 {
						// LED_DIMMER(2);
						SPI_Write('c');
     37a:	83 e6       	ldi	r24, 0x63	; 99
     37c:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     380:	a5 c0       	rjmp	.+330    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"3"))))
     382:	ce 01       	movw	r24, r28
     384:	4f 96       	adiw	r24, 0x1f	; 31
     386:	6c e2       	ldi	r22, 0x2C	; 44
     388:	71 e0       	ldi	r23, 0x01	; 1
     38a:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     38e:	89 2b       	or	r24, r25
     390:	21 f4       	brne	.+8      	; 0x39a <main+0x23e>
					 {
						 //LED_DIMMER(3);
						 SPI_Write('d');
     392:	84 e6       	ldi	r24, 0x64	; 100
     394:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     398:	99 c0       	rjmp	.+306    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"4"))))
     39a:	ce 01       	movw	r24, r28
     39c:	4f 96       	adiw	r24, 0x1f	; 31
     39e:	6e e2       	ldi	r22, 0x2E	; 46
     3a0:	71 e0       	ldi	r23, 0x01	; 1
     3a2:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     3a6:	89 2b       	or	r24, r25
     3a8:	21 f4       	brne	.+8      	; 0x3b2 <main+0x256>
					 {
						 //LED_DIMMER(4);
						 SPI_Write('e');
     3aa:	85 e6       	ldi	r24, 0x65	; 101
     3ac:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     3b0:	8d c0       	rjmp	.+282    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"5"))))
     3b2:	ce 01       	movw	r24, r28
     3b4:	4f 96       	adiw	r24, 0x1f	; 31
     3b6:	60 e3       	ldi	r22, 0x30	; 48
     3b8:	71 e0       	ldi	r23, 0x01	; 1
     3ba:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     3be:	89 2b       	or	r24, r25
     3c0:	21 f4       	brne	.+8      	; 0x3ca <main+0x26e>
					 {
						 //LED_DIMMER(5);
						 SPI_Write('f');
     3c2:	86 e6       	ldi	r24, 0x66	; 102
     3c4:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     3c8:	81 c0       	rjmp	.+258    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"1 on"))))
     3ca:	ce 01       	movw	r24, r28
     3cc:	4f 96       	adiw	r24, 0x1f	; 31
     3ce:	62 e3       	ldi	r22, 0x32	; 50
     3d0:	71 e0       	ldi	r23, 0x01	; 1
     3d2:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     3d6:	89 2b       	or	r24, r25
     3d8:	21 f4       	brne	.+8      	; 0x3e2 <main+0x286>
					 {
						// DIO_setPinValue(DIO_PINA0,DIO_HIGH);
						SPI_Write('g');
     3da:	87 e6       	ldi	r24, 0x67	; 103
     3dc:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     3e0:	75 c0       	rjmp	.+234    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
										 }
					 else if ((!(strcmp(userchoice,"2 on"))))
     3e2:	ce 01       	movw	r24, r28
     3e4:	4f 96       	adiw	r24, 0x1f	; 31
     3e6:	67 e3       	ldi	r22, 0x37	; 55
     3e8:	71 e0       	ldi	r23, 0x01	; 1
     3ea:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     3ee:	89 2b       	or	r24, r25
     3f0:	21 f4       	brne	.+8      	; 0x3fa <main+0x29e>
					 {
						 //DIO_setPinValue(DIO_PINA1,DIO_HIGH);
						 SPI_Write('h');
     3f2:	88 e6       	ldi	r24, 0x68	; 104
     3f4:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     3f8:	69 c0       	rjmp	.+210    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"3 on"))))
     3fa:	ce 01       	movw	r24, r28
     3fc:	4f 96       	adiw	r24, 0x1f	; 31
     3fe:	6c e3       	ldi	r22, 0x3C	; 60
     400:	71 e0       	ldi	r23, 0x01	; 1
     402:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     406:	89 2b       	or	r24, r25
     408:	21 f4       	brne	.+8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
					 {
						// DIO_setPinValue(DIO_PINA2,DIO_HIGH);
						 SPI_Write('i');
     40a:	89 e6       	ldi	r24, 0x69	; 105
     40c:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     410:	5d c0       	rjmp	.+186    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"4 on"))))
     412:	ce 01       	movw	r24, r28
     414:	4f 96       	adiw	r24, 0x1f	; 31
     416:	61 e4       	ldi	r22, 0x41	; 65
     418:	71 e0       	ldi	r23, 0x01	; 1
     41a:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     41e:	89 2b       	or	r24, r25
     420:	21 f4       	brne	.+8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
					 {
						// DIO_setPinValue(DIO_PINA3,DIO_HIGH);
						 SPI_Write('j');
     422:	8a e6       	ldi	r24, 0x6A	; 106
     424:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     428:	51 c0       	rjmp	.+162    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"5 on"))))
     42a:	ce 01       	movw	r24, r28
     42c:	4f 96       	adiw	r24, 0x1f	; 31
     42e:	66 e4       	ldi	r22, 0x46	; 70
     430:	71 e0       	ldi	r23, 0x01	; 1
     432:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     436:	89 2b       	or	r24, r25
     438:	21 f4       	brne	.+8      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
					 {
						 //DIO_setPinValue(DIO_PINA4,DIO_HIGH);
						 SPI_Write('k');
     43a:	8b e6       	ldi	r24, 0x6B	; 107
     43c:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     440:	45 c0       	rjmp	.+138    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"1 off"))))
     442:	ce 01       	movw	r24, r28
     444:	4f 96       	adiw	r24, 0x1f	; 31
     446:	6b e4       	ldi	r22, 0x4B	; 75
     448:	71 e0       	ldi	r23, 0x01	; 1
     44a:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     44e:	89 2b       	or	r24, r25
     450:	21 f4       	brne	.+8      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
					 {
						// DIO_setPinValue(DIO_PINA0,DIO_LOW);
						 SPI_Write('l');
     452:	8c e6       	ldi	r24, 0x6C	; 108
     454:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     458:	39 c0       	rjmp	.+114    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"2 off"))))
     45a:	ce 01       	movw	r24, r28
     45c:	4f 96       	adiw	r24, 0x1f	; 31
     45e:	61 e5       	ldi	r22, 0x51	; 81
     460:	71 e0       	ldi	r23, 0x01	; 1
     462:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     466:	89 2b       	or	r24, r25
     468:	21 f4       	brne	.+8      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
					 {
						// DIO_setPinValue(DIO_PINA1,DIO_LOW);
						 SPI_Write('m');
     46a:	8d e6       	ldi	r24, 0x6D	; 109
     46c:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     470:	2d c0       	rjmp	.+90     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"3 off"))))
     472:	ce 01       	movw	r24, r28
     474:	4f 96       	adiw	r24, 0x1f	; 31
     476:	67 e5       	ldi	r22, 0x57	; 87
     478:	71 e0       	ldi	r23, 0x01	; 1
     47a:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     47e:	89 2b       	or	r24, r25
     480:	21 f4       	brne	.+8      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
					 {
						// DIO_setPinValue(DIO_PINA2,DIO_LOW);
						 SPI_Write('n');
     482:	8e e6       	ldi	r24, 0x6E	; 110
     484:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     488:	21 c0       	rjmp	.+66     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"4 off"))))
     48a:	ce 01       	movw	r24, r28
     48c:	4f 96       	adiw	r24, 0x1f	; 31
     48e:	6d e5       	ldi	r22, 0x5D	; 93
     490:	71 e0       	ldi	r23, 0x01	; 1
     492:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     496:	89 2b       	or	r24, r25
     498:	21 f4       	brne	.+8      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
					 {
						// DIO_setPinValue(DIO_PINA3,DIO_LOW);
						 SPI_Write('o');
     49a:	8f e6       	ldi	r24, 0x6F	; 111
     49c:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     4a0:	15 c0       	rjmp	.+42     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"5 off"))))
     4a2:	ce 01       	movw	r24, r28
     4a4:	4f 96       	adiw	r24, 0x1f	; 31
     4a6:	63 e6       	ldi	r22, 0x63	; 99
     4a8:	71 e0       	ldi	r23, 0x01	; 1
     4aa:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     4ae:	89 2b       	or	r24, r25
     4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
					 {
						 //DIO_setPinValue(DIO_PINA4,DIO_LOW);
						 SPI_Write('p');
     4b2:	80 e7       	ldi	r24, 0x70	; 112
     4b4:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
     4b8:	09 c0       	rjmp	.+18     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 }
					 else if ((!(strcmp(userchoice,"s"))))
     4ba:	ce 01       	movw	r24, r28
     4bc:	4f 96       	adiw	r24, 0x1f	; 31
     4be:	69 e6       	ldi	r22, 0x69	; 105
     4c0:	71 e0       	ldi	r23, 0x01	; 1
     4c2:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     4c6:	89 2b       	or	r24, r25
     4c8:	09 f4       	brne	.+2      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					 {
						 signout=0;
     4ca:	1a 82       	std	Y+2, r1	; 0x02
			///////////////////////////////////////////////
			u8 userchoice[10];
			 
			   
			     
				 while (signout==1)
     4cc:	8a 81       	ldd	r24, Y+2	; 0x02
     4ce:	81 30       	cpi	r24, 0x01	; 1
     4d0:	09 f4       	brne	.+2      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
     4d2:	29 cf       	rjmp	.-430    	; 0x326 <main+0x1ca>
     4d4:	8b ce       	rjmp	.-746    	; 0x1ec <main+0x90>
			
			
			
			//menu+door
		}
		else if (DIO_readPinValue(DIO_PIND7))
     4d6:	8f e1       	ldi	r24, 0x1F	; 31
     4d8:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
     4dc:	88 23       	and	r24, r24
     4de:	09 f4       	brne	.+2      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4e0:	85 ce       	rjmp	.-758    	; 0x1ec <main+0x90>
			{
				UART_sendString("Access Denied");
     4e2:	8b e6       	ldi	r24, 0x6B	; 107
     4e4:	91 e0       	ldi	r25, 0x01	; 1
     4e6:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
				UART_sendData(13);
     4ea:	8d e0       	ldi	r24, 0x0D	; 13
     4ec:	0e 94 31 14 	call	0x2862	; 0x2862 <UART_sendData>
				UART_sendData(10);
     4f0:	8a e0       	ldi	r24, 0x0A	; 10
     4f2:	0e 94 31 14 	call	0x2862	; 0x2862 <UART_sendData>
     4f6:	7a ce       	rjmp	.-780    	; 0x1ec <main+0x90>
			}
	}
	else 
	{
   		UART_sendString("Wrong Username or Password");
     4f8:	89 e7       	ldi	r24, 0x79	; 121
     4fa:	91 e0       	ldi	r25, 0x01	; 1
     4fc:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
		wrongPass++;
     500:	89 81       	ldd	r24, Y+1	; 0x01
     502:	8f 5f       	subi	r24, 0xFF	; 255
     504:	89 83       	std	Y+1, r24	; 0x01
     506:	72 ce       	rjmp	.-796    	; 0x1ec <main+0x90>

	}
}
else
{
	DIO_setPinValue(DIO_PINA2,DIO_HIGH);
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	82 e0       	ldi	r24, 0x02	; 2
     50c:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	aa ef       	ldi	r26, 0xFA	; 250
     516:	b4 e4       	ldi	r27, 0x44	; 68
     518:	8b 83       	std	Y+3, r24	; 0x03
     51a:	9c 83       	std	Y+4, r25	; 0x04
     51c:	ad 83       	std	Y+5, r26	; 0x05
     51e:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	4a e7       	ldi	r20, 0x7A	; 122
     526:	55 e4       	ldi	r21, 0x45	; 69
     528:	6b 81       	ldd	r22, Y+3	; 0x03
     52a:	7c 81       	ldd	r23, Y+4	; 0x04
     52c:	8d 81       	ldd	r24, Y+5	; 0x05
     52e:	9e 81       	ldd	r25, Y+6	; 0x06
     530:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     534:	dc 01       	movw	r26, r24
     536:	cb 01       	movw	r24, r22
     538:	8d 8b       	std	Y+21, r24	; 0x15
     53a:	9e 8b       	std	Y+22, r25	; 0x16
     53c:	af 8b       	std	Y+23, r26	; 0x17
     53e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e8       	ldi	r20, 0x80	; 128
     546:	5f e3       	ldi	r21, 0x3F	; 63
     548:	6d 89       	ldd	r22, Y+21	; 0x15
     54a:	7e 89       	ldd	r23, Y+22	; 0x16
     54c:	8f 89       	ldd	r24, Y+23	; 0x17
     54e:	98 8d       	ldd	r25, Y+24	; 0x18
     550:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     554:	88 23       	and	r24, r24
     556:	2c f4       	brge	.+10     	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
		__ticks = 1;
     558:	81 e0       	ldi	r24, 0x01	; 1
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	9a 8f       	std	Y+26, r25	; 0x1a
     55e:	89 8f       	std	Y+25, r24	; 0x19
     560:	3f c0       	rjmp	.+126    	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
	else if (__tmp > 65535)
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	3f ef       	ldi	r19, 0xFF	; 255
     566:	4f e7       	ldi	r20, 0x7F	; 127
     568:	57 e4       	ldi	r21, 0x47	; 71
     56a:	6d 89       	ldd	r22, Y+21	; 0x15
     56c:	7e 89       	ldd	r23, Y+22	; 0x16
     56e:	8f 89       	ldd	r24, Y+23	; 0x17
     570:	98 8d       	ldd	r25, Y+24	; 0x18
     572:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     576:	18 16       	cp	r1, r24
     578:	4c f5       	brge	.+82     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	40 e2       	ldi	r20, 0x20	; 32
     580:	51 e4       	ldi	r21, 0x41	; 65
     582:	6b 81       	ldd	r22, Y+3	; 0x03
     584:	7c 81       	ldd	r23, Y+4	; 0x04
     586:	8d 81       	ldd	r24, Y+5	; 0x05
     588:	9e 81       	ldd	r25, Y+6	; 0x06
     58a:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     58e:	dc 01       	movw	r26, r24
     590:	cb 01       	movw	r24, r22
     592:	bc 01       	movw	r22, r24
     594:	cd 01       	movw	r24, r26
     596:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	9a 8f       	std	Y+26, r25	; 0x1a
     5a0:	89 8f       	std	Y+25, r24	; 0x19
     5a2:	0f c0       	rjmp	.+30     	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
     5a4:	80 e9       	ldi	r24, 0x90	; 144
     5a6:	91 e0       	ldi	r25, 0x01	; 1
     5a8:	9c 8f       	std	Y+28, r25	; 0x1c
     5aa:	8b 8f       	std	Y+27, r24	; 0x1b
     5ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     5ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     5b0:	01 97       	sbiw	r24, 0x01	; 1
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
     5b4:	9c 8f       	std	Y+28, r25	; 0x1c
     5b6:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5b8:	89 8d       	ldd	r24, Y+25	; 0x19
     5ba:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5bc:	01 97       	sbiw	r24, 0x01	; 1
     5be:	9a 8f       	std	Y+26, r25	; 0x1a
     5c0:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5c2:	89 8d       	ldd	r24, Y+25	; 0x19
     5c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5c6:	89 2b       	or	r24, r25
     5c8:	69 f7       	brne	.-38     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
     5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5cc:	6d 89       	ldd	r22, Y+21	; 0x15
     5ce:	7e 89       	ldd	r23, Y+22	; 0x16
     5d0:	8f 89       	ldd	r24, Y+23	; 0x17
     5d2:	98 8d       	ldd	r25, Y+24	; 0x18
     5d4:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	9a 8f       	std	Y+26, r25	; 0x1a
     5de:	89 8f       	std	Y+25, r24	; 0x19
     5e0:	89 8d       	ldd	r24, Y+25	; 0x19
     5e2:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5e4:	9e 8f       	std	Y+30, r25	; 0x1e
     5e6:	8d 8f       	std	Y+29, r24	; 0x1d
     5e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5ea:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
     5f0:	9e 8f       	std	Y+30, r25	; 0x1e
     5f2:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2000);
	DIO_setPinValue(DIO_PINA2,DIO_LOW);
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	82 e0       	ldi	r24, 0x02	; 2
     5f8:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
	wrongPass=0;
     5fc:	19 82       	std	Y+1, r1	; 0x01
}

	

 }
     5fe:	f6 cd       	rjmp	.-1044   	; 0x1ec <main+0x90>

00000600 <userkeypadInput>:
#include "EEPROM_INT.h"
#include "MEM_INT.h"
#include "ADC_INT.h"
u8 charCounter=0;
void userkeypadInput (u8 *input)
{
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	00 d0       	rcall	.+0      	; 0x606 <userkeypadInput+0x6>
     606:	00 d0       	rcall	.+0      	; 0x608 <userkeypadInput+0x8>
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	9c 83       	std	Y+4, r25	; 0x04
     60e:	8b 83       	std	Y+3, r24	; 0x03
	u8 key=0,i=0;
     610:	19 82       	std	Y+1, r1	; 0x01
     612:	1a 82       	std	Y+2, r1	; 0x02
	charCounter=0;
     614:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <charCounter>
	while (key!='=')
     618:	23 c0       	rjmp	.+70     	; 0x660 <userkeypadInput+0x60>
	{
		key = KEYPAD_read();
     61a:	0e 94 c2 08 	call	0x1184	; 0x1184 <KEYPAD_read>
     61e:	89 83       	std	Y+1, r24	; 0x01
		if(key != KEYPAD_UNPRESSED && key!='=')
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	88 37       	cpi	r24, 0x78	; 120
     624:	e9 f0       	breq	.+58     	; 0x660 <userkeypadInput+0x60>
     626:	89 81       	ldd	r24, Y+1	; 0x01
     628:	8d 33       	cpi	r24, 0x3D	; 61
     62a:	d1 f0       	breq	.+52     	; 0x660 <userkeypadInput+0x60>
		{
			while(KEYPAD_read() != KEYPAD_UNPRESSED);
     62c:	00 00       	nop
     62e:	0e 94 c2 08 	call	0x1184	; 0x1184 <KEYPAD_read>
     632:	88 37       	cpi	r24, 0x78	; 120
     634:	e1 f7       	brne	.-8      	; 0x62e <userkeypadInput+0x2e>
			LCD_writeChar(key);
     636:	89 81       	ldd	r24, Y+1	; 0x01
     638:	0e 94 cb 0c 	call	0x1996	; 0x1996 <LCD_writeChar>
			input[i]=key;
     63c:	8a 81       	ldd	r24, Y+2	; 0x02
     63e:	88 2f       	mov	r24, r24
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	2b 81       	ldd	r18, Y+3	; 0x03
     644:	3c 81       	ldd	r19, Y+4	; 0x04
     646:	82 0f       	add	r24, r18
     648:	93 1f       	adc	r25, r19
     64a:	29 81       	ldd	r18, Y+1	; 0x01
     64c:	fc 01       	movw	r30, r24
     64e:	20 83       	st	Z, r18
			charCounter++;
     650:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     654:	8f 5f       	subi	r24, 0xFF	; 255
     656:	80 93 f6 01 	sts	0x01F6, r24	; 0x8001f6 <charCounter>
			i++;
     65a:	8a 81       	ldd	r24, Y+2	; 0x02
     65c:	8f 5f       	subi	r24, 0xFF	; 255
     65e:	8a 83       	std	Y+2, r24	; 0x02
u8 charCounter=0;
void userkeypadInput (u8 *input)
{
	u8 key=0,i=0;
	charCounter=0;
	while (key!='=')
     660:	89 81       	ldd	r24, Y+1	; 0x01
     662:	8d 33       	cpi	r24, 0x3D	; 61
     664:	d1 f6       	brne	.-76     	; 0x61a <userkeypadInput+0x1a>
			input[i]=key;
			charCounter++;
			i++;
		}
	}
	input[charCounter]='\0';
     666:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     66a:	88 2f       	mov	r24, r24
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	2b 81       	ldd	r18, Y+3	; 0x03
     670:	3c 81       	ldd	r19, Y+4	; 0x04
     672:	82 0f       	add	r24, r18
     674:	93 1f       	adc	r25, r19
     676:	fc 01       	movw	r30, r24
     678:	10 82       	st	Z, r1
}
     67a:	00 00       	nop
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	0f 90       	pop	r0
     682:	0f 90       	pop	r0
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	08 95       	ret

0000068a <userInput>:
void userInput (u8 *input)
{
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	00 d0       	rcall	.+0      	; 0x690 <userInput+0x6>
     690:	00 d0       	rcall	.+0      	; 0x692 <userInput+0x8>
     692:	cd b7       	in	r28, 0x3d	; 61
     694:	de b7       	in	r29, 0x3e	; 62
     696:	9c 83       	std	Y+4, r25	; 0x04
     698:	8b 83       	std	Y+3, r24	; 0x03
	u8 c=0,i=0;
     69a:	19 82       	std	Y+1, r1	; 0x01
     69c:	1a 82       	std	Y+2, r1	; 0x02
	charCounter=0;
     69e:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <charCounter>
	while (c!=0x3d)
     6a2:	18 c0       	rjmp	.+48     	; 0x6d4 <userInput+0x4a>
	{
		c=UART_receiveData();
     6a4:	0e 94 79 14 	call	0x28f2	; 0x28f2 <UART_receiveData>
     6a8:	89 83       	std	Y+1, r24	; 0x01
		if (c!=0x3d)
     6aa:	89 81       	ldd	r24, Y+1	; 0x01
     6ac:	8d 33       	cpi	r24, 0x3D	; 61
     6ae:	91 f0       	breq	.+36     	; 0x6d4 <userInput+0x4a>
		{
			input[i]=c;
     6b0:	8a 81       	ldd	r24, Y+2	; 0x02
     6b2:	88 2f       	mov	r24, r24
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	2b 81       	ldd	r18, Y+3	; 0x03
     6b8:	3c 81       	ldd	r19, Y+4	; 0x04
     6ba:	82 0f       	add	r24, r18
     6bc:	93 1f       	adc	r25, r19
     6be:	29 81       	ldd	r18, Y+1	; 0x01
     6c0:	fc 01       	movw	r30, r24
     6c2:	20 83       	st	Z, r18
			charCounter++;
     6c4:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     6c8:	8f 5f       	subi	r24, 0xFF	; 255
     6ca:	80 93 f6 01 	sts	0x01F6, r24	; 0x8001f6 <charCounter>
			i++;
     6ce:	8a 81       	ldd	r24, Y+2	; 0x02
     6d0:	8f 5f       	subi	r24, 0xFF	; 255
     6d2:	8a 83       	std	Y+2, r24	; 0x02
}
void userInput (u8 *input)
{
	u8 c=0,i=0;
	charCounter=0;
	while (c!=0x3d)
     6d4:	89 81       	ldd	r24, Y+1	; 0x01
     6d6:	8d 33       	cpi	r24, 0x3D	; 61
     6d8:	29 f7       	brne	.-54     	; 0x6a4 <userInput+0x1a>
			input[i]=c;
			charCounter++;
			i++;
		}
	}
	input[charCounter]='\0';
     6da:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     6de:	88 2f       	mov	r24, r24
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	2b 81       	ldd	r18, Y+3	; 0x03
     6e4:	3c 81       	ldd	r19, Y+4	; 0x04
     6e6:	82 0f       	add	r24, r18
     6e8:	93 1f       	adc	r25, r19
     6ea:	fc 01       	movw	r30, r24
     6ec:	10 82       	st	Z, r1
	UART_sendData(13);
     6ee:	8d e0       	ldi	r24, 0x0D	; 13
     6f0:	0e 94 31 14 	call	0x2862	; 0x2862 <UART_sendData>
	UART_sendData(10);
     6f4:	8a e0       	ldi	r24, 0x0A	; 10
     6f6:	0e 94 31 14 	call	0x2862	; 0x2862 <UART_sendData>
}
     6fa:	00 00       	nop
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	08 95       	ret

0000070a <userkeypadCheck>:
u8 userkeypadCheck()
{
     70a:	1f 93       	push	r17
     70c:	cf 93       	push	r28
     70e:	df 93       	push	r29
     710:	cd b7       	in	r28, 0x3d	; 61
     712:	de b7       	in	r29, 0x3e	; 62
     714:	e8 97       	sbiw	r28, 0x38	; 56
     716:	0f b6       	in	r0, 0x3f	; 63
     718:	f8 94       	cli
     71a:	de bf       	out	0x3e, r29	; 62
     71c:	0f be       	out	0x3f, r0	; 63
     71e:	cd bf       	out	0x3d, r28	; 61
	u8 user[10];
	u8 pass[10];
	u8 flag=0;
     720:	19 82       	std	Y+1, r1	; 0x01
	LCD_writeStr("user=");
     722:	84 e9       	ldi	r24, 0x94	; 148
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <LCD_writeStr>
	userkeypadInput(user);
     72a:	ce 01       	movw	r24, r28
     72c:	85 96       	adiw	r24, 0x25	; 37
     72e:	0e 94 00 03 	call	0x600	; 0x600 <userkeypadInput>
	u8 correct=0, location=0;
     732:	1a 82       	std	Y+2, r1	; 0x02
     734:	1b 82       	std	Y+3, r1	; 0x03
	for (u8 i=11;i<100;i+=20)
     736:	8b e0       	ldi	r24, 0x0B	; 11
     738:	8c 83       	std	Y+4, r24	; 0x04
     73a:	b1 c0       	rjmp	.+354    	; 0x89e <__stack+0x3f>
	{
		if(EEPROM_readData(i)!=255)
     73c:	8c 81       	ldd	r24, Y+4	; 0x04
     73e:	88 2f       	mov	r24, r24
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 cb 07 	call	0xf96	; 0xf96 <EEPROM_readData>
     746:	8f 3f       	cpi	r24, 0xFF	; 255
     748:	09 f4       	brne	.+2      	; 0x74c <userkeypadCheck+0x42>
     74a:	a3 c0       	rjmp	.+326    	; 0x892 <__stack+0x33>
		{
			for(u8 l=0,j=i; l<charCounter; j++,l++)
     74c:	1d 82       	std	Y+5, r1	; 0x05
     74e:	8c 81       	ldd	r24, Y+4	; 0x04
     750:	8e 83       	std	Y+6, r24	; 0x06
     752:	99 c0       	rjmp	.+306    	; 0x886 <__stack+0x27>
			{
				if (user[l]==EEPROM_readData(j))
     754:	8d 81       	ldd	r24, Y+5	; 0x05
     756:	88 2f       	mov	r24, r24
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	9e 01       	movw	r18, r28
     75c:	2b 5d       	subi	r18, 0xDB	; 219
     75e:	3f 4f       	sbci	r19, 0xFF	; 255
     760:	82 0f       	add	r24, r18
     762:	93 1f       	adc	r25, r19
     764:	fc 01       	movw	r30, r24
     766:	10 81       	ld	r17, Z
     768:	8e 81       	ldd	r24, Y+6	; 0x06
     76a:	88 2f       	mov	r24, r24
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	0e 94 cb 07 	call	0xf96	; 0xf96 <EEPROM_readData>
     772:	18 17       	cp	r17, r24
     774:	09 f0       	breq	.+2      	; 0x778 <userkeypadCheck+0x6e>
     776:	80 c0       	rjmp	.+256    	; 0x878 <__stack+0x19>
				{
					correct++;
     778:	8a 81       	ldd	r24, Y+2	; 0x02
     77a:	8f 5f       	subi	r24, 0xFF	; 255
     77c:	8a 83       	std	Y+2, r24	; 0x02
					if (correct==charCounter)
     77e:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     782:	9a 81       	ldd	r25, Y+2	; 0x02
     784:	98 17       	cp	r25, r24
     786:	09 f0       	breq	.+2      	; 0x78a <userkeypadCheck+0x80>
     788:	78 c0       	rjmp	.+240    	; 0x87a <__stack+0x1b>
					{
						location=i;
     78a:	8c 81       	ldd	r24, Y+4	; 0x04
     78c:	8b 83       	std	Y+3, r24	; 0x03
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	a6 e9       	ldi	r26, 0x96	; 150
     794:	b3 e4       	ldi	r27, 0x43	; 67
     796:	8d 87       	std	Y+13, r24	; 0x0d
     798:	9e 87       	std	Y+14, r25	; 0x0e
     79a:	af 87       	std	Y+15, r26	; 0x0f
     79c:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     79e:	20 e0       	ldi	r18, 0x00	; 0
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	4a e7       	ldi	r20, 0x7A	; 122
     7a4:	55 e4       	ldi	r21, 0x45	; 69
     7a6:	6d 85       	ldd	r22, Y+13	; 0x0d
     7a8:	7e 85       	ldd	r23, Y+14	; 0x0e
     7aa:	8f 85       	ldd	r24, Y+15	; 0x0f
     7ac:	98 89       	ldd	r25, Y+16	; 0x10
     7ae:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     7b2:	dc 01       	movw	r26, r24
     7b4:	cb 01       	movw	r24, r22
     7b6:	89 8b       	std	Y+17, r24	; 0x11
     7b8:	9a 8b       	std	Y+18, r25	; 0x12
     7ba:	ab 8b       	std	Y+19, r26	; 0x13
     7bc:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     7be:	20 e0       	ldi	r18, 0x00	; 0
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	40 e8       	ldi	r20, 0x80	; 128
     7c4:	5f e3       	ldi	r21, 0x3F	; 63
     7c6:	69 89       	ldd	r22, Y+17	; 0x11
     7c8:	7a 89       	ldd	r23, Y+18	; 0x12
     7ca:	8b 89       	ldd	r24, Y+19	; 0x13
     7cc:	9c 89       	ldd	r25, Y+20	; 0x14
     7ce:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     7d2:	88 23       	and	r24, r24
     7d4:	2c f4       	brge	.+10     	; 0x7e0 <userkeypadCheck+0xd6>
		__ticks = 1;
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	9e 8b       	std	Y+22, r25	; 0x16
     7dc:	8d 8b       	std	Y+21, r24	; 0x15
     7de:	3f c0       	rjmp	.+126    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
	else if (__tmp > 65535)
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	3f ef       	ldi	r19, 0xFF	; 255
     7e4:	4f e7       	ldi	r20, 0x7F	; 127
     7e6:	57 e4       	ldi	r21, 0x47	; 71
     7e8:	69 89       	ldd	r22, Y+17	; 0x11
     7ea:	7a 89       	ldd	r23, Y+18	; 0x12
     7ec:	8b 89       	ldd	r24, Y+19	; 0x13
     7ee:	9c 89       	ldd	r25, Y+20	; 0x14
     7f0:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     7f4:	18 16       	cp	r1, r24
     7f6:	4c f5       	brge	.+82     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7f8:	20 e0       	ldi	r18, 0x00	; 0
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	40 e2       	ldi	r20, 0x20	; 32
     7fe:	51 e4       	ldi	r21, 0x41	; 65
     800:	6d 85       	ldd	r22, Y+13	; 0x0d
     802:	7e 85       	ldd	r23, Y+14	; 0x0e
     804:	8f 85       	ldd	r24, Y+15	; 0x0f
     806:	98 89       	ldd	r25, Y+16	; 0x10
     808:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     80c:	dc 01       	movw	r26, r24
     80e:	cb 01       	movw	r24, r22
     810:	bc 01       	movw	r22, r24
     812:	cd 01       	movw	r24, r26
     814:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     818:	dc 01       	movw	r26, r24
     81a:	cb 01       	movw	r24, r22
     81c:	9e 8b       	std	Y+22, r25	; 0x16
     81e:	8d 8b       	std	Y+21, r24	; 0x15
     820:	0f c0       	rjmp	.+30     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     822:	80 e9       	ldi	r24, 0x90	; 144
     824:	91 e0       	ldi	r25, 0x01	; 1
     826:	98 8f       	std	Y+24, r25	; 0x18
     828:	8f 8b       	std	Y+23, r24	; 0x17
     82a:	8f 89       	ldd	r24, Y+23	; 0x17
     82c:	98 8d       	ldd	r25, Y+24	; 0x18
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     832:	98 8f       	std	Y+24, r25	; 0x18
     834:	8f 8b       	std	Y+23, r24	; 0x17
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     836:	8d 89       	ldd	r24, Y+21	; 0x15
     838:	9e 89       	ldd	r25, Y+22	; 0x16
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	9e 8b       	std	Y+22, r25	; 0x16
     83e:	8d 8b       	std	Y+21, r24	; 0x15
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     840:	8d 89       	ldd	r24, Y+21	; 0x15
     842:	9e 89       	ldd	r25, Y+22	; 0x16
     844:	89 2b       	or	r24, r25
     846:	69 f7       	brne	.-38     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     848:	14 c0       	rjmp	.+40     	; 0x872 <__stack+0x13>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     84a:	69 89       	ldd	r22, Y+17	; 0x11
     84c:	7a 89       	ldd	r23, Y+18	; 0x12
     84e:	8b 89       	ldd	r24, Y+19	; 0x13
     850:	9c 89       	ldd	r25, Y+20	; 0x14
     852:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     856:	dc 01       	movw	r26, r24
     858:	cb 01       	movw	r24, r22
     85a:	9e 8b       	std	Y+22, r25	; 0x16
     85c:	8d 8b       	std	Y+21, r24	; 0x15
     85e:	8d 89       	ldd	r24, Y+21	; 0x15
     860:	9e 89       	ldd	r25, Y+22	; 0x16
     862:	9a 8f       	std	Y+26, r25	; 0x1a
     864:	89 8f       	std	Y+25, r24	; 0x19
     866:	89 8d       	ldd	r24, Y+25	; 0x19
     868:	9a 8d       	ldd	r25, Y+26	; 0x1a
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	f1 f7       	brne	.-4      	; 0x86a <__stack+0xb>
     86e:	9a 8f       	std	Y+26, r25	; 0x1a
     870:	89 8f       	std	Y+25, r24	; 0x19
						_delay_ms(300);
						flag=1;
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	89 83       	std	Y+1, r24	; 0x01
						break;
     876:	0d c0       	rjmp	.+26     	; 0x892 <__stack+0x33>
					}
				}
				else
				{
					
					correct=0;
     878:	1a 82       	std	Y+2, r1	; 0x02
	u8 correct=0, location=0;
	for (u8 i=11;i<100;i+=20)
	{
		if(EEPROM_readData(i)!=255)
		{
			for(u8 l=0,j=i; l<charCounter; j++,l++)
     87a:	8e 81       	ldd	r24, Y+6	; 0x06
     87c:	8f 5f       	subi	r24, 0xFF	; 255
     87e:	8e 83       	std	Y+6, r24	; 0x06
     880:	8d 81       	ldd	r24, Y+5	; 0x05
     882:	8f 5f       	subi	r24, 0xFF	; 255
     884:	8d 83       	std	Y+5, r24	; 0x05
     886:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     88a:	9d 81       	ldd	r25, Y+5	; 0x05
     88c:	98 17       	cp	r25, r24
     88e:	08 f4       	brcc	.+2      	; 0x892 <__stack+0x33>
     890:	61 cf       	rjmp	.-318    	; 0x754 <userkeypadCheck+0x4a>
					
					correct=0;
				}
			}
		}
		if(flag==1){break;}
     892:	89 81       	ldd	r24, Y+1	; 0x01
     894:	81 30       	cpi	r24, 0x01	; 1
     896:	41 f0       	breq	.+16     	; 0x8a8 <__stack+0x49>
	u8 pass[10];
	u8 flag=0;
	LCD_writeStr("user=");
	userkeypadInput(user);
	u8 correct=0, location=0;
	for (u8 i=11;i<100;i+=20)
     898:	8c 81       	ldd	r24, Y+4	; 0x04
     89a:	8c 5e       	subi	r24, 0xEC	; 236
     89c:	8c 83       	std	Y+4, r24	; 0x04
     89e:	8c 81       	ldd	r24, Y+4	; 0x04
     8a0:	84 36       	cpi	r24, 0x64	; 100
     8a2:	08 f4       	brcc	.+2      	; 0x8a6 <__stack+0x47>
     8a4:	4b cf       	rjmp	.-362    	; 0x73c <userkeypadCheck+0x32>
     8a6:	01 c0       	rjmp	.+2      	; 0x8aa <__stack+0x4b>
					
					correct=0;
				}
			}
		}
		if(flag==1){break;}
     8a8:	00 00       	nop
	}
	if (location!=0)
     8aa:	8b 81       	ldd	r24, Y+3	; 0x03
     8ac:	88 23       	and	r24, r24
     8ae:	09 f4       	brne	.+2      	; 0x8b2 <__stack+0x53>
     8b0:	b0 c0       	rjmp	.+352    	; 0xa12 <__stack+0x1b3>
	{
		LCD_goto(0,2);
     8b2:	62 e0       	ldi	r22, 0x02	; 2
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <LCD_goto>
		LCD_writeStr("password=");
     8ba:	8a e9       	ldi	r24, 0x9A	; 154
     8bc:	91 e0       	ldi	r25, 0x01	; 1
     8be:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <LCD_writeStr>
		userkeypadInput(pass);
     8c2:	ce 01       	movw	r24, r28
     8c4:	8f 96       	adiw	r24, 0x2f	; 47
     8c6:	0e 94 00 03 	call	0x600	; 0x600 <userkeypadInput>
		location+=10;
     8ca:	8b 81       	ldd	r24, Y+3	; 0x03
     8cc:	86 5f       	subi	r24, 0xF6	; 246
     8ce:	8b 83       	std	Y+3, r24	; 0x03
		correct=0;
     8d0:	1a 82       	std	Y+2, r1	; 0x02
		for(u8 l=0,j=location; l<charCounter; j++,l++)
     8d2:	1f 82       	std	Y+7, r1	; 0x07
     8d4:	8b 81       	ldd	r24, Y+3	; 0x03
     8d6:	88 87       	std	Y+8, r24	; 0x08
     8d8:	96 c0       	rjmp	.+300    	; 0xa06 <__stack+0x1a7>
		{
			if (pass[l]==EEPROM_readData(j))
     8da:	8f 81       	ldd	r24, Y+7	; 0x07
     8dc:	88 2f       	mov	r24, r24
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	9e 01       	movw	r18, r28
     8e2:	21 5d       	subi	r18, 0xD1	; 209
     8e4:	3f 4f       	sbci	r19, 0xFF	; 255
     8e6:	82 0f       	add	r24, r18
     8e8:	93 1f       	adc	r25, r19
     8ea:	fc 01       	movw	r30, r24
     8ec:	10 81       	ld	r17, Z
     8ee:	88 85       	ldd	r24, Y+8	; 0x08
     8f0:	88 2f       	mov	r24, r24
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 cb 07 	call	0xf96	; 0xf96 <EEPROM_readData>
     8f8:	18 17       	cp	r17, r24
     8fa:	09 f0       	breq	.+2      	; 0x8fe <__stack+0x9f>
     8fc:	7d c0       	rjmp	.+250    	; 0x9f8 <__stack+0x199>
			{
				correct++;
     8fe:	8a 81       	ldd	r24, Y+2	; 0x02
     900:	8f 5f       	subi	r24, 0xFF	; 255
     902:	8a 83       	std	Y+2, r24	; 0x02
				if (correct==charCounter)
     904:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     908:	9a 81       	ldd	r25, Y+2	; 0x02
     90a:	98 17       	cp	r25, r24
     90c:	09 f0       	breq	.+2      	; 0x910 <__stack+0xb1>
     90e:	75 c0       	rjmp	.+234    	; 0x9fa <__stack+0x19b>
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	a6 e9       	ldi	r26, 0x96	; 150
     916:	b3 e4       	ldi	r27, 0x43	; 67
     918:	89 87       	std	Y+9, r24	; 0x09
     91a:	9a 87       	std	Y+10, r25	; 0x0a
     91c:	ab 87       	std	Y+11, r26	; 0x0b
     91e:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	4a e7       	ldi	r20, 0x7A	; 122
     926:	55 e4       	ldi	r21, 0x45	; 69
     928:	69 85       	ldd	r22, Y+9	; 0x09
     92a:	7a 85       	ldd	r23, Y+10	; 0x0a
     92c:	8b 85       	ldd	r24, Y+11	; 0x0b
     92e:	9c 85       	ldd	r25, Y+12	; 0x0c
     930:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     934:	dc 01       	movw	r26, r24
     936:	cb 01       	movw	r24, r22
     938:	8b 8f       	std	Y+27, r24	; 0x1b
     93a:	9c 8f       	std	Y+28, r25	; 0x1c
     93c:	ad 8f       	std	Y+29, r26	; 0x1d
     93e:	be 8f       	std	Y+30, r27	; 0x1e
	if (__tmp < 1.0)
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e8       	ldi	r20, 0x80	; 128
     946:	5f e3       	ldi	r21, 0x3F	; 63
     948:	6b 8d       	ldd	r22, Y+27	; 0x1b
     94a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     94c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     94e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     950:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     954:	88 23       	and	r24, r24
     956:	2c f4       	brge	.+10     	; 0x962 <__stack+0x103>
		__ticks = 1;
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	98 a3       	std	Y+32, r25	; 0x20
     95e:	8f 8f       	std	Y+31, r24	; 0x1f
     960:	3f c0       	rjmp	.+126    	; 0x9e0 <__stack+0x181>
	else if (__tmp > 65535)
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	3f ef       	ldi	r19, 0xFF	; 255
     966:	4f e7       	ldi	r20, 0x7F	; 127
     968:	57 e4       	ldi	r21, 0x47	; 71
     96a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     96c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     96e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     970:	9e 8d       	ldd	r25, Y+30	; 0x1e
     972:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     976:	18 16       	cp	r1, r24
     978:	4c f5       	brge	.+82     	; 0x9cc <__stack+0x16d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e2       	ldi	r20, 0x20	; 32
     980:	51 e4       	ldi	r21, 0x41	; 65
     982:	69 85       	ldd	r22, Y+9	; 0x09
     984:	7a 85       	ldd	r23, Y+10	; 0x0a
     986:	8b 85       	ldd	r24, Y+11	; 0x0b
     988:	9c 85       	ldd	r25, Y+12	; 0x0c
     98a:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     98e:	dc 01       	movw	r26, r24
     990:	cb 01       	movw	r24, r22
     992:	bc 01       	movw	r22, r24
     994:	cd 01       	movw	r24, r26
     996:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     99a:	dc 01       	movw	r26, r24
     99c:	cb 01       	movw	r24, r22
     99e:	98 a3       	std	Y+32, r25	; 0x20
     9a0:	8f 8f       	std	Y+31, r24	; 0x1f
     9a2:	0f c0       	rjmp	.+30     	; 0x9c2 <__stack+0x163>
     9a4:	80 e9       	ldi	r24, 0x90	; 144
     9a6:	91 e0       	ldi	r25, 0x01	; 1
     9a8:	9a a3       	std	Y+34, r25	; 0x22
     9aa:	89 a3       	std	Y+33, r24	; 0x21
     9ac:	89 a1       	ldd	r24, Y+33	; 0x21
     9ae:	9a a1       	ldd	r25, Y+34	; 0x22
     9b0:	01 97       	sbiw	r24, 0x01	; 1
     9b2:	f1 f7       	brne	.-4      	; 0x9b0 <__stack+0x151>
     9b4:	9a a3       	std	Y+34, r25	; 0x22
     9b6:	89 a3       	std	Y+33, r24	; 0x21
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9ba:	98 a1       	ldd	r25, Y+32	; 0x20
     9bc:	01 97       	sbiw	r24, 0x01	; 1
     9be:	98 a3       	std	Y+32, r25	; 0x20
     9c0:	8f 8f       	std	Y+31, r24	; 0x1f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9c4:	98 a1       	ldd	r25, Y+32	; 0x20
     9c6:	89 2b       	or	r24, r25
     9c8:	69 f7       	brne	.-38     	; 0x9a4 <__stack+0x145>
     9ca:	14 c0       	rjmp	.+40     	; 0x9f4 <__stack+0x195>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9cc:	6b 8d       	ldd	r22, Y+27	; 0x1b
     9ce:	7c 8d       	ldd	r23, Y+28	; 0x1c
     9d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9d2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9d4:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     9d8:	dc 01       	movw	r26, r24
     9da:	cb 01       	movw	r24, r22
     9dc:	98 a3       	std	Y+32, r25	; 0x20
     9de:	8f 8f       	std	Y+31, r24	; 0x1f
     9e0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9e2:	98 a1       	ldd	r25, Y+32	; 0x20
     9e4:	9c a3       	std	Y+36, r25	; 0x24
     9e6:	8b a3       	std	Y+35, r24	; 0x23
     9e8:	8b a1       	ldd	r24, Y+35	; 0x23
     9ea:	9c a1       	ldd	r25, Y+36	; 0x24
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	f1 f7       	brne	.-4      	; 0x9ec <__stack+0x18d>
     9f0:	9c a3       	std	Y+36, r25	; 0x24
     9f2:	8b a3       	std	Y+35, r24	; 0x23
				{
					_delay_ms(300);
					return 1;
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	0e c0       	rjmp	.+28     	; 0xa14 <__stack+0x1b5>
				}
			}
			else{correct=0;}
     9f8:	1a 82       	std	Y+2, r1	; 0x02
		LCD_goto(0,2);
		LCD_writeStr("password=");
		userkeypadInput(pass);
		location+=10;
		correct=0;
		for(u8 l=0,j=location; l<charCounter; j++,l++)
     9fa:	88 85       	ldd	r24, Y+8	; 0x08
     9fc:	8f 5f       	subi	r24, 0xFF	; 255
     9fe:	88 87       	std	Y+8, r24	; 0x08
     a00:	8f 81       	ldd	r24, Y+7	; 0x07
     a02:	8f 5f       	subi	r24, 0xFF	; 255
     a04:	8f 83       	std	Y+7, r24	; 0x07
     a06:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     a0a:	9f 81       	ldd	r25, Y+7	; 0x07
     a0c:	98 17       	cp	r25, r24
     a0e:	08 f4       	brcc	.+2      	; 0xa12 <__stack+0x1b3>
     a10:	64 cf       	rjmp	.-312    	; 0x8da <__stack+0x7b>
				}
			}
			else{correct=0;}
		}
	}
	return 0;
     a12:	80 e0       	ldi	r24, 0x00	; 0
}
     a14:	e8 96       	adiw	r28, 0x38	; 56
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	f8 94       	cli
     a1a:	de bf       	out	0x3e, r29	; 62
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	cd bf       	out	0x3d, r28	; 61
     a20:	df 91       	pop	r29
     a22:	cf 91       	pop	r28
     a24:	1f 91       	pop	r17
     a26:	08 95       	ret

00000a28 <userCheck>:
u8 userCheck()
{
     a28:	1f 93       	push	r17
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	cd b7       	in	r28, 0x3d	; 61
     a30:	de b7       	in	r29, 0x3e	; 62
     a32:	6b 97       	sbiw	r28, 0x1b	; 27
     a34:	0f b6       	in	r0, 0x3f	; 63
     a36:	f8 94       	cli
     a38:	de bf       	out	0x3e, r29	; 62
     a3a:	0f be       	out	0x3f, r0	; 63
     a3c:	cd bf       	out	0x3d, r28	; 61
		u8 user[10];
		u8 pass[10];
		UART_sendString("user=");
     a3e:	84 e9       	ldi	r24, 0x94	; 148
     a40:	91 e0       	ldi	r25, 0x01	; 1
     a42:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
		userInput(user);
     a46:	ce 01       	movw	r24, r28
     a48:	08 96       	adiw	r24, 0x08	; 8
     a4a:	0e 94 45 03 	call	0x68a	; 0x68a <userInput>
		u8 correct;
		correct=0;
     a4e:	19 82       	std	Y+1, r1	; 0x01
		u8 location;
		location=0;
     a50:	1a 82       	std	Y+2, r1	; 0x02
		    for (u8 i=101;i<200;i+=20)
     a52:	85 e6       	ldi	r24, 0x65	; 101
     a54:	8b 83       	std	Y+3, r24	; 0x03
     a56:	34 c0       	rjmp	.+104    	; 0xac0 <userCheck+0x98>
		    {
			    if(EEPROM_readData(i)!=255)
     a58:	8b 81       	ldd	r24, Y+3	; 0x03
     a5a:	88 2f       	mov	r24, r24
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 cb 07 	call	0xf96	; 0xf96 <EEPROM_readData>
     a62:	8f 3f       	cpi	r24, 0xFF	; 255
     a64:	51 f1       	breq	.+84     	; 0xaba <userCheck+0x92>
			    {
				    for(u8 l=0,j=i; l<10; j++,l++)
     a66:	1c 82       	std	Y+4, r1	; 0x04
     a68:	8b 81       	ldd	r24, Y+3	; 0x03
     a6a:	8d 83       	std	Y+5, r24	; 0x05
     a6c:	23 c0       	rjmp	.+70     	; 0xab4 <userCheck+0x8c>
				    {
					    if (user[l]==EEPROM_readData(j))
     a6e:	8c 81       	ldd	r24, Y+4	; 0x04
     a70:	88 2f       	mov	r24, r24
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	9e 01       	movw	r18, r28
     a76:	28 5f       	subi	r18, 0xF8	; 248
     a78:	3f 4f       	sbci	r19, 0xFF	; 255
     a7a:	82 0f       	add	r24, r18
     a7c:	93 1f       	adc	r25, r19
     a7e:	fc 01       	movw	r30, r24
     a80:	10 81       	ld	r17, Z
     a82:	8d 81       	ldd	r24, Y+5	; 0x05
     a84:	88 2f       	mov	r24, r24
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	0e 94 cb 07 	call	0xf96	; 0xf96 <EEPROM_readData>
     a8c:	18 17       	cp	r17, r24
     a8e:	59 f4       	brne	.+22     	; 0xaa6 <userCheck+0x7e>
					    {
						    correct++;
     a90:	89 81       	ldd	r24, Y+1	; 0x01
     a92:	8f 5f       	subi	r24, 0xFF	; 255
     a94:	89 83       	std	Y+1, r24	; 0x01
						    if (correct==charCounter)
     a96:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     a9a:	99 81       	ldd	r25, Y+1	; 0x01
     a9c:	98 17       	cp	r25, r24
     a9e:	21 f4       	brne	.+8      	; 0xaa8 <userCheck+0x80>
						    {
							    location=i;
     aa0:	8b 81       	ldd	r24, Y+3	; 0x03
     aa2:	8a 83       	std	Y+2, r24	; 0x02
							    break;
     aa4:	0a c0       	rjmp	.+20     	; 0xaba <userCheck+0x92>
						    }
					    }
					    else
					    {
						    correct=0;
     aa6:	19 82       	std	Y+1, r1	; 0x01
		location=0;
		    for (u8 i=101;i<200;i+=20)
		    {
			    if(EEPROM_readData(i)!=255)
			    {
				    for(u8 l=0,j=i; l<10; j++,l++)
     aa8:	8d 81       	ldd	r24, Y+5	; 0x05
     aaa:	8f 5f       	subi	r24, 0xFF	; 255
     aac:	8d 83       	std	Y+5, r24	; 0x05
     aae:	8c 81       	ldd	r24, Y+4	; 0x04
     ab0:	8f 5f       	subi	r24, 0xFF	; 255
     ab2:	8c 83       	std	Y+4, r24	; 0x04
     ab4:	8c 81       	ldd	r24, Y+4	; 0x04
     ab6:	8a 30       	cpi	r24, 0x0A	; 10
     ab8:	d0 f2       	brcs	.-76     	; 0xa6e <userCheck+0x46>
		userInput(user);
		u8 correct;
		correct=0;
		u8 location;
		location=0;
		    for (u8 i=101;i<200;i+=20)
     aba:	8b 81       	ldd	r24, Y+3	; 0x03
     abc:	8c 5e       	subi	r24, 0xEC	; 236
     abe:	8b 83       	std	Y+3, r24	; 0x03
     ac0:	8b 81       	ldd	r24, Y+3	; 0x03
     ac2:	88 3c       	cpi	r24, 0xC8	; 200
     ac4:	48 f2       	brcs	.-110    	; 0xa58 <userCheck+0x30>
						    correct=0;
					    }
				    }
			    }
		    }
		if (location!=0)
     ac6:	8a 81       	ldd	r24, Y+2	; 0x02
     ac8:	88 23       	and	r24, r24
     aca:	a1 f1       	breq	.+104    	; 0xb34 <userCheck+0x10c>
		{
			UART_sendString("password=");
     acc:	8a e9       	ldi	r24, 0x9A	; 154
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	0e 94 4f 14 	call	0x289e	; 0x289e <UART_sendString>
			userInput(pass);
     ad4:	ce 01       	movw	r24, r28
     ad6:	42 96       	adiw	r24, 0x12	; 18
     ad8:	0e 94 45 03 	call	0x68a	; 0x68a <userInput>
			location+=10;
     adc:	8a 81       	ldd	r24, Y+2	; 0x02
     ade:	86 5f       	subi	r24, 0xF6	; 246
     ae0:	8a 83       	std	Y+2, r24	; 0x02
			correct=0;
     ae2:	19 82       	std	Y+1, r1	; 0x01
			for(u8 l=0,j=location; l<10; j++,l++)
     ae4:	1e 82       	std	Y+6, r1	; 0x06
     ae6:	8a 81       	ldd	r24, Y+2	; 0x02
     ae8:	8f 83       	std	Y+7, r24	; 0x07
     aea:	21 c0       	rjmp	.+66     	; 0xb2e <userCheck+0x106>
			{
				if (pass[l]==EEPROM_readData(j))
     aec:	8e 81       	ldd	r24, Y+6	; 0x06
     aee:	88 2f       	mov	r24, r24
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	9e 01       	movw	r18, r28
     af4:	2e 5e       	subi	r18, 0xEE	; 238
     af6:	3f 4f       	sbci	r19, 0xFF	; 255
     af8:	82 0f       	add	r24, r18
     afa:	93 1f       	adc	r25, r19
     afc:	fc 01       	movw	r30, r24
     afe:	10 81       	ld	r17, Z
     b00:	8f 81       	ldd	r24, Y+7	; 0x07
     b02:	88 2f       	mov	r24, r24
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	0e 94 cb 07 	call	0xf96	; 0xf96 <EEPROM_readData>
     b0a:	18 17       	cp	r17, r24
     b0c:	51 f4       	brne	.+20     	; 0xb22 <userCheck+0xfa>
				{
					correct++;
     b0e:	89 81       	ldd	r24, Y+1	; 0x01
     b10:	8f 5f       	subi	r24, 0xFF	; 255
     b12:	89 83       	std	Y+1, r24	; 0x01
					if (correct==charCounter)
     b14:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <charCounter>
     b18:	99 81       	ldd	r25, Y+1	; 0x01
     b1a:	98 17       	cp	r25, r24
     b1c:	11 f4       	brne	.+4      	; 0xb22 <userCheck+0xfa>
					{
						return 1;
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <userCheck+0x10e>
		{
			UART_sendString("password=");
			userInput(pass);
			location+=10;
			correct=0;
			for(u8 l=0,j=location; l<10; j++,l++)
     b22:	8f 81       	ldd	r24, Y+7	; 0x07
     b24:	8f 5f       	subi	r24, 0xFF	; 255
     b26:	8f 83       	std	Y+7, r24	; 0x07
     b28:	8e 81       	ldd	r24, Y+6	; 0x06
     b2a:	8f 5f       	subi	r24, 0xFF	; 255
     b2c:	8e 83       	std	Y+6, r24	; 0x06
     b2e:	8e 81       	ldd	r24, Y+6	; 0x06
     b30:	8a 30       	cpi	r24, 0x0A	; 10
     b32:	e0 f2       	brcs	.-72     	; 0xaec <userCheck+0xc4>
						return 1;
					}
				}
			}
		}
			return 0;
     b34:	80 e0       	ldi	r24, 0x00	; 0
}
     b36:	6b 96       	adiw	r28, 0x1b	; 27
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	f8 94       	cli
     b3c:	de bf       	out	0x3e, r29	; 62
     b3e:	0f be       	out	0x3f, r0	; 63
     b40:	cd bf       	out	0x3d, r28	; 61
     b42:	df 91       	pop	r29
     b44:	cf 91       	pop	r28
     b46:	1f 91       	pop	r17
     b48:	08 95       	ret

00000b4a <ext_fun>:

void ext_fun()
{
     b4a:	cf 93       	push	r28
     b4c:	df 93       	push	r29
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	a9 97       	sbiw	r28, 0x29	; 41
     b54:	0f b6       	in	r0, 0x3f	; 63
     b56:	f8 94       	cli
     b58:	de bf       	out	0x3e, r29	; 62
     b5a:	0f be       	out	0x3f, r0	; 63
     b5c:	cd bf       	out	0x3d, r28	; 61
	DIO_setPinDir(DIO_PINA2,DIO_OUTPUT);
     b5e:	61 e0       	ldi	r22, 0x01	; 1
     b60:	82 e0       	ldi	r24, 0x02	; 2
     b62:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
	u8 incorrect,flag=1,flag1=1;
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	89 83       	std	Y+1, r24	; 0x01
     b6a:	81 e0       	ldi	r24, 0x01	; 1
     b6c:	8a 83       	std	Y+2, r24	; 0x02
	while (flag==1)
     b6e:	05 c2       	rjmp	.+1034   	; 0xf7a <ext_fun+0x430>
	{
		u8 userchoice[10];
		incorrect=0;
     b70:	1b 82       	std	Y+3, r1	; 0x03
		if (incorrect!=3)
     b72:	8b 81       	ldd	r24, Y+3	; 0x03
     b74:	83 30       	cpi	r24, 0x03	; 3
     b76:	09 f4       	brne	.+2      	; 0xb7a <ext_fun+0x30>
     b78:	85 c1       	rjmp	.+778    	; 0xe84 <ext_fun+0x33a>
		{
			if (userkeypadCheck())
     b7a:	0e 94 85 03 	call	0x70a	; 0x70a <userkeypadCheck>
     b7e:	88 23       	and	r24, r24
     b80:	09 f4       	brne	.+2      	; 0xb84 <ext_fun+0x3a>
     b82:	71 c1       	rjmp	.+738    	; 0xe66 <ext_fun+0x31c>
			{
				incorrect=0;
     b84:	1b 82       	std	Y+3, r1	; 0x03
				LCD_clearDis();
     b86:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
				LCD_writeStr("Welcome");
     b8a:	84 ea       	ldi	r24, 0xA4	; 164
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <LCD_writeStr>
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	aa ef       	ldi	r26, 0xFA	; 250
     b98:	b3 e4       	ldi	r27, 0x43	; 67
     b9a:	88 87       	std	Y+8, r24	; 0x08
     b9c:	99 87       	std	Y+9, r25	; 0x09
     b9e:	aa 87       	std	Y+10, r26	; 0x0a
     ba0:	bb 87       	std	Y+11, r27	; 0x0b

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	4a e7       	ldi	r20, 0x7A	; 122
     ba8:	55 e4       	ldi	r21, 0x45	; 69
     baa:	68 85       	ldd	r22, Y+8	; 0x08
     bac:	79 85       	ldd	r23, Y+9	; 0x09
     bae:	8a 85       	ldd	r24, Y+10	; 0x0a
     bb0:	9b 85       	ldd	r25, Y+11	; 0x0b
     bb2:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     bb6:	dc 01       	movw	r26, r24
     bb8:	cb 01       	movw	r24, r22
     bba:	8c 87       	std	Y+12, r24	; 0x0c
     bbc:	9d 87       	std	Y+13, r25	; 0x0d
     bbe:	ae 87       	std	Y+14, r26	; 0x0e
     bc0:	bf 87       	std	Y+15, r27	; 0x0f
	if (__tmp < 1.0)
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	40 e8       	ldi	r20, 0x80	; 128
     bc8:	5f e3       	ldi	r21, 0x3F	; 63
     bca:	6c 85       	ldd	r22, Y+12	; 0x0c
     bcc:	7d 85       	ldd	r23, Y+13	; 0x0d
     bce:	8e 85       	ldd	r24, Y+14	; 0x0e
     bd0:	9f 85       	ldd	r25, Y+15	; 0x0f
     bd2:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     bd6:	88 23       	and	r24, r24
     bd8:	2c f4       	brge	.+10     	; 0xbe4 <ext_fun+0x9a>
		__ticks = 1;
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	99 8b       	std	Y+17, r25	; 0x11
     be0:	88 8b       	std	Y+16, r24	; 0x10
     be2:	3f c0       	rjmp	.+126    	; 0xc62 <ext_fun+0x118>
	else if (__tmp > 65535)
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	3f ef       	ldi	r19, 0xFF	; 255
     be8:	4f e7       	ldi	r20, 0x7F	; 127
     bea:	57 e4       	ldi	r21, 0x47	; 71
     bec:	6c 85       	ldd	r22, Y+12	; 0x0c
     bee:	7d 85       	ldd	r23, Y+13	; 0x0d
     bf0:	8e 85       	ldd	r24, Y+14	; 0x0e
     bf2:	9f 85       	ldd	r25, Y+15	; 0x0f
     bf4:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     bf8:	18 16       	cp	r1, r24
     bfa:	4c f5       	brge	.+82     	; 0xc4e <ext_fun+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bfc:	20 e0       	ldi	r18, 0x00	; 0
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	40 e2       	ldi	r20, 0x20	; 32
     c02:	51 e4       	ldi	r21, 0x41	; 65
     c04:	68 85       	ldd	r22, Y+8	; 0x08
     c06:	79 85       	ldd	r23, Y+9	; 0x09
     c08:	8a 85       	ldd	r24, Y+10	; 0x0a
     c0a:	9b 85       	ldd	r25, Y+11	; 0x0b
     c0c:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     c10:	dc 01       	movw	r26, r24
     c12:	cb 01       	movw	r24, r22
     c14:	bc 01       	movw	r22, r24
     c16:	cd 01       	movw	r24, r26
     c18:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     c1c:	dc 01       	movw	r26, r24
     c1e:	cb 01       	movw	r24, r22
     c20:	99 8b       	std	Y+17, r25	; 0x11
     c22:	88 8b       	std	Y+16, r24	; 0x10
     c24:	0f c0       	rjmp	.+30     	; 0xc44 <ext_fun+0xfa>
     c26:	80 e9       	ldi	r24, 0x90	; 144
     c28:	91 e0       	ldi	r25, 0x01	; 1
     c2a:	9b 8b       	std	Y+19, r25	; 0x13
     c2c:	8a 8b       	std	Y+18, r24	; 0x12
     c2e:	8a 89       	ldd	r24, Y+18	; 0x12
     c30:	9b 89       	ldd	r25, Y+19	; 0x13
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <ext_fun+0xe8>
     c36:	9b 8b       	std	Y+19, r25	; 0x13
     c38:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c3a:	88 89       	ldd	r24, Y+16	; 0x10
     c3c:	99 89       	ldd	r25, Y+17	; 0x11
     c3e:	01 97       	sbiw	r24, 0x01	; 1
     c40:	99 8b       	std	Y+17, r25	; 0x11
     c42:	88 8b       	std	Y+16, r24	; 0x10
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c44:	88 89       	ldd	r24, Y+16	; 0x10
     c46:	99 89       	ldd	r25, Y+17	; 0x11
     c48:	89 2b       	or	r24, r25
     c4a:	69 f7       	brne	.-38     	; 0xc26 <ext_fun+0xdc>
     c4c:	14 c0       	rjmp	.+40     	; 0xc76 <ext_fun+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c4e:	6c 85       	ldd	r22, Y+12	; 0x0c
     c50:	7d 85       	ldd	r23, Y+13	; 0x0d
     c52:	8e 85       	ldd	r24, Y+14	; 0x0e
     c54:	9f 85       	ldd	r25, Y+15	; 0x0f
     c56:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     c5a:	dc 01       	movw	r26, r24
     c5c:	cb 01       	movw	r24, r22
     c5e:	99 8b       	std	Y+17, r25	; 0x11
     c60:	88 8b       	std	Y+16, r24	; 0x10
     c62:	88 89       	ldd	r24, Y+16	; 0x10
     c64:	99 89       	ldd	r25, Y+17	; 0x11
     c66:	9d 8b       	std	Y+21, r25	; 0x15
     c68:	8c 8b       	std	Y+20, r24	; 0x14
     c6a:	8c 89       	ldd	r24, Y+20	; 0x14
     c6c:	9d 89       	ldd	r25, Y+21	; 0x15
     c6e:	01 97       	sbiw	r24, 0x01	; 1
     c70:	f1 f7       	brne	.-4      	; 0xc6e <ext_fun+0x124>
     c72:	9d 8b       	std	Y+21, r25	; 0x15
     c74:	8c 8b       	std	Y+20, r24	; 0x14
				_delay_ms(500);
				LCD_clearDis();
     c76:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
				
				while(flag1==1)
     c7a:	f0 c0       	rjmp	.+480    	; 0xe5c <ext_fun+0x312>
				{
					//LCD_writeStr("p f 1to6 to led contro");
					userkeypadInput(userchoice);
     c7c:	ce 01       	movw	r24, r28
     c7e:	80 96       	adiw	r24, 0x20	; 32
     c80:	0e 94 00 03 	call	0x600	; 0x600 <userkeypadInput>
					if((!(strcmp(userchoice,"1-1"))))
     c84:	ce 01       	movw	r24, r28
     c86:	80 96       	adiw	r24, 0x20	; 32
     c88:	6c ea       	ldi	r22, 0xAC	; 172
     c8a:	71 e0       	ldi	r23, 0x01	; 1
     c8c:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     c90:	89 2b       	or	r24, r25
     c92:	31 f4       	brne	.+12     	; 0xca0 <ext_fun+0x156>
					{
						SPI_Write('g');
     c94:	87 e6       	ldi	r24, 0x67	; 103
     c96:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     c9a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     c9e:	de c0       	rjmp	.+444    	; 0xe5c <ext_fun+0x312>
						
					}
					else if((!(strcmp(userchoice,"2-1"))))
     ca0:	ce 01       	movw	r24, r28
     ca2:	80 96       	adiw	r24, 0x20	; 32
     ca4:	60 eb       	ldi	r22, 0xB0	; 176
     ca6:	71 e0       	ldi	r23, 0x01	; 1
     ca8:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     cac:	89 2b       	or	r24, r25
     cae:	31 f4       	brne	.+12     	; 0xcbc <ext_fun+0x172>
					{
						SPI_Write('h');
     cb0:	88 e6       	ldi	r24, 0x68	; 104
     cb2:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     cb6:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     cba:	d0 c0       	rjmp	.+416    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"3-1"))))
     cbc:	ce 01       	movw	r24, r28
     cbe:	80 96       	adiw	r24, 0x20	; 32
     cc0:	64 eb       	ldi	r22, 0xB4	; 180
     cc2:	71 e0       	ldi	r23, 0x01	; 1
     cc4:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     cc8:	89 2b       	or	r24, r25
     cca:	31 f4       	brne	.+12     	; 0xcd8 <ext_fun+0x18e>
					{
						SPI_Write('i');
     ccc:	89 e6       	ldi	r24, 0x69	; 105
     cce:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     cd2:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     cd6:	c2 c0       	rjmp	.+388    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"4-1"))))
     cd8:	ce 01       	movw	r24, r28
     cda:	80 96       	adiw	r24, 0x20	; 32
     cdc:	68 eb       	ldi	r22, 0xB8	; 184
     cde:	71 e0       	ldi	r23, 0x01	; 1
     ce0:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     ce4:	89 2b       	or	r24, r25
     ce6:	31 f4       	brne	.+12     	; 0xcf4 <ext_fun+0x1aa>
					{
						SPI_Write('j');
     ce8:	8a e6       	ldi	r24, 0x6A	; 106
     cea:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     cee:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     cf2:	b4 c0       	rjmp	.+360    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"5-1"))))
     cf4:	ce 01       	movw	r24, r28
     cf6:	80 96       	adiw	r24, 0x20	; 32
     cf8:	6c eb       	ldi	r22, 0xBC	; 188
     cfa:	71 e0       	ldi	r23, 0x01	; 1
     cfc:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     d00:	89 2b       	or	r24, r25
     d02:	31 f4       	brne	.+12     	; 0xd10 <ext_fun+0x1c6>
					{
						SPI_Write('k');
     d04:	8b e6       	ldi	r24, 0x6B	; 107
     d06:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     d0a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     d0e:	a6 c0       	rjmp	.+332    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"1-0"))))
     d10:	ce 01       	movw	r24, r28
     d12:	80 96       	adiw	r24, 0x20	; 32
     d14:	60 ec       	ldi	r22, 0xC0	; 192
     d16:	71 e0       	ldi	r23, 0x01	; 1
     d18:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     d1c:	89 2b       	or	r24, r25
     d1e:	31 f4       	brne	.+12     	; 0xd2c <ext_fun+0x1e2>
					{
						SPI_Write('l');
     d20:	8c e6       	ldi	r24, 0x6C	; 108
     d22:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     d26:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     d2a:	98 c0       	rjmp	.+304    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"2-0"))))
     d2c:	ce 01       	movw	r24, r28
     d2e:	80 96       	adiw	r24, 0x20	; 32
     d30:	64 ec       	ldi	r22, 0xC4	; 196
     d32:	71 e0       	ldi	r23, 0x01	; 1
     d34:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     d38:	89 2b       	or	r24, r25
     d3a:	31 f4       	brne	.+12     	; 0xd48 <ext_fun+0x1fe>
					{
						SPI_Write('m');
     d3c:	8d e6       	ldi	r24, 0x6D	; 109
     d3e:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     d42:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     d46:	8a c0       	rjmp	.+276    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"3-0"))))
     d48:	ce 01       	movw	r24, r28
     d4a:	80 96       	adiw	r24, 0x20	; 32
     d4c:	68 ec       	ldi	r22, 0xC8	; 200
     d4e:	71 e0       	ldi	r23, 0x01	; 1
     d50:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     d54:	89 2b       	or	r24, r25
     d56:	31 f4       	brne	.+12     	; 0xd64 <ext_fun+0x21a>
					{
						SPI_Write('n');
     d58:	8e e6       	ldi	r24, 0x6E	; 110
     d5a:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     d5e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     d62:	7c c0       	rjmp	.+248    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"4-0"))))
     d64:	ce 01       	movw	r24, r28
     d66:	80 96       	adiw	r24, 0x20	; 32
     d68:	6c ec       	ldi	r22, 0xCC	; 204
     d6a:	71 e0       	ldi	r23, 0x01	; 1
     d6c:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     d70:	89 2b       	or	r24, r25
     d72:	31 f4       	brne	.+12     	; 0xd80 <ext_fun+0x236>
					{
						SPI_Write('o');
     d74:	8f e6       	ldi	r24, 0x6F	; 111
     d76:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     d7a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     d7e:	6e c0       	rjmp	.+220    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"5-0"))))
     d80:	ce 01       	movw	r24, r28
     d82:	80 96       	adiw	r24, 0x20	; 32
     d84:	60 ed       	ldi	r22, 0xD0	; 208
     d86:	71 e0       	ldi	r23, 0x01	; 1
     d88:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     d8c:	89 2b       	or	r24, r25
     d8e:	31 f4       	brne	.+12     	; 0xd9c <ext_fun+0x252>
					{
						SPI_Write('p');
     d90:	80 e7       	ldi	r24, 0x70	; 112
     d92:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     d96:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     d9a:	60 c0       	rjmp	.+192    	; 0xe5c <ext_fun+0x312>
					}
					
					else if((!(strcmp(userchoice,"6-0"))))
     d9c:	ce 01       	movw	r24, r28
     d9e:	80 96       	adiw	r24, 0x20	; 32
     da0:	64 ed       	ldi	r22, 0xD4	; 212
     da2:	71 e0       	ldi	r23, 0x01	; 1
     da4:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     da8:	89 2b       	or	r24, r25
     daa:	31 f4       	brne	.+12     	; 0xdb8 <ext_fun+0x26e>
					{
						SPI_Write('a');
     dac:	81 e6       	ldi	r24, 0x61	; 97
     dae:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     db2:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     db6:	52 c0       	rjmp	.+164    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"6-1"))))
     db8:	ce 01       	movw	r24, r28
     dba:	80 96       	adiw	r24, 0x20	; 32
     dbc:	68 ed       	ldi	r22, 0xD8	; 216
     dbe:	71 e0       	ldi	r23, 0x01	; 1
     dc0:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     dc4:	89 2b       	or	r24, r25
     dc6:	31 f4       	brne	.+12     	; 0xdd4 <ext_fun+0x28a>
					{
						SPI_Write('b');
     dc8:	82 e6       	ldi	r24, 0x62	; 98
     dca:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     dce:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     dd2:	44 c0       	rjmp	.+136    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"6-3"))))
     dd4:	ce 01       	movw	r24, r28
     dd6:	80 96       	adiw	r24, 0x20	; 32
     dd8:	6c ed       	ldi	r22, 0xDC	; 220
     dda:	71 e0       	ldi	r23, 0x01	; 1
     ddc:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     de0:	89 2b       	or	r24, r25
     de2:	31 f4       	brne	.+12     	; 0xdf0 <ext_fun+0x2a6>
					{
						SPI_Write('d');
     de4:	84 e6       	ldi	r24, 0x64	; 100
     de6:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     dea:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     dee:	36 c0       	rjmp	.+108    	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"6-4"))))
     df0:	ce 01       	movw	r24, r28
     df2:	80 96       	adiw	r24, 0x20	; 32
     df4:	60 ee       	ldi	r22, 0xE0	; 224
     df6:	71 e0       	ldi	r23, 0x01	; 1
     df8:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     dfc:	89 2b       	or	r24, r25
     dfe:	31 f4       	brne	.+12     	; 0xe0c <ext_fun+0x2c2>
					{
						SPI_Write('e');
     e00:	85 e6       	ldi	r24, 0x65	; 101
     e02:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     e06:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     e0a:	28 c0       	rjmp	.+80     	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"6-5"))))
     e0c:	ce 01       	movw	r24, r28
     e0e:	80 96       	adiw	r24, 0x20	; 32
     e10:	64 ee       	ldi	r22, 0xE4	; 228
     e12:	71 e0       	ldi	r23, 0x01	; 1
     e14:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     e18:	89 2b       	or	r24, r25
     e1a:	31 f4       	brne	.+12     	; 0xe28 <ext_fun+0x2de>
					{
						SPI_Write('f');
     e1c:	86 e6       	ldi	r24, 0x66	; 102
     e1e:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     e22:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     e26:	1a c0       	rjmp	.+52     	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"6-2"))))
     e28:	ce 01       	movw	r24, r28
     e2a:	80 96       	adiw	r24, 0x20	; 32
     e2c:	68 ee       	ldi	r22, 0xE8	; 232
     e2e:	71 e0       	ldi	r23, 0x01	; 1
     e30:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     e34:	89 2b       	or	r24, r25
     e36:	31 f4       	brne	.+12     	; 0xe44 <ext_fun+0x2fa>
					{
						SPI_Write('c');
     e38:	83 e6       	ldi	r24, 0x63	; 99
     e3a:	0e 94 8e 12 	call	0x251c	; 0x251c <SPI_Write>
						LCD_clearDis();
     e3e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
     e42:	0c c0       	rjmp	.+24     	; 0xe5c <ext_fun+0x312>
					}
					else if((!(strcmp(userchoice,"0"))))
     e44:	ce 01       	movw	r24, r28
     e46:	80 96       	adiw	r24, 0x20	; 32
     e48:	6c ee       	ldi	r22, 0xEC	; 236
     e4a:	71 e0       	ldi	r23, 0x01	; 1
     e4c:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strcmp>
     e50:	89 2b       	or	r24, r25
     e52:	21 f4       	brne	.+8      	; 0xe5c <ext_fun+0x312>
					{
						flag=0;
     e54:	19 82       	std	Y+1, r1	; 0x01
						flag1=0;
     e56:	1a 82       	std	Y+2, r1	; 0x02
						LCD_clearDis();
     e58:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
				LCD_clearDis();
				LCD_writeStr("Welcome");
				_delay_ms(500);
				LCD_clearDis();
				
				while(flag1==1)
     e5c:	8a 81       	ldd	r24, Y+2	; 0x02
     e5e:	81 30       	cpi	r24, 0x01	; 1
     e60:	09 f4       	brne	.+2      	; 0xe64 <ext_fun+0x31a>
     e62:	0c cf       	rjmp	.-488    	; 0xc7c <ext_fun+0x132>
     e64:	8a c0       	rjmp	.+276    	; 0xf7a <ext_fun+0x430>
					}
				}


			}
			else if(!userkeypadCheck())
     e66:	0e 94 85 03 	call	0x70a	; 0x70a <userkeypadCheck>
     e6a:	88 23       	and	r24, r24
     e6c:	09 f0       	breq	.+2      	; 0xe70 <ext_fun+0x326>
     e6e:	85 c0       	rjmp	.+266    	; 0xf7a <ext_fun+0x430>
			{
				LCD_clearDis();
     e70:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_clearDis>
				LCD_writeStr("error");
     e74:	8e ee       	ldi	r24, 0xEE	; 238
     e76:	91 e0       	ldi	r25, 0x01	; 1
     e78:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <LCD_writeStr>
				incorrect++;
     e7c:	8b 81       	ldd	r24, Y+3	; 0x03
     e7e:	8f 5f       	subi	r24, 0xFF	; 255
     e80:	8b 83       	std	Y+3, r24	; 0x03
     e82:	7b c0       	rjmp	.+246    	; 0xf7a <ext_fun+0x430>
			}
		}
		else
		{
			DIO_setPinValue(DIO_PINA2,DIO_HIGH);
     e84:	61 e0       	ldi	r22, 0x01	; 1
     e86:	82 e0       	ldi	r24, 0x02	; 2
     e88:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	aa ef       	ldi	r26, 0xFA	; 250
     e92:	b4 e4       	ldi	r27, 0x44	; 68
     e94:	8c 83       	std	Y+4, r24	; 0x04
     e96:	9d 83       	std	Y+5, r25	; 0x05
     e98:	ae 83       	std	Y+6, r26	; 0x06
     e9a:	bf 83       	std	Y+7, r27	; 0x07

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	4a e7       	ldi	r20, 0x7A	; 122
     ea2:	55 e4       	ldi	r21, 0x45	; 69
     ea4:	6c 81       	ldd	r22, Y+4	; 0x04
     ea6:	7d 81       	ldd	r23, Y+5	; 0x05
     ea8:	8e 81       	ldd	r24, Y+6	; 0x06
     eaa:	9f 81       	ldd	r25, Y+7	; 0x07
     eac:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     eb0:	dc 01       	movw	r26, r24
     eb2:	cb 01       	movw	r24, r22
     eb4:	8e 8b       	std	Y+22, r24	; 0x16
     eb6:	9f 8b       	std	Y+23, r25	; 0x17
     eb8:	a8 8f       	std	Y+24, r26	; 0x18
     eba:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
     ebc:	20 e0       	ldi	r18, 0x00	; 0
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e8       	ldi	r20, 0x80	; 128
     ec2:	5f e3       	ldi	r21, 0x3F	; 63
     ec4:	6e 89       	ldd	r22, Y+22	; 0x16
     ec6:	7f 89       	ldd	r23, Y+23	; 0x17
     ec8:	88 8d       	ldd	r24, Y+24	; 0x18
     eca:	99 8d       	ldd	r25, Y+25	; 0x19
     ecc:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
     ed0:	88 23       	and	r24, r24
     ed2:	2c f4       	brge	.+10     	; 0xede <ext_fun+0x394>
		__ticks = 1;
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	9b 8f       	std	Y+27, r25	; 0x1b
     eda:	8a 8f       	std	Y+26, r24	; 0x1a
     edc:	3f c0       	rjmp	.+126    	; 0xf5c <ext_fun+0x412>
	else if (__tmp > 65535)
     ede:	20 e0       	ldi	r18, 0x00	; 0
     ee0:	3f ef       	ldi	r19, 0xFF	; 255
     ee2:	4f e7       	ldi	r20, 0x7F	; 127
     ee4:	57 e4       	ldi	r21, 0x47	; 71
     ee6:	6e 89       	ldd	r22, Y+22	; 0x16
     ee8:	7f 89       	ldd	r23, Y+23	; 0x17
     eea:	88 8d       	ldd	r24, Y+24	; 0x18
     eec:	99 8d       	ldd	r25, Y+25	; 0x19
     eee:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
     ef2:	18 16       	cp	r1, r24
     ef4:	4c f5       	brge	.+82     	; 0xf48 <ext_fun+0x3fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	40 e2       	ldi	r20, 0x20	; 32
     efc:	51 e4       	ldi	r21, 0x41	; 65
     efe:	6c 81       	ldd	r22, Y+4	; 0x04
     f00:	7d 81       	ldd	r23, Y+5	; 0x05
     f02:	8e 81       	ldd	r24, Y+6	; 0x06
     f04:	9f 81       	ldd	r25, Y+7	; 0x07
     f06:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
     f0a:	dc 01       	movw	r26, r24
     f0c:	cb 01       	movw	r24, r22
     f0e:	bc 01       	movw	r22, r24
     f10:	cd 01       	movw	r24, r26
     f12:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     f16:	dc 01       	movw	r26, r24
     f18:	cb 01       	movw	r24, r22
     f1a:	9b 8f       	std	Y+27, r25	; 0x1b
     f1c:	8a 8f       	std	Y+26, r24	; 0x1a
     f1e:	0f c0       	rjmp	.+30     	; 0xf3e <ext_fun+0x3f4>
     f20:	80 e9       	ldi	r24, 0x90	; 144
     f22:	91 e0       	ldi	r25, 0x01	; 1
     f24:	9d 8f       	std	Y+29, r25	; 0x1d
     f26:	8c 8f       	std	Y+28, r24	; 0x1c
     f28:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f2a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f2c:	01 97       	sbiw	r24, 0x01	; 1
     f2e:	f1 f7       	brne	.-4      	; 0xf2c <ext_fun+0x3e2>
     f30:	9d 8f       	std	Y+29, r25	; 0x1d
     f32:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f34:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f36:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f38:	01 97       	sbiw	r24, 0x01	; 1
     f3a:	9b 8f       	std	Y+27, r25	; 0x1b
     f3c:	8a 8f       	std	Y+26, r24	; 0x1a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f3e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f40:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f42:	89 2b       	or	r24, r25
     f44:	69 f7       	brne	.-38     	; 0xf20 <ext_fun+0x3d6>
     f46:	14 c0       	rjmp	.+40     	; 0xf70 <ext_fun+0x426>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f48:	6e 89       	ldd	r22, Y+22	; 0x16
     f4a:	7f 89       	ldd	r23, Y+23	; 0x17
     f4c:	88 8d       	ldd	r24, Y+24	; 0x18
     f4e:	99 8d       	ldd	r25, Y+25	; 0x19
     f50:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
     f54:	dc 01       	movw	r26, r24
     f56:	cb 01       	movw	r24, r22
     f58:	9b 8f       	std	Y+27, r25	; 0x1b
     f5a:	8a 8f       	std	Y+26, r24	; 0x1a
     f5c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f5e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f60:	9f 8f       	std	Y+31, r25	; 0x1f
     f62:	8e 8f       	std	Y+30, r24	; 0x1e
     f64:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f66:	9f 8d       	ldd	r25, Y+31	; 0x1f
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	f1 f7       	brne	.-4      	; 0xf68 <ext_fun+0x41e>
     f6c:	9f 8f       	std	Y+31, r25	; 0x1f
     f6e:	8e 8f       	std	Y+30, r24	; 0x1e
			_delay_ms(2000);
			DIO_setPinValue(DIO_PINA2,DIO_LOW);
     f70:	60 e0       	ldi	r22, 0x00	; 0
     f72:	82 e0       	ldi	r24, 0x02	; 2
     f74:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
			incorrect=0;
     f78:	1b 82       	std	Y+3, r1	; 0x03

void ext_fun()
{
	DIO_setPinDir(DIO_PINA2,DIO_OUTPUT);
	u8 incorrect,flag=1,flag1=1;
	while (flag==1)
     f7a:	89 81       	ldd	r24, Y+1	; 0x01
     f7c:	81 30       	cpi	r24, 0x01	; 1
     f7e:	09 f4       	brne	.+2      	; 0xf82 <ext_fun+0x438>
     f80:	f7 cd       	rjmp	.-1042   	; 0xb70 <ext_fun+0x26>
			_delay_ms(2000);
			DIO_setPinValue(DIO_PINA2,DIO_LOW);
			incorrect=0;
		}
	}
     f82:	00 00       	nop
     f84:	a9 96       	adiw	r28, 0x29	; 41
     f86:	0f b6       	in	r0, 0x3f	; 63
     f88:	f8 94       	cli
     f8a:	de bf       	out	0x3e, r29	; 62
     f8c:	0f be       	out	0x3f, r0	; 63
     f8e:	cd bf       	out	0x3d, r28	; 61
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	08 95       	ret

00000f96 <EEPROM_readData>:
     f96:	cf 93       	push	r28
     f98:	df 93       	push	r29
     f9a:	cd b7       	in	r28, 0x3d	; 61
     f9c:	de b7       	in	r29, 0x3e	; 62
     f9e:	27 97       	sbiw	r28, 0x07	; 7
     fa0:	0f b6       	in	r0, 0x3f	; 63
     fa2:	f8 94       	cli
     fa4:	de bf       	out	0x3e, r29	; 62
     fa6:	0f be       	out	0x3f, r0	; 63
     fa8:	cd bf       	out	0x3d, r28	; 61
     faa:	9f 83       	std	Y+7, r25	; 0x07
     fac:	8e 83       	std	Y+6, r24	; 0x06
     fae:	86 e5       	ldi	r24, 0x56	; 86
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	24 ea       	ldi	r18, 0xA4	; 164
     fb4:	fc 01       	movw	r30, r24
     fb6:	20 83       	st	Z, r18
     fb8:	00 00       	nop
     fba:	86 e5       	ldi	r24, 0x56	; 86
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	fc 01       	movw	r30, r24
     fc0:	80 81       	ld	r24, Z
     fc2:	88 1f       	adc	r24, r24
     fc4:	88 27       	eor	r24, r24
     fc6:	88 1f       	adc	r24, r24
     fc8:	88 2f       	mov	r24, r24
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	81 70       	andi	r24, 0x01	; 1
     fce:	99 27       	eor	r25, r25
     fd0:	89 2b       	or	r24, r25
     fd2:	99 f3       	breq	.-26     	; 0xfba <EEPROM_readData+0x24>
     fd4:	8e 81       	ldd	r24, Y+6	; 0x06
     fd6:	9f 81       	ldd	r25, Y+7	; 0x07
     fd8:	88 27       	eor	r24, r24
     fda:	97 70       	andi	r25, 0x07	; 7
     fdc:	9a 83       	std	Y+2, r25	; 0x02
     fde:	89 83       	std	Y+1, r24	; 0x01
     fe0:	89 81       	ldd	r24, Y+1	; 0x01
     fe2:	9a 81       	ldd	r25, Y+2	; 0x02
     fe4:	88 0f       	add	r24, r24
     fe6:	89 2f       	mov	r24, r25
     fe8:	88 1f       	adc	r24, r24
     fea:	99 0b       	sbc	r25, r25
     fec:	91 95       	neg	r25
     fee:	8b 83       	std	Y+3, r24	; 0x03
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	80 6a       	ori	r24, 0xA0	; 160
     ff4:	8c 83       	std	Y+4, r24	; 0x04
     ff6:	83 e2       	ldi	r24, 0x23	; 35
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	2c 81       	ldd	r18, Y+4	; 0x04
     ffc:	fc 01       	movw	r30, r24
     ffe:	20 83       	st	Z, r18
    1000:	86 e5       	ldi	r24, 0x56	; 86
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	24 e8       	ldi	r18, 0x84	; 132
    1006:	fc 01       	movw	r30, r24
    1008:	20 83       	st	Z, r18
    100a:	00 00       	nop
    100c:	86 e5       	ldi	r24, 0x56	; 86
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	fc 01       	movw	r30, r24
    1012:	80 81       	ld	r24, Z
    1014:	88 1f       	adc	r24, r24
    1016:	88 27       	eor	r24, r24
    1018:	88 1f       	adc	r24, r24
    101a:	88 2f       	mov	r24, r24
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	81 70       	andi	r24, 0x01	; 1
    1020:	99 27       	eor	r25, r25
    1022:	89 2b       	or	r24, r25
    1024:	99 f3       	breq	.-26     	; 0x100c <EEPROM_readData+0x76>
    1026:	83 e2       	ldi	r24, 0x23	; 35
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	2e 81       	ldd	r18, Y+6	; 0x06
    102c:	fc 01       	movw	r30, r24
    102e:	20 83       	st	Z, r18
    1030:	86 e5       	ldi	r24, 0x56	; 86
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	24 e8       	ldi	r18, 0x84	; 132
    1036:	fc 01       	movw	r30, r24
    1038:	20 83       	st	Z, r18
    103a:	00 00       	nop
    103c:	86 e5       	ldi	r24, 0x56	; 86
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	fc 01       	movw	r30, r24
    1042:	80 81       	ld	r24, Z
    1044:	88 1f       	adc	r24, r24
    1046:	88 27       	eor	r24, r24
    1048:	88 1f       	adc	r24, r24
    104a:	88 2f       	mov	r24, r24
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	81 70       	andi	r24, 0x01	; 1
    1050:	99 27       	eor	r25, r25
    1052:	89 2b       	or	r24, r25
    1054:	99 f3       	breq	.-26     	; 0x103c <EEPROM_readData+0xa6>
    1056:	86 e5       	ldi	r24, 0x56	; 86
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	24 ea       	ldi	r18, 0xA4	; 164
    105c:	fc 01       	movw	r30, r24
    105e:	20 83       	st	Z, r18
    1060:	00 00       	nop
    1062:	86 e5       	ldi	r24, 0x56	; 86
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	fc 01       	movw	r30, r24
    1068:	80 81       	ld	r24, Z
    106a:	88 1f       	adc	r24, r24
    106c:	88 27       	eor	r24, r24
    106e:	88 1f       	adc	r24, r24
    1070:	88 2f       	mov	r24, r24
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	81 70       	andi	r24, 0x01	; 1
    1076:	99 27       	eor	r25, r25
    1078:	89 2b       	or	r24, r25
    107a:	99 f3       	breq	.-26     	; 0x1062 <EEPROM_readData+0xcc>
    107c:	8e 81       	ldd	r24, Y+6	; 0x06
    107e:	9f 81       	ldd	r25, Y+7	; 0x07
    1080:	88 27       	eor	r24, r24
    1082:	97 70       	andi	r25, 0x07	; 7
    1084:	9a 83       	std	Y+2, r25	; 0x02
    1086:	89 83       	std	Y+1, r24	; 0x01
    1088:	89 81       	ldd	r24, Y+1	; 0x01
    108a:	9a 81       	ldd	r25, Y+2	; 0x02
    108c:	88 0f       	add	r24, r24
    108e:	89 2f       	mov	r24, r25
    1090:	88 1f       	adc	r24, r24
    1092:	99 0b       	sbc	r25, r25
    1094:	91 95       	neg	r25
    1096:	8b 83       	std	Y+3, r24	; 0x03
    1098:	8b 81       	ldd	r24, Y+3	; 0x03
    109a:	81 6a       	ori	r24, 0xA1	; 161
    109c:	8c 83       	std	Y+4, r24	; 0x04
    109e:	83 e2       	ldi	r24, 0x23	; 35
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	2c 81       	ldd	r18, Y+4	; 0x04
    10a4:	fc 01       	movw	r30, r24
    10a6:	20 83       	st	Z, r18
    10a8:	86 e5       	ldi	r24, 0x56	; 86
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	24 e8       	ldi	r18, 0x84	; 132
    10ae:	fc 01       	movw	r30, r24
    10b0:	20 83       	st	Z, r18
    10b2:	00 00       	nop
    10b4:	86 e5       	ldi	r24, 0x56	; 86
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	fc 01       	movw	r30, r24
    10ba:	80 81       	ld	r24, Z
    10bc:	88 1f       	adc	r24, r24
    10be:	88 27       	eor	r24, r24
    10c0:	88 1f       	adc	r24, r24
    10c2:	88 2f       	mov	r24, r24
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	81 70       	andi	r24, 0x01	; 1
    10c8:	99 27       	eor	r25, r25
    10ca:	89 2b       	or	r24, r25
    10cc:	99 f3       	breq	.-26     	; 0x10b4 <EEPROM_readData+0x11e>
    10ce:	86 e5       	ldi	r24, 0x56	; 86
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	24 e8       	ldi	r18, 0x84	; 132
    10d4:	fc 01       	movw	r30, r24
    10d6:	20 83       	st	Z, r18
    10d8:	00 00       	nop
    10da:	86 e5       	ldi	r24, 0x56	; 86
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	fc 01       	movw	r30, r24
    10e0:	80 81       	ld	r24, Z
    10e2:	88 1f       	adc	r24, r24
    10e4:	88 27       	eor	r24, r24
    10e6:	88 1f       	adc	r24, r24
    10e8:	88 2f       	mov	r24, r24
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	81 70       	andi	r24, 0x01	; 1
    10ee:	99 27       	eor	r25, r25
    10f0:	89 2b       	or	r24, r25
    10f2:	99 f3       	breq	.-26     	; 0x10da <EEPROM_readData+0x144>
    10f4:	83 e2       	ldi	r24, 0x23	; 35
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	fc 01       	movw	r30, r24
    10fa:	80 81       	ld	r24, Z
    10fc:	8d 83       	std	Y+5, r24	; 0x05
    10fe:	86 e5       	ldi	r24, 0x56	; 86
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	24 e9       	ldi	r18, 0x94	; 148
    1104:	fc 01       	movw	r30, r24
    1106:	20 83       	st	Z, r18
    1108:	8d 81       	ldd	r24, Y+5	; 0x05
    110a:	27 96       	adiw	r28, 0x07	; 7
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	f8 94       	cli
    1110:	de bf       	out	0x3e, r29	; 62
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	cd bf       	out	0x3d, r28	; 61
    1116:	df 91       	pop	r29
    1118:	cf 91       	pop	r28
    111a:	08 95       	ret

0000111c <KEYPAD_init>:
    111c:	cf 93       	push	r28
    111e:	df 93       	push	r29
    1120:	cd b7       	in	r28, 0x3d	; 61
    1122:	de b7       	in	r29, 0x3e	; 62
    1124:	60 e0       	ldi	r22, 0x00	; 0
    1126:	82 e1       	ldi	r24, 0x12	; 18
    1128:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    112c:	60 e0       	ldi	r22, 0x00	; 0
    112e:	83 e1       	ldi	r24, 0x13	; 19
    1130:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1134:	60 e0       	ldi	r22, 0x00	; 0
    1136:	84 e1       	ldi	r24, 0x14	; 20
    1138:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    113c:	60 e0       	ldi	r22, 0x00	; 0
    113e:	85 e1       	ldi	r24, 0x15	; 21
    1140:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1144:	82 e1       	ldi	r24, 0x12	; 18
    1146:	0e 94 0f 11 	call	0x221e	; 0x221e <DIO_setPinPullup>
    114a:	83 e1       	ldi	r24, 0x13	; 19
    114c:	0e 94 0f 11 	call	0x221e	; 0x221e <DIO_setPinPullup>
    1150:	84 e1       	ldi	r24, 0x14	; 20
    1152:	0e 94 0f 11 	call	0x221e	; 0x221e <DIO_setPinPullup>
    1156:	85 e1       	ldi	r24, 0x15	; 21
    1158:	0e 94 0f 11 	call	0x221e	; 0x221e <DIO_setPinPullup>
    115c:	61 e0       	ldi	r22, 0x01	; 1
    115e:	86 e1       	ldi	r24, 0x16	; 22
    1160:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1164:	61 e0       	ldi	r22, 0x01	; 1
    1166:	87 e1       	ldi	r24, 0x17	; 23
    1168:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    116c:	61 e0       	ldi	r22, 0x01	; 1
    116e:	8d e1       	ldi	r24, 0x1D	; 29
    1170:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1174:	61 e0       	ldi	r22, 0x01	; 1
    1176:	83 e0       	ldi	r24, 0x03	; 3
    1178:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    117c:	00 00       	nop
    117e:	df 91       	pop	r29
    1180:	cf 91       	pop	r28
    1182:	08 95       	ret

00001184 <KEYPAD_read>:
    1184:	cf 93       	push	r28
    1186:	df 93       	push	r29
    1188:	cd b7       	in	r28, 0x3d	; 61
    118a:	de b7       	in	r29, 0x3e	; 62
    118c:	60 e0       	ldi	r22, 0x00	; 0
    118e:	86 e1       	ldi	r24, 0x16	; 22
    1190:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1194:	61 e0       	ldi	r22, 0x01	; 1
    1196:	87 e1       	ldi	r24, 0x17	; 23
    1198:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    119c:	61 e0       	ldi	r22, 0x01	; 1
    119e:	8d e1       	ldi	r24, 0x1D	; 29
    11a0:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    11a4:	61 e0       	ldi	r22, 0x01	; 1
    11a6:	83 e0       	ldi	r24, 0x03	; 3
    11a8:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    11ac:	82 e1       	ldi	r24, 0x12	; 18
    11ae:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    11b2:	88 23       	and	r24, r24
    11b4:	11 f4       	brne	.+4      	; 0x11ba <KEYPAD_read+0x36>
    11b6:	87 e3       	ldi	r24, 0x37	; 55
    11b8:	9a c0       	rjmp	.+308    	; 0x12ee <KEYPAD_read+0x16a>
    11ba:	83 e1       	ldi	r24, 0x13	; 19
    11bc:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    11c0:	88 23       	and	r24, r24
    11c2:	11 f4       	brne	.+4      	; 0x11c8 <KEYPAD_read+0x44>
    11c4:	84 e3       	ldi	r24, 0x34	; 52
    11c6:	93 c0       	rjmp	.+294    	; 0x12ee <KEYPAD_read+0x16a>
    11c8:	84 e1       	ldi	r24, 0x14	; 20
    11ca:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    11ce:	88 23       	and	r24, r24
    11d0:	11 f4       	brne	.+4      	; 0x11d6 <KEYPAD_read+0x52>
    11d2:	81 e3       	ldi	r24, 0x31	; 49
    11d4:	8c c0       	rjmp	.+280    	; 0x12ee <KEYPAD_read+0x16a>
    11d6:	85 e1       	ldi	r24, 0x15	; 21
    11d8:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    11dc:	88 23       	and	r24, r24
    11de:	11 f4       	brne	.+4      	; 0x11e4 <KEYPAD_read+0x60>
    11e0:	83 e6       	ldi	r24, 0x63	; 99
    11e2:	85 c0       	rjmp	.+266    	; 0x12ee <KEYPAD_read+0x16a>
    11e4:	61 e0       	ldi	r22, 0x01	; 1
    11e6:	86 e1       	ldi	r24, 0x16	; 22
    11e8:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	87 e1       	ldi	r24, 0x17	; 23
    11f0:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    11f4:	61 e0       	ldi	r22, 0x01	; 1
    11f6:	8d e1       	ldi	r24, 0x1D	; 29
    11f8:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    11fc:	61 e0       	ldi	r22, 0x01	; 1
    11fe:	83 e0       	ldi	r24, 0x03	; 3
    1200:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1204:	82 e1       	ldi	r24, 0x12	; 18
    1206:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    120a:	88 23       	and	r24, r24
    120c:	11 f4       	brne	.+4      	; 0x1212 <KEYPAD_read+0x8e>
    120e:	88 e3       	ldi	r24, 0x38	; 56
    1210:	6e c0       	rjmp	.+220    	; 0x12ee <KEYPAD_read+0x16a>
    1212:	83 e1       	ldi	r24, 0x13	; 19
    1214:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    1218:	88 23       	and	r24, r24
    121a:	11 f4       	brne	.+4      	; 0x1220 <KEYPAD_read+0x9c>
    121c:	85 e3       	ldi	r24, 0x35	; 53
    121e:	67 c0       	rjmp	.+206    	; 0x12ee <KEYPAD_read+0x16a>
    1220:	84 e1       	ldi	r24, 0x14	; 20
    1222:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    1226:	88 23       	and	r24, r24
    1228:	11 f4       	brne	.+4      	; 0x122e <KEYPAD_read+0xaa>
    122a:	82 e3       	ldi	r24, 0x32	; 50
    122c:	60 c0       	rjmp	.+192    	; 0x12ee <KEYPAD_read+0x16a>
    122e:	85 e1       	ldi	r24, 0x15	; 21
    1230:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    1234:	88 23       	and	r24, r24
    1236:	11 f4       	brne	.+4      	; 0x123c <KEYPAD_read+0xb8>
    1238:	80 e3       	ldi	r24, 0x30	; 48
    123a:	59 c0       	rjmp	.+178    	; 0x12ee <KEYPAD_read+0x16a>
    123c:	61 e0       	ldi	r22, 0x01	; 1
    123e:	86 e1       	ldi	r24, 0x16	; 22
    1240:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1244:	61 e0       	ldi	r22, 0x01	; 1
    1246:	87 e1       	ldi	r24, 0x17	; 23
    1248:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	8d e1       	ldi	r24, 0x1D	; 29
    1250:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1254:	61 e0       	ldi	r22, 0x01	; 1
    1256:	83 e0       	ldi	r24, 0x03	; 3
    1258:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    125c:	82 e1       	ldi	r24, 0x12	; 18
    125e:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    1262:	88 23       	and	r24, r24
    1264:	11 f4       	brne	.+4      	; 0x126a <KEYPAD_read+0xe6>
    1266:	89 e3       	ldi	r24, 0x39	; 57
    1268:	42 c0       	rjmp	.+132    	; 0x12ee <KEYPAD_read+0x16a>
    126a:	83 e1       	ldi	r24, 0x13	; 19
    126c:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    1270:	88 23       	and	r24, r24
    1272:	11 f4       	brne	.+4      	; 0x1278 <KEYPAD_read+0xf4>
    1274:	86 e3       	ldi	r24, 0x36	; 54
    1276:	3b c0       	rjmp	.+118    	; 0x12ee <KEYPAD_read+0x16a>
    1278:	84 e1       	ldi	r24, 0x14	; 20
    127a:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    127e:	88 23       	and	r24, r24
    1280:	11 f4       	brne	.+4      	; 0x1286 <KEYPAD_read+0x102>
    1282:	83 e3       	ldi	r24, 0x33	; 51
    1284:	34 c0       	rjmp	.+104    	; 0x12ee <KEYPAD_read+0x16a>
    1286:	85 e1       	ldi	r24, 0x15	; 21
    1288:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    128c:	88 23       	and	r24, r24
    128e:	11 f4       	brne	.+4      	; 0x1294 <KEYPAD_read+0x110>
    1290:	8d e3       	ldi	r24, 0x3D	; 61
    1292:	2d c0       	rjmp	.+90     	; 0x12ee <KEYPAD_read+0x16a>
    1294:	61 e0       	ldi	r22, 0x01	; 1
    1296:	86 e1       	ldi	r24, 0x16	; 22
    1298:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    129c:	61 e0       	ldi	r22, 0x01	; 1
    129e:	87 e1       	ldi	r24, 0x17	; 23
    12a0:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    12a4:	61 e0       	ldi	r22, 0x01	; 1
    12a6:	8d e1       	ldi	r24, 0x1D	; 29
    12a8:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	83 e0       	ldi	r24, 0x03	; 3
    12b0:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    12b4:	82 e1       	ldi	r24, 0x12	; 18
    12b6:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    12ba:	88 23       	and	r24, r24
    12bc:	11 f4       	brne	.+4      	; 0x12c2 <KEYPAD_read+0x13e>
    12be:	8f e2       	ldi	r24, 0x2F	; 47
    12c0:	16 c0       	rjmp	.+44     	; 0x12ee <KEYPAD_read+0x16a>
    12c2:	83 e1       	ldi	r24, 0x13	; 19
    12c4:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    12c8:	88 23       	and	r24, r24
    12ca:	11 f4       	brne	.+4      	; 0x12d0 <KEYPAD_read+0x14c>
    12cc:	8a e2       	ldi	r24, 0x2A	; 42
    12ce:	0f c0       	rjmp	.+30     	; 0x12ee <KEYPAD_read+0x16a>
    12d0:	84 e1       	ldi	r24, 0x14	; 20
    12d2:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    12d6:	88 23       	and	r24, r24
    12d8:	11 f4       	brne	.+4      	; 0x12de <KEYPAD_read+0x15a>
    12da:	8d e2       	ldi	r24, 0x2D	; 45
    12dc:	08 c0       	rjmp	.+16     	; 0x12ee <KEYPAD_read+0x16a>
    12de:	85 e1       	ldi	r24, 0x15	; 21
    12e0:	0e 94 a7 10 	call	0x214e	; 0x214e <DIO_readPinValue>
    12e4:	88 23       	and	r24, r24
    12e6:	11 f4       	brne	.+4      	; 0x12ec <KEYPAD_read+0x168>
    12e8:	8b e2       	ldi	r24, 0x2B	; 43
    12ea:	01 c0       	rjmp	.+2      	; 0x12ee <KEYPAD_read+0x16a>
    12ec:	88 e7       	ldi	r24, 0x78	; 120
    12ee:	df 91       	pop	r29
    12f0:	cf 91       	pop	r28
    12f2:	08 95       	ret

000012f4 <LCD_init>:
    12f4:	cf 93       	push	r28
    12f6:	df 93       	push	r29
    12f8:	cd b7       	in	r28, 0x3d	; 61
    12fa:	de b7       	in	r29, 0x3e	; 62
    12fc:	e8 97       	sbiw	r28, 0x38	; 56
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	61 e0       	ldi	r22, 0x01	; 1
    130a:	84 e0       	ldi	r24, 0x04	; 4
    130c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1310:	61 e0       	ldi	r22, 0x01	; 1
    1312:	85 e0       	ldi	r24, 0x05	; 5
    1314:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1318:	61 e0       	ldi	r22, 0x01	; 1
    131a:	86 e0       	ldi	r24, 0x06	; 6
    131c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1320:	61 e0       	ldi	r22, 0x01	; 1
    1322:	87 e0       	ldi	r24, 0x07	; 7
    1324:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1328:	61 e0       	ldi	r22, 0x01	; 1
    132a:	89 e0       	ldi	r24, 0x09	; 9
    132c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1330:	61 e0       	ldi	r22, 0x01	; 1
    1332:	8a e0       	ldi	r24, 0x0A	; 10
    1334:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1338:	61 e0       	ldi	r22, 0x01	; 1
    133a:	8b e0       	ldi	r24, 0x0B	; 11
    133c:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    1340:	82 e0       	ldi	r24, 0x02	; 2
    1342:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    1346:	80 e0       	ldi	r24, 0x00	; 0
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	a8 e4       	ldi	r26, 0x48	; 72
    134c:	b2 e4       	ldi	r27, 0x42	; 66
    134e:	89 83       	std	Y+1, r24	; 0x01
    1350:	9a 83       	std	Y+2, r25	; 0x02
    1352:	ab 83       	std	Y+3, r26	; 0x03
    1354:	bc 83       	std	Y+4, r27	; 0x04
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	30 e0       	ldi	r19, 0x00	; 0
    135a:	4a e7       	ldi	r20, 0x7A	; 122
    135c:	55 e4       	ldi	r21, 0x45	; 69
    135e:	69 81       	ldd	r22, Y+1	; 0x01
    1360:	7a 81       	ldd	r23, Y+2	; 0x02
    1362:	8b 81       	ldd	r24, Y+3	; 0x03
    1364:	9c 81       	ldd	r25, Y+4	; 0x04
    1366:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    136a:	dc 01       	movw	r26, r24
    136c:	cb 01       	movw	r24, r22
    136e:	8f a7       	std	Y+47, r24	; 0x2f
    1370:	98 ab       	std	Y+48, r25	; 0x30
    1372:	a9 ab       	std	Y+49, r26	; 0x31
    1374:	ba ab       	std	Y+50, r27	; 0x32
    1376:	20 e0       	ldi	r18, 0x00	; 0
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	40 e8       	ldi	r20, 0x80	; 128
    137c:	5f e3       	ldi	r21, 0x3F	; 63
    137e:	6f a5       	ldd	r22, Y+47	; 0x2f
    1380:	78 a9       	ldd	r23, Y+48	; 0x30
    1382:	89 a9       	ldd	r24, Y+49	; 0x31
    1384:	9a a9       	ldd	r25, Y+50	; 0x32
    1386:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    138a:	88 23       	and	r24, r24
    138c:	2c f4       	brge	.+10     	; 0x1398 <LCD_init+0xa4>
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	9c ab       	std	Y+52, r25	; 0x34
    1394:	8b ab       	std	Y+51, r24	; 0x33
    1396:	3f c0       	rjmp	.+126    	; 0x1416 <LCD_init+0x122>
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	3f ef       	ldi	r19, 0xFF	; 255
    139c:	4f e7       	ldi	r20, 0x7F	; 127
    139e:	57 e4       	ldi	r21, 0x47	; 71
    13a0:	6f a5       	ldd	r22, Y+47	; 0x2f
    13a2:	78 a9       	ldd	r23, Y+48	; 0x30
    13a4:	89 a9       	ldd	r24, Y+49	; 0x31
    13a6:	9a a9       	ldd	r25, Y+50	; 0x32
    13a8:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    13ac:	18 16       	cp	r1, r24
    13ae:	4c f5       	brge	.+82     	; 0x1402 <LCD_init+0x10e>
    13b0:	20 e0       	ldi	r18, 0x00	; 0
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	40 e2       	ldi	r20, 0x20	; 32
    13b6:	51 e4       	ldi	r21, 0x41	; 65
    13b8:	69 81       	ldd	r22, Y+1	; 0x01
    13ba:	7a 81       	ldd	r23, Y+2	; 0x02
    13bc:	8b 81       	ldd	r24, Y+3	; 0x03
    13be:	9c 81       	ldd	r25, Y+4	; 0x04
    13c0:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    13c4:	dc 01       	movw	r26, r24
    13c6:	cb 01       	movw	r24, r22
    13c8:	bc 01       	movw	r22, r24
    13ca:	cd 01       	movw	r24, r26
    13cc:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    13d0:	dc 01       	movw	r26, r24
    13d2:	cb 01       	movw	r24, r22
    13d4:	9c ab       	std	Y+52, r25	; 0x34
    13d6:	8b ab       	std	Y+51, r24	; 0x33
    13d8:	0f c0       	rjmp	.+30     	; 0x13f8 <LCD_init+0x104>
    13da:	80 e9       	ldi	r24, 0x90	; 144
    13dc:	91 e0       	ldi	r25, 0x01	; 1
    13de:	9e ab       	std	Y+54, r25	; 0x36
    13e0:	8d ab       	std	Y+53, r24	; 0x35
    13e2:	8d a9       	ldd	r24, Y+53	; 0x35
    13e4:	9e a9       	ldd	r25, Y+54	; 0x36
    13e6:	01 97       	sbiw	r24, 0x01	; 1
    13e8:	f1 f7       	brne	.-4      	; 0x13e6 <LCD_init+0xf2>
    13ea:	9e ab       	std	Y+54, r25	; 0x36
    13ec:	8d ab       	std	Y+53, r24	; 0x35
    13ee:	8b a9       	ldd	r24, Y+51	; 0x33
    13f0:	9c a9       	ldd	r25, Y+52	; 0x34
    13f2:	01 97       	sbiw	r24, 0x01	; 1
    13f4:	9c ab       	std	Y+52, r25	; 0x34
    13f6:	8b ab       	std	Y+51, r24	; 0x33
    13f8:	8b a9       	ldd	r24, Y+51	; 0x33
    13fa:	9c a9       	ldd	r25, Y+52	; 0x34
    13fc:	89 2b       	or	r24, r25
    13fe:	69 f7       	brne	.-38     	; 0x13da <LCD_init+0xe6>
    1400:	14 c0       	rjmp	.+40     	; 0x142a <LCD_init+0x136>
    1402:	6f a5       	ldd	r22, Y+47	; 0x2f
    1404:	78 a9       	ldd	r23, Y+48	; 0x30
    1406:	89 a9       	ldd	r24, Y+49	; 0x31
    1408:	9a a9       	ldd	r25, Y+50	; 0x32
    140a:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    140e:	dc 01       	movw	r26, r24
    1410:	cb 01       	movw	r24, r22
    1412:	9c ab       	std	Y+52, r25	; 0x34
    1414:	8b ab       	std	Y+51, r24	; 0x33
    1416:	8b a9       	ldd	r24, Y+51	; 0x33
    1418:	9c a9       	ldd	r25, Y+52	; 0x34
    141a:	98 af       	std	Y+56, r25	; 0x38
    141c:	8f ab       	std	Y+55, r24	; 0x37
    141e:	8f a9       	ldd	r24, Y+55	; 0x37
    1420:	98 ad       	ldd	r25, Y+56	; 0x38
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	f1 f7       	brne	.-4      	; 0x1422 <LCD_init+0x12e>
    1426:	98 af       	std	Y+56, r25	; 0x38
    1428:	8f ab       	std	Y+55, r24	; 0x37
    142a:	88 e2       	ldi	r24, 0x28	; 40
    142c:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    1430:	80 e0       	ldi	r24, 0x00	; 0
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	a0 e8       	ldi	r26, 0x80	; 128
    1436:	bf e3       	ldi	r27, 0x3F	; 63
    1438:	8d 83       	std	Y+5, r24	; 0x05
    143a:	9e 83       	std	Y+6, r25	; 0x06
    143c:	af 83       	std	Y+7, r26	; 0x07
    143e:	b8 87       	std	Y+8, r27	; 0x08
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	4a e7       	ldi	r20, 0x7A	; 122
    1446:	55 e4       	ldi	r21, 0x45	; 69
    1448:	6d 81       	ldd	r22, Y+5	; 0x05
    144a:	7e 81       	ldd	r23, Y+6	; 0x06
    144c:	8f 81       	ldd	r24, Y+7	; 0x07
    144e:	98 85       	ldd	r25, Y+8	; 0x08
    1450:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1454:	dc 01       	movw	r26, r24
    1456:	cb 01       	movw	r24, r22
    1458:	8d a3       	std	Y+37, r24	; 0x25
    145a:	9e a3       	std	Y+38, r25	; 0x26
    145c:	af a3       	std	Y+39, r26	; 0x27
    145e:	b8 a7       	std	Y+40, r27	; 0x28
    1460:	20 e0       	ldi	r18, 0x00	; 0
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	40 e8       	ldi	r20, 0x80	; 128
    1466:	5f e3       	ldi	r21, 0x3F	; 63
    1468:	6d a1       	ldd	r22, Y+37	; 0x25
    146a:	7e a1       	ldd	r23, Y+38	; 0x26
    146c:	8f a1       	ldd	r24, Y+39	; 0x27
    146e:	98 a5       	ldd	r25, Y+40	; 0x28
    1470:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    1474:	88 23       	and	r24, r24
    1476:	2c f4       	brge	.+10     	; 0x1482 <LCD_init+0x18e>
    1478:	81 e0       	ldi	r24, 0x01	; 1
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	9a a7       	std	Y+42, r25	; 0x2a
    147e:	89 a7       	std	Y+41, r24	; 0x29
    1480:	3f c0       	rjmp	.+126    	; 0x1500 <LCD_init+0x20c>
    1482:	20 e0       	ldi	r18, 0x00	; 0
    1484:	3f ef       	ldi	r19, 0xFF	; 255
    1486:	4f e7       	ldi	r20, 0x7F	; 127
    1488:	57 e4       	ldi	r21, 0x47	; 71
    148a:	6d a1       	ldd	r22, Y+37	; 0x25
    148c:	7e a1       	ldd	r23, Y+38	; 0x26
    148e:	8f a1       	ldd	r24, Y+39	; 0x27
    1490:	98 a5       	ldd	r25, Y+40	; 0x28
    1492:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    1496:	18 16       	cp	r1, r24
    1498:	4c f5       	brge	.+82     	; 0x14ec <LCD_init+0x1f8>
    149a:	20 e0       	ldi	r18, 0x00	; 0
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	40 e2       	ldi	r20, 0x20	; 32
    14a0:	51 e4       	ldi	r21, 0x41	; 65
    14a2:	6d 81       	ldd	r22, Y+5	; 0x05
    14a4:	7e 81       	ldd	r23, Y+6	; 0x06
    14a6:	8f 81       	ldd	r24, Y+7	; 0x07
    14a8:	98 85       	ldd	r25, Y+8	; 0x08
    14aa:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    14ae:	dc 01       	movw	r26, r24
    14b0:	cb 01       	movw	r24, r22
    14b2:	bc 01       	movw	r22, r24
    14b4:	cd 01       	movw	r24, r26
    14b6:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    14ba:	dc 01       	movw	r26, r24
    14bc:	cb 01       	movw	r24, r22
    14be:	9a a7       	std	Y+42, r25	; 0x2a
    14c0:	89 a7       	std	Y+41, r24	; 0x29
    14c2:	0f c0       	rjmp	.+30     	; 0x14e2 <LCD_init+0x1ee>
    14c4:	80 e9       	ldi	r24, 0x90	; 144
    14c6:	91 e0       	ldi	r25, 0x01	; 1
    14c8:	9c a7       	std	Y+44, r25	; 0x2c
    14ca:	8b a7       	std	Y+43, r24	; 0x2b
    14cc:	8b a5       	ldd	r24, Y+43	; 0x2b
    14ce:	9c a5       	ldd	r25, Y+44	; 0x2c
    14d0:	01 97       	sbiw	r24, 0x01	; 1
    14d2:	f1 f7       	brne	.-4      	; 0x14d0 <LCD_init+0x1dc>
    14d4:	9c a7       	std	Y+44, r25	; 0x2c
    14d6:	8b a7       	std	Y+43, r24	; 0x2b
    14d8:	89 a5       	ldd	r24, Y+41	; 0x29
    14da:	9a a5       	ldd	r25, Y+42	; 0x2a
    14dc:	01 97       	sbiw	r24, 0x01	; 1
    14de:	9a a7       	std	Y+42, r25	; 0x2a
    14e0:	89 a7       	std	Y+41, r24	; 0x29
    14e2:	89 a5       	ldd	r24, Y+41	; 0x29
    14e4:	9a a5       	ldd	r25, Y+42	; 0x2a
    14e6:	89 2b       	or	r24, r25
    14e8:	69 f7       	brne	.-38     	; 0x14c4 <LCD_init+0x1d0>
    14ea:	14 c0       	rjmp	.+40     	; 0x1514 <LCD_init+0x220>
    14ec:	6d a1       	ldd	r22, Y+37	; 0x25
    14ee:	7e a1       	ldd	r23, Y+38	; 0x26
    14f0:	8f a1       	ldd	r24, Y+39	; 0x27
    14f2:	98 a5       	ldd	r25, Y+40	; 0x28
    14f4:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    14f8:	dc 01       	movw	r26, r24
    14fa:	cb 01       	movw	r24, r22
    14fc:	9a a7       	std	Y+42, r25	; 0x2a
    14fe:	89 a7       	std	Y+41, r24	; 0x29
    1500:	89 a5       	ldd	r24, Y+41	; 0x29
    1502:	9a a5       	ldd	r25, Y+42	; 0x2a
    1504:	9e a7       	std	Y+46, r25	; 0x2e
    1506:	8d a7       	std	Y+45, r24	; 0x2d
    1508:	8d a5       	ldd	r24, Y+45	; 0x2d
    150a:	9e a5       	ldd	r25, Y+46	; 0x2e
    150c:	01 97       	sbiw	r24, 0x01	; 1
    150e:	f1 f7       	brne	.-4      	; 0x150c <LCD_init+0x218>
    1510:	9e a7       	std	Y+46, r25	; 0x2e
    1512:	8d a7       	std	Y+45, r24	; 0x2d
    1514:	8e e0       	ldi	r24, 0x0E	; 14
    1516:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    151a:	80 e0       	ldi	r24, 0x00	; 0
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	a0 e8       	ldi	r26, 0x80	; 128
    1520:	bf e3       	ldi	r27, 0x3F	; 63
    1522:	89 87       	std	Y+9, r24	; 0x09
    1524:	9a 87       	std	Y+10, r25	; 0x0a
    1526:	ab 87       	std	Y+11, r26	; 0x0b
    1528:	bc 87       	std	Y+12, r27	; 0x0c
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	4a e7       	ldi	r20, 0x7A	; 122
    1530:	55 e4       	ldi	r21, 0x45	; 69
    1532:	69 85       	ldd	r22, Y+9	; 0x09
    1534:	7a 85       	ldd	r23, Y+10	; 0x0a
    1536:	8b 85       	ldd	r24, Y+11	; 0x0b
    1538:	9c 85       	ldd	r25, Y+12	; 0x0c
    153a:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    153e:	dc 01       	movw	r26, r24
    1540:	cb 01       	movw	r24, r22
    1542:	8b 8f       	std	Y+27, r24	; 0x1b
    1544:	9c 8f       	std	Y+28, r25	; 0x1c
    1546:	ad 8f       	std	Y+29, r26	; 0x1d
    1548:	be 8f       	std	Y+30, r27	; 0x1e
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	40 e8       	ldi	r20, 0x80	; 128
    1550:	5f e3       	ldi	r21, 0x3F	; 63
    1552:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1554:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1556:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1558:	9e 8d       	ldd	r25, Y+30	; 0x1e
    155a:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    155e:	88 23       	and	r24, r24
    1560:	2c f4       	brge	.+10     	; 0x156c <LCD_init+0x278>
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	98 a3       	std	Y+32, r25	; 0x20
    1568:	8f 8f       	std	Y+31, r24	; 0x1f
    156a:	3f c0       	rjmp	.+126    	; 0x15ea <LCD_init+0x2f6>
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	3f ef       	ldi	r19, 0xFF	; 255
    1570:	4f e7       	ldi	r20, 0x7F	; 127
    1572:	57 e4       	ldi	r21, 0x47	; 71
    1574:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1576:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1578:	8d 8d       	ldd	r24, Y+29	; 0x1d
    157a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    157c:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    1580:	18 16       	cp	r1, r24
    1582:	4c f5       	brge	.+82     	; 0x15d6 <LCD_init+0x2e2>
    1584:	20 e0       	ldi	r18, 0x00	; 0
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	40 e2       	ldi	r20, 0x20	; 32
    158a:	51 e4       	ldi	r21, 0x41	; 65
    158c:	69 85       	ldd	r22, Y+9	; 0x09
    158e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1590:	8b 85       	ldd	r24, Y+11	; 0x0b
    1592:	9c 85       	ldd	r25, Y+12	; 0x0c
    1594:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1598:	dc 01       	movw	r26, r24
    159a:	cb 01       	movw	r24, r22
    159c:	bc 01       	movw	r22, r24
    159e:	cd 01       	movw	r24, r26
    15a0:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    15a4:	dc 01       	movw	r26, r24
    15a6:	cb 01       	movw	r24, r22
    15a8:	98 a3       	std	Y+32, r25	; 0x20
    15aa:	8f 8f       	std	Y+31, r24	; 0x1f
    15ac:	0f c0       	rjmp	.+30     	; 0x15cc <LCD_init+0x2d8>
    15ae:	80 e9       	ldi	r24, 0x90	; 144
    15b0:	91 e0       	ldi	r25, 0x01	; 1
    15b2:	9a a3       	std	Y+34, r25	; 0x22
    15b4:	89 a3       	std	Y+33, r24	; 0x21
    15b6:	89 a1       	ldd	r24, Y+33	; 0x21
    15b8:	9a a1       	ldd	r25, Y+34	; 0x22
    15ba:	01 97       	sbiw	r24, 0x01	; 1
    15bc:	f1 f7       	brne	.-4      	; 0x15ba <LCD_init+0x2c6>
    15be:	9a a3       	std	Y+34, r25	; 0x22
    15c0:	89 a3       	std	Y+33, r24	; 0x21
    15c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15c4:	98 a1       	ldd	r25, Y+32	; 0x20
    15c6:	01 97       	sbiw	r24, 0x01	; 1
    15c8:	98 a3       	std	Y+32, r25	; 0x20
    15ca:	8f 8f       	std	Y+31, r24	; 0x1f
    15cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15ce:	98 a1       	ldd	r25, Y+32	; 0x20
    15d0:	89 2b       	or	r24, r25
    15d2:	69 f7       	brne	.-38     	; 0x15ae <LCD_init+0x2ba>
    15d4:	14 c0       	rjmp	.+40     	; 0x15fe <LCD_init+0x30a>
    15d6:	6b 8d       	ldd	r22, Y+27	; 0x1b
    15d8:	7c 8d       	ldd	r23, Y+28	; 0x1c
    15da:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15dc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15de:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	98 a3       	std	Y+32, r25	; 0x20
    15e8:	8f 8f       	std	Y+31, r24	; 0x1f
    15ea:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15ec:	98 a1       	ldd	r25, Y+32	; 0x20
    15ee:	9c a3       	std	Y+36, r25	; 0x24
    15f0:	8b a3       	std	Y+35, r24	; 0x23
    15f2:	8b a1       	ldd	r24, Y+35	; 0x23
    15f4:	9c a1       	ldd	r25, Y+36	; 0x24
    15f6:	01 97       	sbiw	r24, 0x01	; 1
    15f8:	f1 f7       	brne	.-4      	; 0x15f6 <LCD_init+0x302>
    15fa:	9c a3       	std	Y+36, r25	; 0x24
    15fc:	8b a3       	std	Y+35, r24	; 0x23
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    1604:	80 e0       	ldi	r24, 0x00	; 0
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	a0 ea       	ldi	r26, 0xA0	; 160
    160a:	b0 e4       	ldi	r27, 0x40	; 64
    160c:	8d 87       	std	Y+13, r24	; 0x0d
    160e:	9e 87       	std	Y+14, r25	; 0x0e
    1610:	af 87       	std	Y+15, r26	; 0x0f
    1612:	b8 8b       	std	Y+16, r27	; 0x10
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	4a e7       	ldi	r20, 0x7A	; 122
    161a:	55 e4       	ldi	r21, 0x45	; 69
    161c:	6d 85       	ldd	r22, Y+13	; 0x0d
    161e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1620:	8f 85       	ldd	r24, Y+15	; 0x0f
    1622:	98 89       	ldd	r25, Y+16	; 0x10
    1624:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1628:	dc 01       	movw	r26, r24
    162a:	cb 01       	movw	r24, r22
    162c:	89 8b       	std	Y+17, r24	; 0x11
    162e:	9a 8b       	std	Y+18, r25	; 0x12
    1630:	ab 8b       	std	Y+19, r26	; 0x13
    1632:	bc 8b       	std	Y+20, r27	; 0x14
    1634:	20 e0       	ldi	r18, 0x00	; 0
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	40 e8       	ldi	r20, 0x80	; 128
    163a:	5f e3       	ldi	r21, 0x3F	; 63
    163c:	69 89       	ldd	r22, Y+17	; 0x11
    163e:	7a 89       	ldd	r23, Y+18	; 0x12
    1640:	8b 89       	ldd	r24, Y+19	; 0x13
    1642:	9c 89       	ldd	r25, Y+20	; 0x14
    1644:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    1648:	88 23       	and	r24, r24
    164a:	2c f4       	brge	.+10     	; 0x1656 <LCD_init+0x362>
    164c:	81 e0       	ldi	r24, 0x01	; 1
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	9e 8b       	std	Y+22, r25	; 0x16
    1652:	8d 8b       	std	Y+21, r24	; 0x15
    1654:	3f c0       	rjmp	.+126    	; 0x16d4 <LCD_init+0x3e0>
    1656:	20 e0       	ldi	r18, 0x00	; 0
    1658:	3f ef       	ldi	r19, 0xFF	; 255
    165a:	4f e7       	ldi	r20, 0x7F	; 127
    165c:	57 e4       	ldi	r21, 0x47	; 71
    165e:	69 89       	ldd	r22, Y+17	; 0x11
    1660:	7a 89       	ldd	r23, Y+18	; 0x12
    1662:	8b 89       	ldd	r24, Y+19	; 0x13
    1664:	9c 89       	ldd	r25, Y+20	; 0x14
    1666:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    166a:	18 16       	cp	r1, r24
    166c:	4c f5       	brge	.+82     	; 0x16c0 <LCD_init+0x3cc>
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	40 e2       	ldi	r20, 0x20	; 32
    1674:	51 e4       	ldi	r21, 0x41	; 65
    1676:	6d 85       	ldd	r22, Y+13	; 0x0d
    1678:	7e 85       	ldd	r23, Y+14	; 0x0e
    167a:	8f 85       	ldd	r24, Y+15	; 0x0f
    167c:	98 89       	ldd	r25, Y+16	; 0x10
    167e:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1682:	dc 01       	movw	r26, r24
    1684:	cb 01       	movw	r24, r22
    1686:	bc 01       	movw	r22, r24
    1688:	cd 01       	movw	r24, r26
    168a:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    168e:	dc 01       	movw	r26, r24
    1690:	cb 01       	movw	r24, r22
    1692:	9e 8b       	std	Y+22, r25	; 0x16
    1694:	8d 8b       	std	Y+21, r24	; 0x15
    1696:	0f c0       	rjmp	.+30     	; 0x16b6 <LCD_init+0x3c2>
    1698:	80 e9       	ldi	r24, 0x90	; 144
    169a:	91 e0       	ldi	r25, 0x01	; 1
    169c:	98 8f       	std	Y+24, r25	; 0x18
    169e:	8f 8b       	std	Y+23, r24	; 0x17
    16a0:	8f 89       	ldd	r24, Y+23	; 0x17
    16a2:	98 8d       	ldd	r25, Y+24	; 0x18
    16a4:	01 97       	sbiw	r24, 0x01	; 1
    16a6:	f1 f7       	brne	.-4      	; 0x16a4 <LCD_init+0x3b0>
    16a8:	98 8f       	std	Y+24, r25	; 0x18
    16aa:	8f 8b       	std	Y+23, r24	; 0x17
    16ac:	8d 89       	ldd	r24, Y+21	; 0x15
    16ae:	9e 89       	ldd	r25, Y+22	; 0x16
    16b0:	01 97       	sbiw	r24, 0x01	; 1
    16b2:	9e 8b       	std	Y+22, r25	; 0x16
    16b4:	8d 8b       	std	Y+21, r24	; 0x15
    16b6:	8d 89       	ldd	r24, Y+21	; 0x15
    16b8:	9e 89       	ldd	r25, Y+22	; 0x16
    16ba:	89 2b       	or	r24, r25
    16bc:	69 f7       	brne	.-38     	; 0x1698 <LCD_init+0x3a4>
    16be:	14 c0       	rjmp	.+40     	; 0x16e8 <LCD_init+0x3f4>
    16c0:	69 89       	ldd	r22, Y+17	; 0x11
    16c2:	7a 89       	ldd	r23, Y+18	; 0x12
    16c4:	8b 89       	ldd	r24, Y+19	; 0x13
    16c6:	9c 89       	ldd	r25, Y+20	; 0x14
    16c8:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    16cc:	dc 01       	movw	r26, r24
    16ce:	cb 01       	movw	r24, r22
    16d0:	9e 8b       	std	Y+22, r25	; 0x16
    16d2:	8d 8b       	std	Y+21, r24	; 0x15
    16d4:	8d 89       	ldd	r24, Y+21	; 0x15
    16d6:	9e 89       	ldd	r25, Y+22	; 0x16
    16d8:	9a 8f       	std	Y+26, r25	; 0x1a
    16da:	89 8f       	std	Y+25, r24	; 0x19
    16dc:	89 8d       	ldd	r24, Y+25	; 0x19
    16de:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16e0:	01 97       	sbiw	r24, 0x01	; 1
    16e2:	f1 f7       	brne	.-4      	; 0x16e0 <LCD_init+0x3ec>
    16e4:	9a 8f       	std	Y+26, r25	; 0x1a
    16e6:	89 8f       	std	Y+25, r24	; 0x19
    16e8:	86 e0       	ldi	r24, 0x06	; 6
    16ea:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    16ee:	00 00       	nop
    16f0:	e8 96       	adiw	r28, 0x38	; 56
    16f2:	0f b6       	in	r0, 0x3f	; 63
    16f4:	f8 94       	cli
    16f6:	de bf       	out	0x3e, r29	; 62
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	cd bf       	out	0x3d, r28	; 61
    16fc:	df 91       	pop	r29
    16fe:	cf 91       	pop	r28
    1700:	08 95       	ret

00001702 <LCD_sendData>:
    1702:	cf 93       	push	r28
    1704:	df 93       	push	r29
    1706:	cd b7       	in	r28, 0x3d	; 61
    1708:	de b7       	in	r29, 0x3e	; 62
    170a:	6d 97       	sbiw	r28, 0x1d	; 29
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	f8 94       	cli
    1710:	de bf       	out	0x3e, r29	; 62
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	cd bf       	out	0x3d, r28	; 61
    1716:	8d 8f       	std	Y+29, r24	; 0x1d
    1718:	8d 8d       	ldd	r24, Y+29	; 0x1d
    171a:	82 95       	swap	r24
    171c:	8f 70       	andi	r24, 0x0F	; 15
    171e:	81 70       	andi	r24, 0x01	; 1
    1720:	68 2f       	mov	r22, r24
    1722:	84 e0       	ldi	r24, 0x04	; 4
    1724:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1728:	8d 8d       	ldd	r24, Y+29	; 0x1d
    172a:	82 95       	swap	r24
    172c:	86 95       	lsr	r24
    172e:	87 70       	andi	r24, 0x07	; 7
    1730:	81 70       	andi	r24, 0x01	; 1
    1732:	68 2f       	mov	r22, r24
    1734:	85 e0       	ldi	r24, 0x05	; 5
    1736:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    173a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    173c:	82 95       	swap	r24
    173e:	86 95       	lsr	r24
    1740:	86 95       	lsr	r24
    1742:	83 70       	andi	r24, 0x03	; 3
    1744:	81 70       	andi	r24, 0x01	; 1
    1746:	68 2f       	mov	r22, r24
    1748:	86 e0       	ldi	r24, 0x06	; 6
    174a:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    174e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1750:	88 1f       	adc	r24, r24
    1752:	88 27       	eor	r24, r24
    1754:	88 1f       	adc	r24, r24
    1756:	68 2f       	mov	r22, r24
    1758:	87 e0       	ldi	r24, 0x07	; 7
    175a:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    175e:	61 e0       	ldi	r22, 0x01	; 1
    1760:	8b e0       	ldi	r24, 0x0B	; 11
    1762:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1766:	80 e0       	ldi	r24, 0x00	; 0
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	a0 e8       	ldi	r26, 0x80	; 128
    176c:	bf e3       	ldi	r27, 0x3F	; 63
    176e:	89 83       	std	Y+1, r24	; 0x01
    1770:	9a 83       	std	Y+2, r25	; 0x02
    1772:	ab 83       	std	Y+3, r26	; 0x03
    1774:	bc 83       	std	Y+4, r27	; 0x04
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	4a e7       	ldi	r20, 0x7A	; 122
    177c:	55 e4       	ldi	r21, 0x45	; 69
    177e:	69 81       	ldd	r22, Y+1	; 0x01
    1780:	7a 81       	ldd	r23, Y+2	; 0x02
    1782:	8b 81       	ldd	r24, Y+3	; 0x03
    1784:	9c 81       	ldd	r25, Y+4	; 0x04
    1786:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    178a:	dc 01       	movw	r26, r24
    178c:	cb 01       	movw	r24, r22
    178e:	8b 8b       	std	Y+19, r24	; 0x13
    1790:	9c 8b       	std	Y+20, r25	; 0x14
    1792:	ad 8b       	std	Y+21, r26	; 0x15
    1794:	be 8b       	std	Y+22, r27	; 0x16
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	40 e8       	ldi	r20, 0x80	; 128
    179c:	5f e3       	ldi	r21, 0x3F	; 63
    179e:	6b 89       	ldd	r22, Y+19	; 0x13
    17a0:	7c 89       	ldd	r23, Y+20	; 0x14
    17a2:	8d 89       	ldd	r24, Y+21	; 0x15
    17a4:	9e 89       	ldd	r25, Y+22	; 0x16
    17a6:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    17aa:	88 23       	and	r24, r24
    17ac:	2c f4       	brge	.+10     	; 0x17b8 <LCD_sendData+0xb6>
    17ae:	81 e0       	ldi	r24, 0x01	; 1
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	98 8f       	std	Y+24, r25	; 0x18
    17b4:	8f 8b       	std	Y+23, r24	; 0x17
    17b6:	3f c0       	rjmp	.+126    	; 0x1836 <LCD_sendData+0x134>
    17b8:	20 e0       	ldi	r18, 0x00	; 0
    17ba:	3f ef       	ldi	r19, 0xFF	; 255
    17bc:	4f e7       	ldi	r20, 0x7F	; 127
    17be:	57 e4       	ldi	r21, 0x47	; 71
    17c0:	6b 89       	ldd	r22, Y+19	; 0x13
    17c2:	7c 89       	ldd	r23, Y+20	; 0x14
    17c4:	8d 89       	ldd	r24, Y+21	; 0x15
    17c6:	9e 89       	ldd	r25, Y+22	; 0x16
    17c8:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    17cc:	18 16       	cp	r1, r24
    17ce:	4c f5       	brge	.+82     	; 0x1822 <LCD_sendData+0x120>
    17d0:	20 e0       	ldi	r18, 0x00	; 0
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	40 e2       	ldi	r20, 0x20	; 32
    17d6:	51 e4       	ldi	r21, 0x41	; 65
    17d8:	69 81       	ldd	r22, Y+1	; 0x01
    17da:	7a 81       	ldd	r23, Y+2	; 0x02
    17dc:	8b 81       	ldd	r24, Y+3	; 0x03
    17de:	9c 81       	ldd	r25, Y+4	; 0x04
    17e0:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    17e4:	dc 01       	movw	r26, r24
    17e6:	cb 01       	movw	r24, r22
    17e8:	bc 01       	movw	r22, r24
    17ea:	cd 01       	movw	r24, r26
    17ec:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    17f0:	dc 01       	movw	r26, r24
    17f2:	cb 01       	movw	r24, r22
    17f4:	98 8f       	std	Y+24, r25	; 0x18
    17f6:	8f 8b       	std	Y+23, r24	; 0x17
    17f8:	0f c0       	rjmp	.+30     	; 0x1818 <LCD_sendData+0x116>
    17fa:	80 e9       	ldi	r24, 0x90	; 144
    17fc:	91 e0       	ldi	r25, 0x01	; 1
    17fe:	9a 8f       	std	Y+26, r25	; 0x1a
    1800:	89 8f       	std	Y+25, r24	; 0x19
    1802:	89 8d       	ldd	r24, Y+25	; 0x19
    1804:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1806:	01 97       	sbiw	r24, 0x01	; 1
    1808:	f1 f7       	brne	.-4      	; 0x1806 <LCD_sendData+0x104>
    180a:	9a 8f       	std	Y+26, r25	; 0x1a
    180c:	89 8f       	std	Y+25, r24	; 0x19
    180e:	8f 89       	ldd	r24, Y+23	; 0x17
    1810:	98 8d       	ldd	r25, Y+24	; 0x18
    1812:	01 97       	sbiw	r24, 0x01	; 1
    1814:	98 8f       	std	Y+24, r25	; 0x18
    1816:	8f 8b       	std	Y+23, r24	; 0x17
    1818:	8f 89       	ldd	r24, Y+23	; 0x17
    181a:	98 8d       	ldd	r25, Y+24	; 0x18
    181c:	89 2b       	or	r24, r25
    181e:	69 f7       	brne	.-38     	; 0x17fa <LCD_sendData+0xf8>
    1820:	14 c0       	rjmp	.+40     	; 0x184a <LCD_sendData+0x148>
    1822:	6b 89       	ldd	r22, Y+19	; 0x13
    1824:	7c 89       	ldd	r23, Y+20	; 0x14
    1826:	8d 89       	ldd	r24, Y+21	; 0x15
    1828:	9e 89       	ldd	r25, Y+22	; 0x16
    182a:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    182e:	dc 01       	movw	r26, r24
    1830:	cb 01       	movw	r24, r22
    1832:	98 8f       	std	Y+24, r25	; 0x18
    1834:	8f 8b       	std	Y+23, r24	; 0x17
    1836:	8f 89       	ldd	r24, Y+23	; 0x17
    1838:	98 8d       	ldd	r25, Y+24	; 0x18
    183a:	9c 8f       	std	Y+28, r25	; 0x1c
    183c:	8b 8f       	std	Y+27, r24	; 0x1b
    183e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1840:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1842:	01 97       	sbiw	r24, 0x01	; 1
    1844:	f1 f7       	brne	.-4      	; 0x1842 <LCD_sendData+0x140>
    1846:	9c 8f       	std	Y+28, r25	; 0x1c
    1848:	8b 8f       	std	Y+27, r24	; 0x1b
    184a:	60 e0       	ldi	r22, 0x00	; 0
    184c:	8b e0       	ldi	r24, 0x0B	; 11
    184e:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1852:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1854:	81 70       	andi	r24, 0x01	; 1
    1856:	68 2f       	mov	r22, r24
    1858:	84 e0       	ldi	r24, 0x04	; 4
    185a:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    185e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1860:	86 95       	lsr	r24
    1862:	81 70       	andi	r24, 0x01	; 1
    1864:	68 2f       	mov	r22, r24
    1866:	85 e0       	ldi	r24, 0x05	; 5
    1868:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    186c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    186e:	86 95       	lsr	r24
    1870:	86 95       	lsr	r24
    1872:	81 70       	andi	r24, 0x01	; 1
    1874:	68 2f       	mov	r22, r24
    1876:	86 e0       	ldi	r24, 0x06	; 6
    1878:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    187c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    187e:	86 95       	lsr	r24
    1880:	86 95       	lsr	r24
    1882:	86 95       	lsr	r24
    1884:	81 70       	andi	r24, 0x01	; 1
    1886:	68 2f       	mov	r22, r24
    1888:	87 e0       	ldi	r24, 0x07	; 7
    188a:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    188e:	61 e0       	ldi	r22, 0x01	; 1
    1890:	8b e0       	ldi	r24, 0x0B	; 11
    1892:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1896:	80 e0       	ldi	r24, 0x00	; 0
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	a0 e8       	ldi	r26, 0x80	; 128
    189c:	bf e3       	ldi	r27, 0x3F	; 63
    189e:	8d 83       	std	Y+5, r24	; 0x05
    18a0:	9e 83       	std	Y+6, r25	; 0x06
    18a2:	af 83       	std	Y+7, r26	; 0x07
    18a4:	b8 87       	std	Y+8, r27	; 0x08
    18a6:	20 e0       	ldi	r18, 0x00	; 0
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	4a e7       	ldi	r20, 0x7A	; 122
    18ac:	55 e4       	ldi	r21, 0x45	; 69
    18ae:	6d 81       	ldd	r22, Y+5	; 0x05
    18b0:	7e 81       	ldd	r23, Y+6	; 0x06
    18b2:	8f 81       	ldd	r24, Y+7	; 0x07
    18b4:	98 85       	ldd	r25, Y+8	; 0x08
    18b6:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    18ba:	dc 01       	movw	r26, r24
    18bc:	cb 01       	movw	r24, r22
    18be:	89 87       	std	Y+9, r24	; 0x09
    18c0:	9a 87       	std	Y+10, r25	; 0x0a
    18c2:	ab 87       	std	Y+11, r26	; 0x0b
    18c4:	bc 87       	std	Y+12, r27	; 0x0c
    18c6:	20 e0       	ldi	r18, 0x00	; 0
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	40 e8       	ldi	r20, 0x80	; 128
    18cc:	5f e3       	ldi	r21, 0x3F	; 63
    18ce:	69 85       	ldd	r22, Y+9	; 0x09
    18d0:	7a 85       	ldd	r23, Y+10	; 0x0a
    18d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    18d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    18d6:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    18da:	88 23       	and	r24, r24
    18dc:	2c f4       	brge	.+10     	; 0x18e8 <LCD_sendData+0x1e6>
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	90 e0       	ldi	r25, 0x00	; 0
    18e2:	9e 87       	std	Y+14, r25	; 0x0e
    18e4:	8d 87       	std	Y+13, r24	; 0x0d
    18e6:	3f c0       	rjmp	.+126    	; 0x1966 <LCD_sendData+0x264>
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	3f ef       	ldi	r19, 0xFF	; 255
    18ec:	4f e7       	ldi	r20, 0x7F	; 127
    18ee:	57 e4       	ldi	r21, 0x47	; 71
    18f0:	69 85       	ldd	r22, Y+9	; 0x09
    18f2:	7a 85       	ldd	r23, Y+10	; 0x0a
    18f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    18f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    18f8:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    18fc:	18 16       	cp	r1, r24
    18fe:	4c f5       	brge	.+82     	; 0x1952 <LCD_sendData+0x250>
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	40 e2       	ldi	r20, 0x20	; 32
    1906:	51 e4       	ldi	r21, 0x41	; 65
    1908:	6d 81       	ldd	r22, Y+5	; 0x05
    190a:	7e 81       	ldd	r23, Y+6	; 0x06
    190c:	8f 81       	ldd	r24, Y+7	; 0x07
    190e:	98 85       	ldd	r25, Y+8	; 0x08
    1910:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1914:	dc 01       	movw	r26, r24
    1916:	cb 01       	movw	r24, r22
    1918:	bc 01       	movw	r22, r24
    191a:	cd 01       	movw	r24, r26
    191c:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    1920:	dc 01       	movw	r26, r24
    1922:	cb 01       	movw	r24, r22
    1924:	9e 87       	std	Y+14, r25	; 0x0e
    1926:	8d 87       	std	Y+13, r24	; 0x0d
    1928:	0f c0       	rjmp	.+30     	; 0x1948 <LCD_sendData+0x246>
    192a:	80 e9       	ldi	r24, 0x90	; 144
    192c:	91 e0       	ldi	r25, 0x01	; 1
    192e:	98 8b       	std	Y+16, r25	; 0x10
    1930:	8f 87       	std	Y+15, r24	; 0x0f
    1932:	8f 85       	ldd	r24, Y+15	; 0x0f
    1934:	98 89       	ldd	r25, Y+16	; 0x10
    1936:	01 97       	sbiw	r24, 0x01	; 1
    1938:	f1 f7       	brne	.-4      	; 0x1936 <LCD_sendData+0x234>
    193a:	98 8b       	std	Y+16, r25	; 0x10
    193c:	8f 87       	std	Y+15, r24	; 0x0f
    193e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1940:	9e 85       	ldd	r25, Y+14	; 0x0e
    1942:	01 97       	sbiw	r24, 0x01	; 1
    1944:	9e 87       	std	Y+14, r25	; 0x0e
    1946:	8d 87       	std	Y+13, r24	; 0x0d
    1948:	8d 85       	ldd	r24, Y+13	; 0x0d
    194a:	9e 85       	ldd	r25, Y+14	; 0x0e
    194c:	89 2b       	or	r24, r25
    194e:	69 f7       	brne	.-38     	; 0x192a <LCD_sendData+0x228>
    1950:	14 c0       	rjmp	.+40     	; 0x197a <LCD_sendData+0x278>
    1952:	69 85       	ldd	r22, Y+9	; 0x09
    1954:	7a 85       	ldd	r23, Y+10	; 0x0a
    1956:	8b 85       	ldd	r24, Y+11	; 0x0b
    1958:	9c 85       	ldd	r25, Y+12	; 0x0c
    195a:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    195e:	dc 01       	movw	r26, r24
    1960:	cb 01       	movw	r24, r22
    1962:	9e 87       	std	Y+14, r25	; 0x0e
    1964:	8d 87       	std	Y+13, r24	; 0x0d
    1966:	8d 85       	ldd	r24, Y+13	; 0x0d
    1968:	9e 85       	ldd	r25, Y+14	; 0x0e
    196a:	9a 8b       	std	Y+18, r25	; 0x12
    196c:	89 8b       	std	Y+17, r24	; 0x11
    196e:	89 89       	ldd	r24, Y+17	; 0x11
    1970:	9a 89       	ldd	r25, Y+18	; 0x12
    1972:	01 97       	sbiw	r24, 0x01	; 1
    1974:	f1 f7       	brne	.-4      	; 0x1972 <LCD_sendData+0x270>
    1976:	9a 8b       	std	Y+18, r25	; 0x12
    1978:	89 8b       	std	Y+17, r24	; 0x11
    197a:	60 e0       	ldi	r22, 0x00	; 0
    197c:	8b e0       	ldi	r24, 0x0B	; 11
    197e:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    1982:	00 00       	nop
    1984:	6d 96       	adiw	r28, 0x1d	; 29
    1986:	0f b6       	in	r0, 0x3f	; 63
    1988:	f8 94       	cli
    198a:	de bf       	out	0x3e, r29	; 62
    198c:	0f be       	out	0x3f, r0	; 63
    198e:	cd bf       	out	0x3d, r28	; 61
    1990:	df 91       	pop	r29
    1992:	cf 91       	pop	r28
    1994:	08 95       	ret

00001996 <LCD_writeChar>:
    1996:	cf 93       	push	r28
    1998:	df 93       	push	r29
    199a:	1f 92       	push	r1
    199c:	cd b7       	in	r28, 0x3d	; 61
    199e:	de b7       	in	r29, 0x3e	; 62
    19a0:	89 83       	std	Y+1, r24	; 0x01
    19a2:	60 e0       	ldi	r22, 0x00	; 0
    19a4:	8a e0       	ldi	r24, 0x0A	; 10
    19a6:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    19aa:	61 e0       	ldi	r22, 0x01	; 1
    19ac:	89 e0       	ldi	r24, 0x09	; 9
    19ae:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    19b2:	89 81       	ldd	r24, Y+1	; 0x01
    19b4:	0e 94 81 0b 	call	0x1702	; 0x1702 <LCD_sendData>
    19b8:	00 00       	nop
    19ba:	0f 90       	pop	r0
    19bc:	df 91       	pop	r29
    19be:	cf 91       	pop	r28
    19c0:	08 95       	ret

000019c2 <LCD_writeCmd>:
    19c2:	cf 93       	push	r28
    19c4:	df 93       	push	r29
    19c6:	1f 92       	push	r1
    19c8:	cd b7       	in	r28, 0x3d	; 61
    19ca:	de b7       	in	r29, 0x3e	; 62
    19cc:	89 83       	std	Y+1, r24	; 0x01
    19ce:	60 e0       	ldi	r22, 0x00	; 0
    19d0:	8a e0       	ldi	r24, 0x0A	; 10
    19d2:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    19d6:	60 e0       	ldi	r22, 0x00	; 0
    19d8:	89 e0       	ldi	r24, 0x09	; 9
    19da:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    19de:	89 81       	ldd	r24, Y+1	; 0x01
    19e0:	0e 94 81 0b 	call	0x1702	; 0x1702 <LCD_sendData>
    19e4:	00 00       	nop
    19e6:	0f 90       	pop	r0
    19e8:	df 91       	pop	r29
    19ea:	cf 91       	pop	r28
    19ec:	08 95       	ret

000019ee <LCD_writeStr>:
    19ee:	cf 93       	push	r28
    19f0:	df 93       	push	r29
    19f2:	00 d0       	rcall	.+0      	; 0x19f4 <LCD_writeStr+0x6>
    19f4:	1f 92       	push	r1
    19f6:	cd b7       	in	r28, 0x3d	; 61
    19f8:	de b7       	in	r29, 0x3e	; 62
    19fa:	9b 83       	std	Y+3, r25	; 0x03
    19fc:	8a 83       	std	Y+2, r24	; 0x02
    19fe:	19 82       	std	Y+1, r1	; 0x01
    1a00:	0e c0       	rjmp	.+28     	; 0x1a1e <LCD_writeStr+0x30>
    1a02:	89 81       	ldd	r24, Y+1	; 0x01
    1a04:	88 2f       	mov	r24, r24
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	2a 81       	ldd	r18, Y+2	; 0x02
    1a0a:	3b 81       	ldd	r19, Y+3	; 0x03
    1a0c:	82 0f       	add	r24, r18
    1a0e:	93 1f       	adc	r25, r19
    1a10:	fc 01       	movw	r30, r24
    1a12:	80 81       	ld	r24, Z
    1a14:	0e 94 cb 0c 	call	0x1996	; 0x1996 <LCD_writeChar>
    1a18:	89 81       	ldd	r24, Y+1	; 0x01
    1a1a:	8f 5f       	subi	r24, 0xFF	; 255
    1a1c:	89 83       	std	Y+1, r24	; 0x01
    1a1e:	89 81       	ldd	r24, Y+1	; 0x01
    1a20:	88 2f       	mov	r24, r24
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	2a 81       	ldd	r18, Y+2	; 0x02
    1a26:	3b 81       	ldd	r19, Y+3	; 0x03
    1a28:	82 0f       	add	r24, r18
    1a2a:	93 1f       	adc	r25, r19
    1a2c:	fc 01       	movw	r30, r24
    1a2e:	80 81       	ld	r24, Z
    1a30:	88 23       	and	r24, r24
    1a32:	39 f7       	brne	.-50     	; 0x1a02 <LCD_writeStr+0x14>
    1a34:	00 00       	nop
    1a36:	0f 90       	pop	r0
    1a38:	0f 90       	pop	r0
    1a3a:	0f 90       	pop	r0
    1a3c:	df 91       	pop	r29
    1a3e:	cf 91       	pop	r28
    1a40:	08 95       	ret

00001a42 <LCD_clearDis>:
    1a42:	cf 93       	push	r28
    1a44:	df 93       	push	r29
    1a46:	cd b7       	in	r28, 0x3d	; 61
    1a48:	de b7       	in	r29, 0x3e	; 62
    1a4a:	2e 97       	sbiw	r28, 0x0e	; 14
    1a4c:	0f b6       	in	r0, 0x3f	; 63
    1a4e:	f8 94       	cli
    1a50:	de bf       	out	0x3e, r29	; 62
    1a52:	0f be       	out	0x3f, r0	; 63
    1a54:	cd bf       	out	0x3d, r28	; 61
    1a56:	81 e0       	ldi	r24, 0x01	; 1
    1a58:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    1a5c:	80 e0       	ldi	r24, 0x00	; 0
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	a0 e8       	ldi	r26, 0x80	; 128
    1a62:	bf e3       	ldi	r27, 0x3F	; 63
    1a64:	89 83       	std	Y+1, r24	; 0x01
    1a66:	9a 83       	std	Y+2, r25	; 0x02
    1a68:	ab 83       	std	Y+3, r26	; 0x03
    1a6a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1a6c:	20 e0       	ldi	r18, 0x00	; 0
    1a6e:	30 e0       	ldi	r19, 0x00	; 0
    1a70:	4a e7       	ldi	r20, 0x7A	; 122
    1a72:	55 e4       	ldi	r21, 0x45	; 69
    1a74:	69 81       	ldd	r22, Y+1	; 0x01
    1a76:	7a 81       	ldd	r23, Y+2	; 0x02
    1a78:	8b 81       	ldd	r24, Y+3	; 0x03
    1a7a:	9c 81       	ldd	r25, Y+4	; 0x04
    1a7c:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1a80:	dc 01       	movw	r26, r24
    1a82:	cb 01       	movw	r24, r22
    1a84:	8d 83       	std	Y+5, r24	; 0x05
    1a86:	9e 83       	std	Y+6, r25	; 0x06
    1a88:	af 83       	std	Y+7, r26	; 0x07
    1a8a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    1a8c:	20 e0       	ldi	r18, 0x00	; 0
    1a8e:	30 e0       	ldi	r19, 0x00	; 0
    1a90:	40 e8       	ldi	r20, 0x80	; 128
    1a92:	5f e3       	ldi	r21, 0x3F	; 63
    1a94:	6d 81       	ldd	r22, Y+5	; 0x05
    1a96:	7e 81       	ldd	r23, Y+6	; 0x06
    1a98:	8f 81       	ldd	r24, Y+7	; 0x07
    1a9a:	98 85       	ldd	r25, Y+8	; 0x08
    1a9c:	0e 94 9c 14 	call	0x2938	; 0x2938 <__cmpsf2>
    1aa0:	88 23       	and	r24, r24
    1aa2:	2c f4       	brge	.+10     	; 0x1aae <LCD_clearDis+0x6c>
		__ticks = 1;
    1aa4:	81 e0       	ldi	r24, 0x01	; 1
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	9a 87       	std	Y+10, r25	; 0x0a
    1aaa:	89 87       	std	Y+9, r24	; 0x09
    1aac:	3f c0       	rjmp	.+126    	; 0x1b2c <LCD_clearDis+0xea>
	else if (__tmp > 65535)
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	3f ef       	ldi	r19, 0xFF	; 255
    1ab2:	4f e7       	ldi	r20, 0x7F	; 127
    1ab4:	57 e4       	ldi	r21, 0x47	; 71
    1ab6:	6d 81       	ldd	r22, Y+5	; 0x05
    1ab8:	7e 81       	ldd	r23, Y+6	; 0x06
    1aba:	8f 81       	ldd	r24, Y+7	; 0x07
    1abc:	98 85       	ldd	r25, Y+8	; 0x08
    1abe:	0e 94 82 15 	call	0x2b04	; 0x2b04 <__gesf2>
    1ac2:	18 16       	cp	r1, r24
    1ac4:	4c f5       	brge	.+82     	; 0x1b18 <LCD_clearDis+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ac6:	20 e0       	ldi	r18, 0x00	; 0
    1ac8:	30 e0       	ldi	r19, 0x00	; 0
    1aca:	40 e2       	ldi	r20, 0x20	; 32
    1acc:	51 e4       	ldi	r21, 0x41	; 65
    1ace:	69 81       	ldd	r22, Y+1	; 0x01
    1ad0:	7a 81       	ldd	r23, Y+2	; 0x02
    1ad2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad6:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <__mulsf3>
    1ada:	dc 01       	movw	r26, r24
    1adc:	cb 01       	movw	r24, r22
    1ade:	bc 01       	movw	r22, r24
    1ae0:	cd 01       	movw	r24, r26
    1ae2:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    1ae6:	dc 01       	movw	r26, r24
    1ae8:	cb 01       	movw	r24, r22
    1aea:	9a 87       	std	Y+10, r25	; 0x0a
    1aec:	89 87       	std	Y+9, r24	; 0x09
    1aee:	0f c0       	rjmp	.+30     	; 0x1b0e <LCD_clearDis+0xcc>
    1af0:	80 e9       	ldi	r24, 0x90	; 144
    1af2:	91 e0       	ldi	r25, 0x01	; 1
    1af4:	9c 87       	std	Y+12, r25	; 0x0c
    1af6:	8b 87       	std	Y+11, r24	; 0x0b
    1af8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1afa:	9c 85       	ldd	r25, Y+12	; 0x0c
    1afc:	01 97       	sbiw	r24, 0x01	; 1
    1afe:	f1 f7       	brne	.-4      	; 0x1afc <LCD_clearDis+0xba>
    1b00:	9c 87       	std	Y+12, r25	; 0x0c
    1b02:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b04:	89 85       	ldd	r24, Y+9	; 0x09
    1b06:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b08:	01 97       	sbiw	r24, 0x01	; 1
    1b0a:	9a 87       	std	Y+10, r25	; 0x0a
    1b0c:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b0e:	89 85       	ldd	r24, Y+9	; 0x09
    1b10:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b12:	89 2b       	or	r24, r25
    1b14:	69 f7       	brne	.-38     	; 0x1af0 <LCD_clearDis+0xae>
    1b16:	14 c0       	rjmp	.+40     	; 0x1b40 <LCD_clearDis+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b18:	6d 81       	ldd	r22, Y+5	; 0x05
    1b1a:	7e 81       	ldd	r23, Y+6	; 0x06
    1b1c:	8f 81       	ldd	r24, Y+7	; 0x07
    1b1e:	98 85       	ldd	r25, Y+8	; 0x08
    1b20:	0e 94 a1 14 	call	0x2942	; 0x2942 <__fixunssfsi>
    1b24:	dc 01       	movw	r26, r24
    1b26:	cb 01       	movw	r24, r22
    1b28:	9a 87       	std	Y+10, r25	; 0x0a
    1b2a:	89 87       	std	Y+9, r24	; 0x09
    1b2c:	89 85       	ldd	r24, Y+9	; 0x09
    1b2e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b30:	9e 87       	std	Y+14, r25	; 0x0e
    1b32:	8d 87       	std	Y+13, r24	; 0x0d
    1b34:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b36:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b38:	01 97       	sbiw	r24, 0x01	; 1
    1b3a:	f1 f7       	brne	.-4      	; 0x1b38 <LCD_clearDis+0xf6>
    1b3c:	9e 87       	std	Y+14, r25	; 0x0e
    1b3e:	8d 87       	std	Y+13, r24	; 0x0d
    1b40:	00 00       	nop
    1b42:	2e 96       	adiw	r28, 0x0e	; 14
    1b44:	0f b6       	in	r0, 0x3f	; 63
    1b46:	f8 94       	cli
    1b48:	de bf       	out	0x3e, r29	; 62
    1b4a:	0f be       	out	0x3f, r0	; 63
    1b4c:	cd bf       	out	0x3d, r28	; 61
    1b4e:	df 91       	pop	r29
    1b50:	cf 91       	pop	r28
    1b52:	08 95       	ret

00001b54 <LCD_goto>:
    1b54:	cf 93       	push	r28
    1b56:	df 93       	push	r29
    1b58:	00 d0       	rcall	.+0      	; 0x1b5a <LCD_goto+0x6>
    1b5a:	cd b7       	in	r28, 0x3d	; 61
    1b5c:	de b7       	in	r29, 0x3e	; 62
    1b5e:	89 83       	std	Y+1, r24	; 0x01
    1b60:	6a 83       	std	Y+2, r22	; 0x02
    1b62:	8a 81       	ldd	r24, Y+2	; 0x02
    1b64:	81 30       	cpi	r24, 0x01	; 1
    1b66:	29 f4       	brne	.+10     	; 0x1b72 <LCD_goto+0x1e>
    1b68:	89 81       	ldd	r24, Y+1	; 0x01
    1b6a:	80 58       	subi	r24, 0x80	; 128
    1b6c:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    1b70:	07 c0       	rjmp	.+14     	; 0x1b80 <LCD_goto+0x2c>
    1b72:	8a 81       	ldd	r24, Y+2	; 0x02
    1b74:	82 30       	cpi	r24, 0x02	; 2
    1b76:	21 f4       	brne	.+8      	; 0x1b80 <LCD_goto+0x2c>
    1b78:	89 81       	ldd	r24, Y+1	; 0x01
    1b7a:	80 54       	subi	r24, 0x40	; 64
    1b7c:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <LCD_writeCmd>
    1b80:	00 00       	nop
    1b82:	0f 90       	pop	r0
    1b84:	0f 90       	pop	r0
    1b86:	df 91       	pop	r29
    1b88:	cf 91       	pop	r28
    1b8a:	08 95       	ret

00001b8c <ADC_init>:
    1b8c:	cf 93       	push	r28
    1b8e:	df 93       	push	r29
    1b90:	cd b7       	in	r28, 0x3d	; 61
    1b92:	de b7       	in	r29, 0x3e	; 62
    1b94:	87 e2       	ldi	r24, 0x27	; 39
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	27 e2       	ldi	r18, 0x27	; 39
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	f9 01       	movw	r30, r18
    1b9e:	20 81       	ld	r18, Z
    1ba0:	20 64       	ori	r18, 0x40	; 64
    1ba2:	fc 01       	movw	r30, r24
    1ba4:	20 83       	st	Z, r18
    1ba6:	87 e2       	ldi	r24, 0x27	; 39
    1ba8:	90 e0       	ldi	r25, 0x00	; 0
    1baa:	27 e2       	ldi	r18, 0x27	; 39
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	f9 01       	movw	r30, r18
    1bb0:	20 81       	ld	r18, Z
    1bb2:	2f 77       	andi	r18, 0x7F	; 127
    1bb4:	fc 01       	movw	r30, r24
    1bb6:	20 83       	st	Z, r18
    1bb8:	86 e2       	ldi	r24, 0x26	; 38
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	26 e2       	ldi	r18, 0x26	; 38
    1bbe:	30 e0       	ldi	r19, 0x00	; 0
    1bc0:	f9 01       	movw	r30, r18
    1bc2:	20 81       	ld	r18, Z
    1bc4:	21 60       	ori	r18, 0x01	; 1
    1bc6:	fc 01       	movw	r30, r24
    1bc8:	20 83       	st	Z, r18
    1bca:	86 e2       	ldi	r24, 0x26	; 38
    1bcc:	90 e0       	ldi	r25, 0x00	; 0
    1bce:	26 e2       	ldi	r18, 0x26	; 38
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	f9 01       	movw	r30, r18
    1bd4:	20 81       	ld	r18, Z
    1bd6:	22 60       	ori	r18, 0x02	; 2
    1bd8:	fc 01       	movw	r30, r24
    1bda:	20 83       	st	Z, r18
    1bdc:	86 e2       	ldi	r24, 0x26	; 38
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	26 e2       	ldi	r18, 0x26	; 38
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	f9 01       	movw	r30, r18
    1be6:	20 81       	ld	r18, Z
    1be8:	24 60       	ori	r18, 0x04	; 4
    1bea:	fc 01       	movw	r30, r24
    1bec:	20 83       	st	Z, r18
    1bee:	86 e2       	ldi	r24, 0x26	; 38
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	26 e2       	ldi	r18, 0x26	; 38
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	f9 01       	movw	r30, r18
    1bf8:	20 81       	ld	r18, Z
    1bfa:	20 68       	ori	r18, 0x80	; 128
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	20 83       	st	Z, r18
    1c00:	00 00       	nop
    1c02:	df 91       	pop	r29
    1c04:	cf 91       	pop	r28
    1c06:	08 95       	ret

00001c08 <ADC_read>:
    1c08:	cf 93       	push	r28
    1c0a:	df 93       	push	r29
    1c0c:	1f 92       	push	r1
    1c0e:	cd b7       	in	r28, 0x3d	; 61
    1c10:	de b7       	in	r29, 0x3e	; 62
    1c12:	89 83       	std	Y+1, r24	; 0x01
    1c14:	89 81       	ldd	r24, Y+1	; 0x01
    1c16:	88 23       	and	r24, r24
    1c18:	71 f5       	brne	.+92     	; 0x1c76 <ADC_read+0x6e>
    1c1a:	87 e2       	ldi	r24, 0x27	; 39
    1c1c:	90 e0       	ldi	r25, 0x00	; 0
    1c1e:	27 e2       	ldi	r18, 0x27	; 39
    1c20:	30 e0       	ldi	r19, 0x00	; 0
    1c22:	f9 01       	movw	r30, r18
    1c24:	20 81       	ld	r18, Z
    1c26:	2e 7f       	andi	r18, 0xFE	; 254
    1c28:	fc 01       	movw	r30, r24
    1c2a:	20 83       	st	Z, r18
    1c2c:	87 e2       	ldi	r24, 0x27	; 39
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	27 e2       	ldi	r18, 0x27	; 39
    1c32:	30 e0       	ldi	r19, 0x00	; 0
    1c34:	f9 01       	movw	r30, r18
    1c36:	20 81       	ld	r18, Z
    1c38:	2d 7f       	andi	r18, 0xFD	; 253
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	20 83       	st	Z, r18
    1c3e:	87 e2       	ldi	r24, 0x27	; 39
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	27 e2       	ldi	r18, 0x27	; 39
    1c44:	30 e0       	ldi	r19, 0x00	; 0
    1c46:	f9 01       	movw	r30, r18
    1c48:	20 81       	ld	r18, Z
    1c4a:	2b 7f       	andi	r18, 0xFB	; 251
    1c4c:	fc 01       	movw	r30, r24
    1c4e:	20 83       	st	Z, r18
    1c50:	87 e2       	ldi	r24, 0x27	; 39
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	27 e2       	ldi	r18, 0x27	; 39
    1c56:	30 e0       	ldi	r19, 0x00	; 0
    1c58:	f9 01       	movw	r30, r18
    1c5a:	20 81       	ld	r18, Z
    1c5c:	27 7f       	andi	r18, 0xF7	; 247
    1c5e:	fc 01       	movw	r30, r24
    1c60:	20 83       	st	Z, r18
    1c62:	87 e2       	ldi	r24, 0x27	; 39
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	27 e2       	ldi	r18, 0x27	; 39
    1c68:	30 e0       	ldi	r19, 0x00	; 0
    1c6a:	f9 01       	movw	r30, r18
    1c6c:	20 81       	ld	r18, Z
    1c6e:	2f 7e       	andi	r18, 0xEF	; 239
    1c70:	fc 01       	movw	r30, r24
    1c72:	20 83       	st	Z, r18
    1c74:	61 c0       	rjmp	.+194    	; 0x1d38 <ADC_read+0x130>
    1c76:	89 81       	ldd	r24, Y+1	; 0x01
    1c78:	81 30       	cpi	r24, 0x01	; 1
    1c7a:	71 f5       	brne	.+92     	; 0x1cd8 <ADC_read+0xd0>
    1c7c:	87 e2       	ldi	r24, 0x27	; 39
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	27 e2       	ldi	r18, 0x27	; 39
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	f9 01       	movw	r30, r18
    1c86:	20 81       	ld	r18, Z
    1c88:	21 60       	ori	r18, 0x01	; 1
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	20 83       	st	Z, r18
    1c8e:	87 e2       	ldi	r24, 0x27	; 39
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	27 e2       	ldi	r18, 0x27	; 39
    1c94:	30 e0       	ldi	r19, 0x00	; 0
    1c96:	f9 01       	movw	r30, r18
    1c98:	20 81       	ld	r18, Z
    1c9a:	2d 7f       	andi	r18, 0xFD	; 253
    1c9c:	fc 01       	movw	r30, r24
    1c9e:	20 83       	st	Z, r18
    1ca0:	87 e2       	ldi	r24, 0x27	; 39
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	27 e2       	ldi	r18, 0x27	; 39
    1ca6:	30 e0       	ldi	r19, 0x00	; 0
    1ca8:	f9 01       	movw	r30, r18
    1caa:	20 81       	ld	r18, Z
    1cac:	2b 7f       	andi	r18, 0xFB	; 251
    1cae:	fc 01       	movw	r30, r24
    1cb0:	20 83       	st	Z, r18
    1cb2:	87 e2       	ldi	r24, 0x27	; 39
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	27 e2       	ldi	r18, 0x27	; 39
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	f9 01       	movw	r30, r18
    1cbc:	20 81       	ld	r18, Z
    1cbe:	27 7f       	andi	r18, 0xF7	; 247
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	20 83       	st	Z, r18
    1cc4:	87 e2       	ldi	r24, 0x27	; 39
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	27 e2       	ldi	r18, 0x27	; 39
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	f9 01       	movw	r30, r18
    1cce:	20 81       	ld	r18, Z
    1cd0:	2f 7e       	andi	r18, 0xEF	; 239
    1cd2:	fc 01       	movw	r30, r24
    1cd4:	20 83       	st	Z, r18
    1cd6:	30 c0       	rjmp	.+96     	; 0x1d38 <ADC_read+0x130>
    1cd8:	89 81       	ldd	r24, Y+1	; 0x01
    1cda:	82 30       	cpi	r24, 0x02	; 2
    1cdc:	69 f5       	brne	.+90     	; 0x1d38 <ADC_read+0x130>
    1cde:	87 e2       	ldi	r24, 0x27	; 39
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	27 e2       	ldi	r18, 0x27	; 39
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	f9 01       	movw	r30, r18
    1ce8:	20 81       	ld	r18, Z
    1cea:	2e 7f       	andi	r18, 0xFE	; 254
    1cec:	fc 01       	movw	r30, r24
    1cee:	20 83       	st	Z, r18
    1cf0:	87 e2       	ldi	r24, 0x27	; 39
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	27 e2       	ldi	r18, 0x27	; 39
    1cf6:	30 e0       	ldi	r19, 0x00	; 0
    1cf8:	f9 01       	movw	r30, r18
    1cfa:	20 81       	ld	r18, Z
    1cfc:	22 60       	ori	r18, 0x02	; 2
    1cfe:	fc 01       	movw	r30, r24
    1d00:	20 83       	st	Z, r18
    1d02:	87 e2       	ldi	r24, 0x27	; 39
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	27 e2       	ldi	r18, 0x27	; 39
    1d08:	30 e0       	ldi	r19, 0x00	; 0
    1d0a:	f9 01       	movw	r30, r18
    1d0c:	20 81       	ld	r18, Z
    1d0e:	2b 7f       	andi	r18, 0xFB	; 251
    1d10:	fc 01       	movw	r30, r24
    1d12:	20 83       	st	Z, r18
    1d14:	87 e2       	ldi	r24, 0x27	; 39
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	27 e2       	ldi	r18, 0x27	; 39
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	f9 01       	movw	r30, r18
    1d1e:	20 81       	ld	r18, Z
    1d20:	27 7f       	andi	r18, 0xF7	; 247
    1d22:	fc 01       	movw	r30, r24
    1d24:	20 83       	st	Z, r18
    1d26:	87 e2       	ldi	r24, 0x27	; 39
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	27 e2       	ldi	r18, 0x27	; 39
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	f9 01       	movw	r30, r18
    1d30:	20 81       	ld	r18, Z
    1d32:	2f 7e       	andi	r18, 0xEF	; 239
    1d34:	fc 01       	movw	r30, r24
    1d36:	20 83       	st	Z, r18
    1d38:	86 e2       	ldi	r24, 0x26	; 38
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	26 e2       	ldi	r18, 0x26	; 38
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	f9 01       	movw	r30, r18
    1d42:	20 81       	ld	r18, Z
    1d44:	20 64       	ori	r18, 0x40	; 64
    1d46:	fc 01       	movw	r30, r24
    1d48:	20 83       	st	Z, r18
    1d4a:	00 00       	nop
    1d4c:	86 e2       	ldi	r24, 0x26	; 38
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	fc 01       	movw	r30, r24
    1d52:	80 81       	ld	r24, Z
    1d54:	82 95       	swap	r24
    1d56:	86 95       	lsr	r24
    1d58:	86 95       	lsr	r24
    1d5a:	83 70       	andi	r24, 0x03	; 3
    1d5c:	88 2f       	mov	r24, r24
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	81 70       	andi	r24, 0x01	; 1
    1d62:	99 27       	eor	r25, r25
    1d64:	89 2b       	or	r24, r25
    1d66:	91 f7       	brne	.-28     	; 0x1d4c <ADC_read+0x144>
    1d68:	84 e2       	ldi	r24, 0x24	; 36
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	fc 01       	movw	r30, r24
    1d6e:	80 81       	ld	r24, Z
    1d70:	91 81       	ldd	r25, Z+1	; 0x01
    1d72:	0f 90       	pop	r0
    1d74:	df 91       	pop	r29
    1d76:	cf 91       	pop	r28
    1d78:	08 95       	ret

00001d7a <DIO_setPinValue>:
    1d7a:	cf 93       	push	r28
    1d7c:	df 93       	push	r29
    1d7e:	00 d0       	rcall	.+0      	; 0x1d80 <DIO_setPinValue+0x6>
    1d80:	cd b7       	in	r28, 0x3d	; 61
    1d82:	de b7       	in	r29, 0x3e	; 62
    1d84:	89 83       	std	Y+1, r24	; 0x01
    1d86:	6a 83       	std	Y+2, r22	; 0x02
    1d88:	89 81       	ldd	r24, Y+1	; 0x01
    1d8a:	88 30       	cpi	r24, 0x08	; 8
    1d8c:	90 f5       	brcc	.+100    	; 0x1df2 <DIO_setPinValue+0x78>
    1d8e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d90:	81 30       	cpi	r24, 0x01	; 1
    1d92:	a9 f4       	brne	.+42     	; 0x1dbe <DIO_setPinValue+0x44>
    1d94:	8b e3       	ldi	r24, 0x3B	; 59
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	2b e3       	ldi	r18, 0x3B	; 59
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	f9 01       	movw	r30, r18
    1d9e:	20 81       	ld	r18, Z
    1da0:	62 2f       	mov	r22, r18
    1da2:	29 81       	ldd	r18, Y+1	; 0x01
    1da4:	42 2f       	mov	r20, r18
    1da6:	50 e0       	ldi	r21, 0x00	; 0
    1da8:	21 e0       	ldi	r18, 0x01	; 1
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <DIO_setPinValue+0x38>
    1dae:	22 0f       	add	r18, r18
    1db0:	33 1f       	adc	r19, r19
    1db2:	4a 95       	dec	r20
    1db4:	e2 f7       	brpl	.-8      	; 0x1dae <DIO_setPinValue+0x34>
    1db6:	26 2b       	or	r18, r22
    1db8:	fc 01       	movw	r30, r24
    1dba:	20 83       	st	Z, r18
    1dbc:	cd c0       	rjmp	.+410    	; 0x1f58 <DIO_setPinValue+0x1de>
    1dbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc0:	88 23       	and	r24, r24
    1dc2:	09 f0       	breq	.+2      	; 0x1dc6 <DIO_setPinValue+0x4c>
    1dc4:	c9 c0       	rjmp	.+402    	; 0x1f58 <DIO_setPinValue+0x1de>
    1dc6:	8b e3       	ldi	r24, 0x3B	; 59
    1dc8:	90 e0       	ldi	r25, 0x00	; 0
    1dca:	2b e3       	ldi	r18, 0x3B	; 59
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	f9 01       	movw	r30, r18
    1dd0:	20 81       	ld	r18, Z
    1dd2:	62 2f       	mov	r22, r18
    1dd4:	29 81       	ldd	r18, Y+1	; 0x01
    1dd6:	42 2f       	mov	r20, r18
    1dd8:	50 e0       	ldi	r21, 0x00	; 0
    1dda:	21 e0       	ldi	r18, 0x01	; 1
    1ddc:	30 e0       	ldi	r19, 0x00	; 0
    1dde:	02 c0       	rjmp	.+4      	; 0x1de4 <DIO_setPinValue+0x6a>
    1de0:	22 0f       	add	r18, r18
    1de2:	33 1f       	adc	r19, r19
    1de4:	4a 95       	dec	r20
    1de6:	e2 f7       	brpl	.-8      	; 0x1de0 <DIO_setPinValue+0x66>
    1de8:	20 95       	com	r18
    1dea:	26 23       	and	r18, r22
    1dec:	fc 01       	movw	r30, r24
    1dee:	20 83       	st	Z, r18
    1df0:	b3 c0       	rjmp	.+358    	; 0x1f58 <DIO_setPinValue+0x1de>
    1df2:	89 81       	ldd	r24, Y+1	; 0x01
    1df4:	88 30       	cpi	r24, 0x08	; 8
    1df6:	c0 f1       	brcs	.+112    	; 0x1e68 <DIO_setPinValue+0xee>
    1df8:	89 81       	ldd	r24, Y+1	; 0x01
    1dfa:	80 31       	cpi	r24, 0x10	; 16
    1dfc:	a8 f5       	brcc	.+106    	; 0x1e68 <DIO_setPinValue+0xee>
    1dfe:	89 81       	ldd	r24, Y+1	; 0x01
    1e00:	88 50       	subi	r24, 0x08	; 8
    1e02:	89 83       	std	Y+1, r24	; 0x01
    1e04:	8a 81       	ldd	r24, Y+2	; 0x02
    1e06:	81 30       	cpi	r24, 0x01	; 1
    1e08:	a9 f4       	brne	.+42     	; 0x1e34 <DIO_setPinValue+0xba>
    1e0a:	88 e3       	ldi	r24, 0x38	; 56
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	28 e3       	ldi	r18, 0x38	; 56
    1e10:	30 e0       	ldi	r19, 0x00	; 0
    1e12:	f9 01       	movw	r30, r18
    1e14:	20 81       	ld	r18, Z
    1e16:	62 2f       	mov	r22, r18
    1e18:	29 81       	ldd	r18, Y+1	; 0x01
    1e1a:	42 2f       	mov	r20, r18
    1e1c:	50 e0       	ldi	r21, 0x00	; 0
    1e1e:	21 e0       	ldi	r18, 0x01	; 1
    1e20:	30 e0       	ldi	r19, 0x00	; 0
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <DIO_setPinValue+0xae>
    1e24:	22 0f       	add	r18, r18
    1e26:	33 1f       	adc	r19, r19
    1e28:	4a 95       	dec	r20
    1e2a:	e2 f7       	brpl	.-8      	; 0x1e24 <DIO_setPinValue+0xaa>
    1e2c:	26 2b       	or	r18, r22
    1e2e:	fc 01       	movw	r30, r24
    1e30:	20 83       	st	Z, r18
    1e32:	8f c0       	rjmp	.+286    	; 0x1f52 <DIO_setPinValue+0x1d8>
    1e34:	8a 81       	ldd	r24, Y+2	; 0x02
    1e36:	88 23       	and	r24, r24
    1e38:	09 f0       	breq	.+2      	; 0x1e3c <DIO_setPinValue+0xc2>
    1e3a:	8b c0       	rjmp	.+278    	; 0x1f52 <DIO_setPinValue+0x1d8>
    1e3c:	88 e3       	ldi	r24, 0x38	; 56
    1e3e:	90 e0       	ldi	r25, 0x00	; 0
    1e40:	28 e3       	ldi	r18, 0x38	; 56
    1e42:	30 e0       	ldi	r19, 0x00	; 0
    1e44:	f9 01       	movw	r30, r18
    1e46:	20 81       	ld	r18, Z
    1e48:	62 2f       	mov	r22, r18
    1e4a:	29 81       	ldd	r18, Y+1	; 0x01
    1e4c:	42 2f       	mov	r20, r18
    1e4e:	50 e0       	ldi	r21, 0x00	; 0
    1e50:	21 e0       	ldi	r18, 0x01	; 1
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	02 c0       	rjmp	.+4      	; 0x1e5a <DIO_setPinValue+0xe0>
    1e56:	22 0f       	add	r18, r18
    1e58:	33 1f       	adc	r19, r19
    1e5a:	4a 95       	dec	r20
    1e5c:	e2 f7       	brpl	.-8      	; 0x1e56 <DIO_setPinValue+0xdc>
    1e5e:	20 95       	com	r18
    1e60:	26 23       	and	r18, r22
    1e62:	fc 01       	movw	r30, r24
    1e64:	20 83       	st	Z, r18
    1e66:	75 c0       	rjmp	.+234    	; 0x1f52 <DIO_setPinValue+0x1d8>
    1e68:	89 81       	ldd	r24, Y+1	; 0x01
    1e6a:	80 31       	cpi	r24, 0x10	; 16
    1e6c:	c0 f1       	brcs	.+112    	; 0x1ede <DIO_setPinValue+0x164>
    1e6e:	89 81       	ldd	r24, Y+1	; 0x01
    1e70:	89 31       	cpi	r24, 0x19	; 25
    1e72:	a8 f5       	brcc	.+106    	; 0x1ede <DIO_setPinValue+0x164>
    1e74:	89 81       	ldd	r24, Y+1	; 0x01
    1e76:	80 51       	subi	r24, 0x10	; 16
    1e78:	89 83       	std	Y+1, r24	; 0x01
    1e7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7c:	81 30       	cpi	r24, 0x01	; 1
    1e7e:	a9 f4       	brne	.+42     	; 0x1eaa <DIO_setPinValue+0x130>
    1e80:	85 e3       	ldi	r24, 0x35	; 53
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	25 e3       	ldi	r18, 0x35	; 53
    1e86:	30 e0       	ldi	r19, 0x00	; 0
    1e88:	f9 01       	movw	r30, r18
    1e8a:	20 81       	ld	r18, Z
    1e8c:	62 2f       	mov	r22, r18
    1e8e:	29 81       	ldd	r18, Y+1	; 0x01
    1e90:	42 2f       	mov	r20, r18
    1e92:	50 e0       	ldi	r21, 0x00	; 0
    1e94:	21 e0       	ldi	r18, 0x01	; 1
    1e96:	30 e0       	ldi	r19, 0x00	; 0
    1e98:	02 c0       	rjmp	.+4      	; 0x1e9e <DIO_setPinValue+0x124>
    1e9a:	22 0f       	add	r18, r18
    1e9c:	33 1f       	adc	r19, r19
    1e9e:	4a 95       	dec	r20
    1ea0:	e2 f7       	brpl	.-8      	; 0x1e9a <DIO_setPinValue+0x120>
    1ea2:	26 2b       	or	r18, r22
    1ea4:	fc 01       	movw	r30, r24
    1ea6:	20 83       	st	Z, r18
    1ea8:	56 c0       	rjmp	.+172    	; 0x1f56 <DIO_setPinValue+0x1dc>
    1eaa:	8a 81       	ldd	r24, Y+2	; 0x02
    1eac:	88 23       	and	r24, r24
    1eae:	09 f0       	breq	.+2      	; 0x1eb2 <DIO_setPinValue+0x138>
    1eb0:	52 c0       	rjmp	.+164    	; 0x1f56 <DIO_setPinValue+0x1dc>
    1eb2:	85 e3       	ldi	r24, 0x35	; 53
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	25 e3       	ldi	r18, 0x35	; 53
    1eb8:	30 e0       	ldi	r19, 0x00	; 0
    1eba:	f9 01       	movw	r30, r18
    1ebc:	20 81       	ld	r18, Z
    1ebe:	62 2f       	mov	r22, r18
    1ec0:	29 81       	ldd	r18, Y+1	; 0x01
    1ec2:	42 2f       	mov	r20, r18
    1ec4:	50 e0       	ldi	r21, 0x00	; 0
    1ec6:	21 e0       	ldi	r18, 0x01	; 1
    1ec8:	30 e0       	ldi	r19, 0x00	; 0
    1eca:	02 c0       	rjmp	.+4      	; 0x1ed0 <DIO_setPinValue+0x156>
    1ecc:	22 0f       	add	r18, r18
    1ece:	33 1f       	adc	r19, r19
    1ed0:	4a 95       	dec	r20
    1ed2:	e2 f7       	brpl	.-8      	; 0x1ecc <DIO_setPinValue+0x152>
    1ed4:	20 95       	com	r18
    1ed6:	26 23       	and	r18, r22
    1ed8:	fc 01       	movw	r30, r24
    1eda:	20 83       	st	Z, r18
    1edc:	3c c0       	rjmp	.+120    	; 0x1f56 <DIO_setPinValue+0x1dc>
    1ede:	89 81       	ldd	r24, Y+1	; 0x01
    1ee0:	88 31       	cpi	r24, 0x18	; 24
    1ee2:	d0 f1       	brcs	.+116    	; 0x1f58 <DIO_setPinValue+0x1de>
    1ee4:	89 81       	ldd	r24, Y+1	; 0x01
    1ee6:	80 32       	cpi	r24, 0x20	; 32
    1ee8:	b8 f5       	brcc	.+110    	; 0x1f58 <DIO_setPinValue+0x1de>
    1eea:	89 81       	ldd	r24, Y+1	; 0x01
    1eec:	88 51       	subi	r24, 0x18	; 24
    1eee:	89 83       	std	Y+1, r24	; 0x01
    1ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef2:	81 30       	cpi	r24, 0x01	; 1
    1ef4:	a9 f4       	brne	.+42     	; 0x1f20 <DIO_setPinValue+0x1a6>
    1ef6:	82 e3       	ldi	r24, 0x32	; 50
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	22 e3       	ldi	r18, 0x32	; 50
    1efc:	30 e0       	ldi	r19, 0x00	; 0
    1efe:	f9 01       	movw	r30, r18
    1f00:	20 81       	ld	r18, Z
    1f02:	62 2f       	mov	r22, r18
    1f04:	29 81       	ldd	r18, Y+1	; 0x01
    1f06:	42 2f       	mov	r20, r18
    1f08:	50 e0       	ldi	r21, 0x00	; 0
    1f0a:	21 e0       	ldi	r18, 0x01	; 1
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	02 c0       	rjmp	.+4      	; 0x1f14 <DIO_setPinValue+0x19a>
    1f10:	22 0f       	add	r18, r18
    1f12:	33 1f       	adc	r19, r19
    1f14:	4a 95       	dec	r20
    1f16:	e2 f7       	brpl	.-8      	; 0x1f10 <DIO_setPinValue+0x196>
    1f18:	26 2b       	or	r18, r22
    1f1a:	fc 01       	movw	r30, r24
    1f1c:	20 83       	st	Z, r18
    1f1e:	1c c0       	rjmp	.+56     	; 0x1f58 <DIO_setPinValue+0x1de>
    1f20:	8a 81       	ldd	r24, Y+2	; 0x02
    1f22:	88 23       	and	r24, r24
    1f24:	c9 f4       	brne	.+50     	; 0x1f58 <DIO_setPinValue+0x1de>
    1f26:	82 e3       	ldi	r24, 0x32	; 50
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	22 e3       	ldi	r18, 0x32	; 50
    1f2c:	30 e0       	ldi	r19, 0x00	; 0
    1f2e:	f9 01       	movw	r30, r18
    1f30:	20 81       	ld	r18, Z
    1f32:	62 2f       	mov	r22, r18
    1f34:	29 81       	ldd	r18, Y+1	; 0x01
    1f36:	42 2f       	mov	r20, r18
    1f38:	50 e0       	ldi	r21, 0x00	; 0
    1f3a:	21 e0       	ldi	r18, 0x01	; 1
    1f3c:	30 e0       	ldi	r19, 0x00	; 0
    1f3e:	02 c0       	rjmp	.+4      	; 0x1f44 <DIO_setPinValue+0x1ca>
    1f40:	22 0f       	add	r18, r18
    1f42:	33 1f       	adc	r19, r19
    1f44:	4a 95       	dec	r20
    1f46:	e2 f7       	brpl	.-8      	; 0x1f40 <DIO_setPinValue+0x1c6>
    1f48:	20 95       	com	r18
    1f4a:	26 23       	and	r18, r22
    1f4c:	fc 01       	movw	r30, r24
    1f4e:	20 83       	st	Z, r18
    1f50:	03 c0       	rjmp	.+6      	; 0x1f58 <DIO_setPinValue+0x1de>
    1f52:	00 00       	nop
    1f54:	01 c0       	rjmp	.+2      	; 0x1f58 <DIO_setPinValue+0x1de>
    1f56:	00 00       	nop
    1f58:	00 00       	nop
    1f5a:	0f 90       	pop	r0
    1f5c:	0f 90       	pop	r0
    1f5e:	df 91       	pop	r29
    1f60:	cf 91       	pop	r28
    1f62:	08 95       	ret

00001f64 <DIO_setPinDir>:
    1f64:	cf 93       	push	r28
    1f66:	df 93       	push	r29
    1f68:	00 d0       	rcall	.+0      	; 0x1f6a <DIO_setPinDir+0x6>
    1f6a:	cd b7       	in	r28, 0x3d	; 61
    1f6c:	de b7       	in	r29, 0x3e	; 62
    1f6e:	89 83       	std	Y+1, r24	; 0x01
    1f70:	6a 83       	std	Y+2, r22	; 0x02
    1f72:	89 81       	ldd	r24, Y+1	; 0x01
    1f74:	88 30       	cpi	r24, 0x08	; 8
    1f76:	90 f5       	brcc	.+100    	; 0x1fdc <DIO_setPinDir+0x78>
    1f78:	8a 81       	ldd	r24, Y+2	; 0x02
    1f7a:	81 30       	cpi	r24, 0x01	; 1
    1f7c:	a9 f4       	brne	.+42     	; 0x1fa8 <DIO_setPinDir+0x44>
    1f7e:	8a e3       	ldi	r24, 0x3A	; 58
    1f80:	90 e0       	ldi	r25, 0x00	; 0
    1f82:	2a e3       	ldi	r18, 0x3A	; 58
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	f9 01       	movw	r30, r18
    1f88:	20 81       	ld	r18, Z
    1f8a:	62 2f       	mov	r22, r18
    1f8c:	29 81       	ldd	r18, Y+1	; 0x01
    1f8e:	42 2f       	mov	r20, r18
    1f90:	50 e0       	ldi	r21, 0x00	; 0
    1f92:	21 e0       	ldi	r18, 0x01	; 1
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	02 c0       	rjmp	.+4      	; 0x1f9c <DIO_setPinDir+0x38>
    1f98:	22 0f       	add	r18, r18
    1f9a:	33 1f       	adc	r19, r19
    1f9c:	4a 95       	dec	r20
    1f9e:	e2 f7       	brpl	.-8      	; 0x1f98 <DIO_setPinDir+0x34>
    1fa0:	26 2b       	or	r18, r22
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	20 83       	st	Z, r18
    1fa6:	cd c0       	rjmp	.+410    	; 0x2142 <DIO_setPinDir+0x1de>
    1fa8:	8a 81       	ldd	r24, Y+2	; 0x02
    1faa:	88 23       	and	r24, r24
    1fac:	09 f0       	breq	.+2      	; 0x1fb0 <DIO_setPinDir+0x4c>
    1fae:	c9 c0       	rjmp	.+402    	; 0x2142 <DIO_setPinDir+0x1de>
    1fb0:	8a e3       	ldi	r24, 0x3A	; 58
    1fb2:	90 e0       	ldi	r25, 0x00	; 0
    1fb4:	2a e3       	ldi	r18, 0x3A	; 58
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	f9 01       	movw	r30, r18
    1fba:	20 81       	ld	r18, Z
    1fbc:	62 2f       	mov	r22, r18
    1fbe:	29 81       	ldd	r18, Y+1	; 0x01
    1fc0:	42 2f       	mov	r20, r18
    1fc2:	50 e0       	ldi	r21, 0x00	; 0
    1fc4:	21 e0       	ldi	r18, 0x01	; 1
    1fc6:	30 e0       	ldi	r19, 0x00	; 0
    1fc8:	02 c0       	rjmp	.+4      	; 0x1fce <DIO_setPinDir+0x6a>
    1fca:	22 0f       	add	r18, r18
    1fcc:	33 1f       	adc	r19, r19
    1fce:	4a 95       	dec	r20
    1fd0:	e2 f7       	brpl	.-8      	; 0x1fca <DIO_setPinDir+0x66>
    1fd2:	20 95       	com	r18
    1fd4:	26 23       	and	r18, r22
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	20 83       	st	Z, r18
    1fda:	b3 c0       	rjmp	.+358    	; 0x2142 <DIO_setPinDir+0x1de>
    1fdc:	89 81       	ldd	r24, Y+1	; 0x01
    1fde:	88 30       	cpi	r24, 0x08	; 8
    1fe0:	c0 f1       	brcs	.+112    	; 0x2052 <DIO_setPinDir+0xee>
    1fe2:	89 81       	ldd	r24, Y+1	; 0x01
    1fe4:	80 31       	cpi	r24, 0x10	; 16
    1fe6:	a8 f5       	brcc	.+106    	; 0x2052 <DIO_setPinDir+0xee>
    1fe8:	89 81       	ldd	r24, Y+1	; 0x01
    1fea:	88 50       	subi	r24, 0x08	; 8
    1fec:	89 83       	std	Y+1, r24	; 0x01
    1fee:	8a 81       	ldd	r24, Y+2	; 0x02
    1ff0:	81 30       	cpi	r24, 0x01	; 1
    1ff2:	a9 f4       	brne	.+42     	; 0x201e <DIO_setPinDir+0xba>
    1ff4:	87 e3       	ldi	r24, 0x37	; 55
    1ff6:	90 e0       	ldi	r25, 0x00	; 0
    1ff8:	27 e3       	ldi	r18, 0x37	; 55
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	f9 01       	movw	r30, r18
    1ffe:	20 81       	ld	r18, Z
    2000:	62 2f       	mov	r22, r18
    2002:	29 81       	ldd	r18, Y+1	; 0x01
    2004:	42 2f       	mov	r20, r18
    2006:	50 e0       	ldi	r21, 0x00	; 0
    2008:	21 e0       	ldi	r18, 0x01	; 1
    200a:	30 e0       	ldi	r19, 0x00	; 0
    200c:	02 c0       	rjmp	.+4      	; 0x2012 <DIO_setPinDir+0xae>
    200e:	22 0f       	add	r18, r18
    2010:	33 1f       	adc	r19, r19
    2012:	4a 95       	dec	r20
    2014:	e2 f7       	brpl	.-8      	; 0x200e <DIO_setPinDir+0xaa>
    2016:	26 2b       	or	r18, r22
    2018:	fc 01       	movw	r30, r24
    201a:	20 83       	st	Z, r18
    201c:	8f c0       	rjmp	.+286    	; 0x213c <DIO_setPinDir+0x1d8>
    201e:	8a 81       	ldd	r24, Y+2	; 0x02
    2020:	88 23       	and	r24, r24
    2022:	09 f0       	breq	.+2      	; 0x2026 <DIO_setPinDir+0xc2>
    2024:	8b c0       	rjmp	.+278    	; 0x213c <DIO_setPinDir+0x1d8>
    2026:	87 e3       	ldi	r24, 0x37	; 55
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	27 e3       	ldi	r18, 0x37	; 55
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	f9 01       	movw	r30, r18
    2030:	20 81       	ld	r18, Z
    2032:	62 2f       	mov	r22, r18
    2034:	29 81       	ldd	r18, Y+1	; 0x01
    2036:	42 2f       	mov	r20, r18
    2038:	50 e0       	ldi	r21, 0x00	; 0
    203a:	21 e0       	ldi	r18, 0x01	; 1
    203c:	30 e0       	ldi	r19, 0x00	; 0
    203e:	02 c0       	rjmp	.+4      	; 0x2044 <DIO_setPinDir+0xe0>
    2040:	22 0f       	add	r18, r18
    2042:	33 1f       	adc	r19, r19
    2044:	4a 95       	dec	r20
    2046:	e2 f7       	brpl	.-8      	; 0x2040 <DIO_setPinDir+0xdc>
    2048:	20 95       	com	r18
    204a:	26 23       	and	r18, r22
    204c:	fc 01       	movw	r30, r24
    204e:	20 83       	st	Z, r18
    2050:	75 c0       	rjmp	.+234    	; 0x213c <DIO_setPinDir+0x1d8>
    2052:	89 81       	ldd	r24, Y+1	; 0x01
    2054:	80 31       	cpi	r24, 0x10	; 16
    2056:	c0 f1       	brcs	.+112    	; 0x20c8 <DIO_setPinDir+0x164>
    2058:	89 81       	ldd	r24, Y+1	; 0x01
    205a:	88 31       	cpi	r24, 0x18	; 24
    205c:	a8 f5       	brcc	.+106    	; 0x20c8 <DIO_setPinDir+0x164>
    205e:	89 81       	ldd	r24, Y+1	; 0x01
    2060:	80 51       	subi	r24, 0x10	; 16
    2062:	89 83       	std	Y+1, r24	; 0x01
    2064:	8a 81       	ldd	r24, Y+2	; 0x02
    2066:	81 30       	cpi	r24, 0x01	; 1
    2068:	a9 f4       	brne	.+42     	; 0x2094 <DIO_setPinDir+0x130>
    206a:	84 e3       	ldi	r24, 0x34	; 52
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	24 e3       	ldi	r18, 0x34	; 52
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	f9 01       	movw	r30, r18
    2074:	20 81       	ld	r18, Z
    2076:	62 2f       	mov	r22, r18
    2078:	29 81       	ldd	r18, Y+1	; 0x01
    207a:	42 2f       	mov	r20, r18
    207c:	50 e0       	ldi	r21, 0x00	; 0
    207e:	21 e0       	ldi	r18, 0x01	; 1
    2080:	30 e0       	ldi	r19, 0x00	; 0
    2082:	02 c0       	rjmp	.+4      	; 0x2088 <DIO_setPinDir+0x124>
    2084:	22 0f       	add	r18, r18
    2086:	33 1f       	adc	r19, r19
    2088:	4a 95       	dec	r20
    208a:	e2 f7       	brpl	.-8      	; 0x2084 <DIO_setPinDir+0x120>
    208c:	26 2b       	or	r18, r22
    208e:	fc 01       	movw	r30, r24
    2090:	20 83       	st	Z, r18
    2092:	56 c0       	rjmp	.+172    	; 0x2140 <DIO_setPinDir+0x1dc>
    2094:	8a 81       	ldd	r24, Y+2	; 0x02
    2096:	88 23       	and	r24, r24
    2098:	09 f0       	breq	.+2      	; 0x209c <DIO_setPinDir+0x138>
    209a:	52 c0       	rjmp	.+164    	; 0x2140 <DIO_setPinDir+0x1dc>
    209c:	84 e3       	ldi	r24, 0x34	; 52
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	24 e3       	ldi	r18, 0x34	; 52
    20a2:	30 e0       	ldi	r19, 0x00	; 0
    20a4:	f9 01       	movw	r30, r18
    20a6:	20 81       	ld	r18, Z
    20a8:	62 2f       	mov	r22, r18
    20aa:	29 81       	ldd	r18, Y+1	; 0x01
    20ac:	42 2f       	mov	r20, r18
    20ae:	50 e0       	ldi	r21, 0x00	; 0
    20b0:	21 e0       	ldi	r18, 0x01	; 1
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	02 c0       	rjmp	.+4      	; 0x20ba <DIO_setPinDir+0x156>
    20b6:	22 0f       	add	r18, r18
    20b8:	33 1f       	adc	r19, r19
    20ba:	4a 95       	dec	r20
    20bc:	e2 f7       	brpl	.-8      	; 0x20b6 <DIO_setPinDir+0x152>
    20be:	20 95       	com	r18
    20c0:	26 23       	and	r18, r22
    20c2:	fc 01       	movw	r30, r24
    20c4:	20 83       	st	Z, r18
    20c6:	3c c0       	rjmp	.+120    	; 0x2140 <DIO_setPinDir+0x1dc>
    20c8:	89 81       	ldd	r24, Y+1	; 0x01
    20ca:	88 31       	cpi	r24, 0x18	; 24
    20cc:	d0 f1       	brcs	.+116    	; 0x2142 <DIO_setPinDir+0x1de>
    20ce:	89 81       	ldd	r24, Y+1	; 0x01
    20d0:	80 32       	cpi	r24, 0x20	; 32
    20d2:	b8 f5       	brcc	.+110    	; 0x2142 <DIO_setPinDir+0x1de>
    20d4:	89 81       	ldd	r24, Y+1	; 0x01
    20d6:	88 51       	subi	r24, 0x18	; 24
    20d8:	89 83       	std	Y+1, r24	; 0x01
    20da:	8a 81       	ldd	r24, Y+2	; 0x02
    20dc:	81 30       	cpi	r24, 0x01	; 1
    20de:	a9 f4       	brne	.+42     	; 0x210a <DIO_setPinDir+0x1a6>
    20e0:	81 e3       	ldi	r24, 0x31	; 49
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	21 e3       	ldi	r18, 0x31	; 49
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	f9 01       	movw	r30, r18
    20ea:	20 81       	ld	r18, Z
    20ec:	62 2f       	mov	r22, r18
    20ee:	29 81       	ldd	r18, Y+1	; 0x01
    20f0:	42 2f       	mov	r20, r18
    20f2:	50 e0       	ldi	r21, 0x00	; 0
    20f4:	21 e0       	ldi	r18, 0x01	; 1
    20f6:	30 e0       	ldi	r19, 0x00	; 0
    20f8:	02 c0       	rjmp	.+4      	; 0x20fe <DIO_setPinDir+0x19a>
    20fa:	22 0f       	add	r18, r18
    20fc:	33 1f       	adc	r19, r19
    20fe:	4a 95       	dec	r20
    2100:	e2 f7       	brpl	.-8      	; 0x20fa <DIO_setPinDir+0x196>
    2102:	26 2b       	or	r18, r22
    2104:	fc 01       	movw	r30, r24
    2106:	20 83       	st	Z, r18
    2108:	1c c0       	rjmp	.+56     	; 0x2142 <DIO_setPinDir+0x1de>
    210a:	8a 81       	ldd	r24, Y+2	; 0x02
    210c:	88 23       	and	r24, r24
    210e:	c9 f4       	brne	.+50     	; 0x2142 <DIO_setPinDir+0x1de>
    2110:	81 e3       	ldi	r24, 0x31	; 49
    2112:	90 e0       	ldi	r25, 0x00	; 0
    2114:	21 e3       	ldi	r18, 0x31	; 49
    2116:	30 e0       	ldi	r19, 0x00	; 0
    2118:	f9 01       	movw	r30, r18
    211a:	20 81       	ld	r18, Z
    211c:	62 2f       	mov	r22, r18
    211e:	29 81       	ldd	r18, Y+1	; 0x01
    2120:	42 2f       	mov	r20, r18
    2122:	50 e0       	ldi	r21, 0x00	; 0
    2124:	21 e0       	ldi	r18, 0x01	; 1
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	02 c0       	rjmp	.+4      	; 0x212e <DIO_setPinDir+0x1ca>
    212a:	22 0f       	add	r18, r18
    212c:	33 1f       	adc	r19, r19
    212e:	4a 95       	dec	r20
    2130:	e2 f7       	brpl	.-8      	; 0x212a <DIO_setPinDir+0x1c6>
    2132:	20 95       	com	r18
    2134:	26 23       	and	r18, r22
    2136:	fc 01       	movw	r30, r24
    2138:	20 83       	st	Z, r18
    213a:	03 c0       	rjmp	.+6      	; 0x2142 <DIO_setPinDir+0x1de>
    213c:	00 00       	nop
    213e:	01 c0       	rjmp	.+2      	; 0x2142 <DIO_setPinDir+0x1de>
    2140:	00 00       	nop
    2142:	00 00       	nop
    2144:	0f 90       	pop	r0
    2146:	0f 90       	pop	r0
    2148:	df 91       	pop	r29
    214a:	cf 91       	pop	r28
    214c:	08 95       	ret

0000214e <DIO_readPinValue>:
    214e:	cf 93       	push	r28
    2150:	df 93       	push	r29
    2152:	1f 92       	push	r1
    2154:	cd b7       	in	r28, 0x3d	; 61
    2156:	de b7       	in	r29, 0x3e	; 62
    2158:	89 83       	std	Y+1, r24	; 0x01
    215a:	89 81       	ldd	r24, Y+1	; 0x01
    215c:	88 30       	cpi	r24, 0x08	; 8
    215e:	80 f4       	brcc	.+32     	; 0x2180 <DIO_readPinValue+0x32>
    2160:	89 e3       	ldi	r24, 0x39	; 57
    2162:	90 e0       	ldi	r25, 0x00	; 0
    2164:	fc 01       	movw	r30, r24
    2166:	80 81       	ld	r24, Z
    2168:	88 2f       	mov	r24, r24
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	29 81       	ldd	r18, Y+1	; 0x01
    216e:	22 2f       	mov	r18, r18
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	02 c0       	rjmp	.+4      	; 0x2178 <DIO_readPinValue+0x2a>
    2174:	95 95       	asr	r25
    2176:	87 95       	ror	r24
    2178:	2a 95       	dec	r18
    217a:	e2 f7       	brpl	.-8      	; 0x2174 <DIO_readPinValue+0x26>
    217c:	81 70       	andi	r24, 0x01	; 1
    217e:	4b c0       	rjmp	.+150    	; 0x2216 <DIO_readPinValue+0xc8>
    2180:	89 81       	ldd	r24, Y+1	; 0x01
    2182:	88 30       	cpi	r24, 0x08	; 8
    2184:	b0 f0       	brcs	.+44     	; 0x21b2 <DIO_readPinValue+0x64>
    2186:	89 81       	ldd	r24, Y+1	; 0x01
    2188:	80 31       	cpi	r24, 0x10	; 16
    218a:	98 f4       	brcc	.+38     	; 0x21b2 <DIO_readPinValue+0x64>
    218c:	89 81       	ldd	r24, Y+1	; 0x01
    218e:	88 50       	subi	r24, 0x08	; 8
    2190:	89 83       	std	Y+1, r24	; 0x01
    2192:	86 e3       	ldi	r24, 0x36	; 54
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	fc 01       	movw	r30, r24
    2198:	80 81       	ld	r24, Z
    219a:	88 2f       	mov	r24, r24
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	29 81       	ldd	r18, Y+1	; 0x01
    21a0:	22 2f       	mov	r18, r18
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	02 c0       	rjmp	.+4      	; 0x21aa <DIO_readPinValue+0x5c>
    21a6:	95 95       	asr	r25
    21a8:	87 95       	ror	r24
    21aa:	2a 95       	dec	r18
    21ac:	e2 f7       	brpl	.-8      	; 0x21a6 <DIO_readPinValue+0x58>
    21ae:	81 70       	andi	r24, 0x01	; 1
    21b0:	32 c0       	rjmp	.+100    	; 0x2216 <DIO_readPinValue+0xc8>
    21b2:	89 81       	ldd	r24, Y+1	; 0x01
    21b4:	80 31       	cpi	r24, 0x10	; 16
    21b6:	b0 f0       	brcs	.+44     	; 0x21e4 <DIO_readPinValue+0x96>
    21b8:	89 81       	ldd	r24, Y+1	; 0x01
    21ba:	88 31       	cpi	r24, 0x18	; 24
    21bc:	98 f4       	brcc	.+38     	; 0x21e4 <DIO_readPinValue+0x96>
    21be:	89 81       	ldd	r24, Y+1	; 0x01
    21c0:	80 51       	subi	r24, 0x10	; 16
    21c2:	89 83       	std	Y+1, r24	; 0x01
    21c4:	83 e3       	ldi	r24, 0x33	; 51
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	fc 01       	movw	r30, r24
    21ca:	80 81       	ld	r24, Z
    21cc:	88 2f       	mov	r24, r24
    21ce:	90 e0       	ldi	r25, 0x00	; 0
    21d0:	29 81       	ldd	r18, Y+1	; 0x01
    21d2:	22 2f       	mov	r18, r18
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	02 c0       	rjmp	.+4      	; 0x21dc <DIO_readPinValue+0x8e>
    21d8:	95 95       	asr	r25
    21da:	87 95       	ror	r24
    21dc:	2a 95       	dec	r18
    21de:	e2 f7       	brpl	.-8      	; 0x21d8 <DIO_readPinValue+0x8a>
    21e0:	81 70       	andi	r24, 0x01	; 1
    21e2:	19 c0       	rjmp	.+50     	; 0x2216 <DIO_readPinValue+0xc8>
    21e4:	89 81       	ldd	r24, Y+1	; 0x01
    21e6:	88 31       	cpi	r24, 0x18	; 24
    21e8:	b0 f0       	brcs	.+44     	; 0x2216 <DIO_readPinValue+0xc8>
    21ea:	89 81       	ldd	r24, Y+1	; 0x01
    21ec:	80 32       	cpi	r24, 0x20	; 32
    21ee:	98 f4       	brcc	.+38     	; 0x2216 <DIO_readPinValue+0xc8>
    21f0:	89 81       	ldd	r24, Y+1	; 0x01
    21f2:	88 51       	subi	r24, 0x18	; 24
    21f4:	89 83       	std	Y+1, r24	; 0x01
    21f6:	80 e3       	ldi	r24, 0x30	; 48
    21f8:	90 e0       	ldi	r25, 0x00	; 0
    21fa:	fc 01       	movw	r30, r24
    21fc:	80 81       	ld	r24, Z
    21fe:	88 2f       	mov	r24, r24
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	29 81       	ldd	r18, Y+1	; 0x01
    2204:	22 2f       	mov	r18, r18
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	02 c0       	rjmp	.+4      	; 0x220e <DIO_readPinValue+0xc0>
    220a:	95 95       	asr	r25
    220c:	87 95       	ror	r24
    220e:	2a 95       	dec	r18
    2210:	e2 f7       	brpl	.-8      	; 0x220a <DIO_readPinValue+0xbc>
    2212:	81 70       	andi	r24, 0x01	; 1
    2214:	00 c0       	rjmp	.+0      	; 0x2216 <DIO_readPinValue+0xc8>
    2216:	0f 90       	pop	r0
    2218:	df 91       	pop	r29
    221a:	cf 91       	pop	r28
    221c:	08 95       	ret

0000221e <DIO_setPinPullup>:
    221e:	cf 93       	push	r28
    2220:	df 93       	push	r29
    2222:	1f 92       	push	r1
    2224:	cd b7       	in	r28, 0x3d	; 61
    2226:	de b7       	in	r29, 0x3e	; 62
    2228:	89 83       	std	Y+1, r24	; 0x01
    222a:	61 e0       	ldi	r22, 0x01	; 1
    222c:	89 81       	ldd	r24, Y+1	; 0x01
    222e:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    2232:	00 00       	nop
    2234:	0f 90       	pop	r0
    2236:	df 91       	pop	r29
    2238:	cf 91       	pop	r28
    223a:	08 95       	ret

0000223c <EXT0_init>:

void EXT_setCallbackInt2(void (*ptr)())
{
	//INT0_ptr = APP_func;
	INT2_ptr = ptr;
}
    223c:	cf 93       	push	r28
    223e:	df 93       	push	r29
    2240:	1f 92       	push	r1
    2242:	cd b7       	in	r28, 0x3d	; 61
    2244:	de b7       	in	r29, 0x3e	; 62
    2246:	89 83       	std	Y+1, r24	; 0x01
    2248:	89 81       	ldd	r24, Y+1	; 0x01
    224a:	88 23       	and	r24, r24
    224c:	99 f4       	brne	.+38     	; 0x2274 <EXT0_init+0x38>
    224e:	85 e5       	ldi	r24, 0x55	; 85
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	25 e5       	ldi	r18, 0x55	; 85
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	f9 01       	movw	r30, r18
    2258:	20 81       	ld	r18, Z
    225a:	2e 7f       	andi	r18, 0xFE	; 254
    225c:	fc 01       	movw	r30, r24
    225e:	20 83       	st	Z, r18
    2260:	85 e5       	ldi	r24, 0x55	; 85
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	25 e5       	ldi	r18, 0x55	; 85
    2266:	30 e0       	ldi	r19, 0x00	; 0
    2268:	f9 01       	movw	r30, r18
    226a:	20 81       	ld	r18, Z
    226c:	2d 7f       	andi	r18, 0xFD	; 253
    226e:	fc 01       	movw	r30, r24
    2270:	20 83       	st	Z, r18
    2272:	41 c0       	rjmp	.+130    	; 0x22f6 <EXT0_init+0xba>
    2274:	89 81       	ldd	r24, Y+1	; 0x01
    2276:	81 30       	cpi	r24, 0x01	; 1
    2278:	99 f4       	brne	.+38     	; 0x22a0 <EXT0_init+0x64>
    227a:	85 e5       	ldi	r24, 0x55	; 85
    227c:	90 e0       	ldi	r25, 0x00	; 0
    227e:	25 e5       	ldi	r18, 0x55	; 85
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	f9 01       	movw	r30, r18
    2284:	20 81       	ld	r18, Z
    2286:	21 60       	ori	r18, 0x01	; 1
    2288:	fc 01       	movw	r30, r24
    228a:	20 83       	st	Z, r18
    228c:	85 e5       	ldi	r24, 0x55	; 85
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	25 e5       	ldi	r18, 0x55	; 85
    2292:	30 e0       	ldi	r19, 0x00	; 0
    2294:	f9 01       	movw	r30, r18
    2296:	20 81       	ld	r18, Z
    2298:	2d 7f       	andi	r18, 0xFD	; 253
    229a:	fc 01       	movw	r30, r24
    229c:	20 83       	st	Z, r18
    229e:	2b c0       	rjmp	.+86     	; 0x22f6 <EXT0_init+0xba>
    22a0:	89 81       	ldd	r24, Y+1	; 0x01
    22a2:	82 30       	cpi	r24, 0x02	; 2
    22a4:	99 f4       	brne	.+38     	; 0x22cc <EXT0_init+0x90>
    22a6:	85 e5       	ldi	r24, 0x55	; 85
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	25 e5       	ldi	r18, 0x55	; 85
    22ac:	30 e0       	ldi	r19, 0x00	; 0
    22ae:	f9 01       	movw	r30, r18
    22b0:	20 81       	ld	r18, Z
    22b2:	2e 7f       	andi	r18, 0xFE	; 254
    22b4:	fc 01       	movw	r30, r24
    22b6:	20 83       	st	Z, r18
    22b8:	85 e5       	ldi	r24, 0x55	; 85
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	25 e5       	ldi	r18, 0x55	; 85
    22be:	30 e0       	ldi	r19, 0x00	; 0
    22c0:	f9 01       	movw	r30, r18
    22c2:	20 81       	ld	r18, Z
    22c4:	22 60       	ori	r18, 0x02	; 2
    22c6:	fc 01       	movw	r30, r24
    22c8:	20 83       	st	Z, r18
    22ca:	15 c0       	rjmp	.+42     	; 0x22f6 <EXT0_init+0xba>
    22cc:	89 81       	ldd	r24, Y+1	; 0x01
    22ce:	83 30       	cpi	r24, 0x03	; 3
    22d0:	91 f4       	brne	.+36     	; 0x22f6 <EXT0_init+0xba>
    22d2:	85 e5       	ldi	r24, 0x55	; 85
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	25 e5       	ldi	r18, 0x55	; 85
    22d8:	30 e0       	ldi	r19, 0x00	; 0
    22da:	f9 01       	movw	r30, r18
    22dc:	20 81       	ld	r18, Z
    22de:	21 60       	ori	r18, 0x01	; 1
    22e0:	fc 01       	movw	r30, r24
    22e2:	20 83       	st	Z, r18
    22e4:	85 e5       	ldi	r24, 0x55	; 85
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	25 e5       	ldi	r18, 0x55	; 85
    22ea:	30 e0       	ldi	r19, 0x00	; 0
    22ec:	f9 01       	movw	r30, r18
    22ee:	20 81       	ld	r18, Z
    22f0:	22 60       	ori	r18, 0x02	; 2
    22f2:	fc 01       	movw	r30, r24
    22f4:	20 83       	st	Z, r18
    22f6:	8b e5       	ldi	r24, 0x5B	; 91
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	2b e5       	ldi	r18, 0x5B	; 91
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	f9 01       	movw	r30, r18
    2300:	20 81       	ld	r18, Z
    2302:	20 64       	ori	r18, 0x40	; 64
    2304:	fc 01       	movw	r30, r24
    2306:	20 83       	st	Z, r18
    2308:	00 00       	nop
    230a:	0f 90       	pop	r0
    230c:	df 91       	pop	r29
    230e:	cf 91       	pop	r28
    2310:	08 95       	ret

00002312 <EXT_setCallbackInt0>:
    2312:	cf 93       	push	r28
    2314:	df 93       	push	r29
    2316:	00 d0       	rcall	.+0      	; 0x2318 <EXT_setCallbackInt0+0x6>
    2318:	cd b7       	in	r28, 0x3d	; 61
    231a:	de b7       	in	r29, 0x3e	; 62
    231c:	9a 83       	std	Y+2, r25	; 0x02
    231e:	89 83       	std	Y+1, r24	; 0x01
    2320:	89 81       	ldd	r24, Y+1	; 0x01
    2322:	9a 81       	ldd	r25, Y+2	; 0x02
    2324:	90 93 f8 01 	sts	0x01F8, r25	; 0x8001f8 <INT0_ptr+0x1>
    2328:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <INT0_ptr>
    232c:	00 00       	nop
    232e:	0f 90       	pop	r0
    2330:	0f 90       	pop	r0
    2332:	df 91       	pop	r29
    2334:	cf 91       	pop	r28
    2336:	08 95       	ret

00002338 <__vector_1>:
    2338:	1f 92       	push	r1
    233a:	0f 92       	push	r0
    233c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2340:	0f 92       	push	r0
    2342:	11 24       	eor	r1, r1
    2344:	2f 93       	push	r18
    2346:	3f 93       	push	r19
    2348:	4f 93       	push	r20
    234a:	5f 93       	push	r21
    234c:	6f 93       	push	r22
    234e:	7f 93       	push	r23
    2350:	8f 93       	push	r24
    2352:	9f 93       	push	r25
    2354:	af 93       	push	r26
    2356:	bf 93       	push	r27
    2358:	ef 93       	push	r30
    235a:	ff 93       	push	r31
    235c:	cf 93       	push	r28
    235e:	df 93       	push	r29
    2360:	cd b7       	in	r28, 0x3d	; 61
    2362:	de b7       	in	r29, 0x3e	; 62
    2364:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <INT0_ptr>
    2368:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <INT0_ptr+0x1>
    236c:	fc 01       	movw	r30, r24
    236e:	09 95       	icall
    2370:	00 00       	nop
    2372:	df 91       	pop	r29
    2374:	cf 91       	pop	r28
    2376:	ff 91       	pop	r31
    2378:	ef 91       	pop	r30
    237a:	bf 91       	pop	r27
    237c:	af 91       	pop	r26
    237e:	9f 91       	pop	r25
    2380:	8f 91       	pop	r24
    2382:	7f 91       	pop	r23
    2384:	6f 91       	pop	r22
    2386:	5f 91       	pop	r21
    2388:	4f 91       	pop	r20
    238a:	3f 91       	pop	r19
    238c:	2f 91       	pop	r18
    238e:	0f 90       	pop	r0
    2390:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2394:	0f 90       	pop	r0
    2396:	1f 90       	pop	r1
    2398:	18 95       	reti

0000239a <__vector_2>:
    239a:	1f 92       	push	r1
    239c:	0f 92       	push	r0
    239e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    23a2:	0f 92       	push	r0
    23a4:	11 24       	eor	r1, r1
    23a6:	2f 93       	push	r18
    23a8:	3f 93       	push	r19
    23aa:	4f 93       	push	r20
    23ac:	5f 93       	push	r21
    23ae:	6f 93       	push	r22
    23b0:	7f 93       	push	r23
    23b2:	8f 93       	push	r24
    23b4:	9f 93       	push	r25
    23b6:	af 93       	push	r26
    23b8:	bf 93       	push	r27
    23ba:	ef 93       	push	r30
    23bc:	ff 93       	push	r31
    23be:	cf 93       	push	r28
    23c0:	df 93       	push	r29
    23c2:	cd b7       	in	r28, 0x3d	; 61
    23c4:	de b7       	in	r29, 0x3e	; 62
    23c6:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <INT1_ptr>
    23ca:	90 91 fc 01 	lds	r25, 0x01FC	; 0x8001fc <INT1_ptr+0x1>
    23ce:	fc 01       	movw	r30, r24
    23d0:	09 95       	icall
    23d2:	00 00       	nop
    23d4:	df 91       	pop	r29
    23d6:	cf 91       	pop	r28
    23d8:	ff 91       	pop	r31
    23da:	ef 91       	pop	r30
    23dc:	bf 91       	pop	r27
    23de:	af 91       	pop	r26
    23e0:	9f 91       	pop	r25
    23e2:	8f 91       	pop	r24
    23e4:	7f 91       	pop	r23
    23e6:	6f 91       	pop	r22
    23e8:	5f 91       	pop	r21
    23ea:	4f 91       	pop	r20
    23ec:	3f 91       	pop	r19
    23ee:	2f 91       	pop	r18
    23f0:	0f 90       	pop	r0
    23f2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    23f6:	0f 90       	pop	r0
    23f8:	1f 90       	pop	r1
    23fa:	18 95       	reti

000023fc <__vector_3>:

void __vector_3(void) __attribute__((signal,used));
void __vector_3(void)
{
    23fc:	1f 92       	push	r1
    23fe:	0f 92       	push	r0
    2400:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2404:	0f 92       	push	r0
    2406:	11 24       	eor	r1, r1
    2408:	2f 93       	push	r18
    240a:	3f 93       	push	r19
    240c:	4f 93       	push	r20
    240e:	5f 93       	push	r21
    2410:	6f 93       	push	r22
    2412:	7f 93       	push	r23
    2414:	8f 93       	push	r24
    2416:	9f 93       	push	r25
    2418:	af 93       	push	r26
    241a:	bf 93       	push	r27
    241c:	ef 93       	push	r30
    241e:	ff 93       	push	r31
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	cd b7       	in	r28, 0x3d	; 61
    2426:	de b7       	in	r29, 0x3e	; 62
	//call func(pointer to function)
	//APP_func();
	INT2_ptr();
    2428:	80 91 f9 01 	lds	r24, 0x01F9	; 0x8001f9 <INT2_ptr>
    242c:	90 91 fa 01 	lds	r25, 0x01FA	; 0x8001fa <INT2_ptr+0x1>
    2430:	fc 01       	movw	r30, r24
    2432:	09 95       	icall
	//DIO_setPinValue(DIO_PINA0,DIO_HIGH);
}
    2434:	00 00       	nop
    2436:	df 91       	pop	r29
    2438:	cf 91       	pop	r28
    243a:	ff 91       	pop	r31
    243c:	ef 91       	pop	r30
    243e:	bf 91       	pop	r27
    2440:	af 91       	pop	r26
    2442:	9f 91       	pop	r25
    2444:	8f 91       	pop	r24
    2446:	7f 91       	pop	r23
    2448:	6f 91       	pop	r22
    244a:	5f 91       	pop	r21
    244c:	4f 91       	pop	r20
    244e:	3f 91       	pop	r19
    2450:	2f 91       	pop	r18
    2452:	0f 90       	pop	r0
    2454:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2458:	0f 90       	pop	r0
    245a:	1f 90       	pop	r1
    245c:	18 95       	reti

0000245e <GI_enable>:
    245e:	cf 93       	push	r28
    2460:	df 93       	push	r29
    2462:	cd b7       	in	r28, 0x3d	; 61
    2464:	de b7       	in	r29, 0x3e	; 62
    2466:	8f e5       	ldi	r24, 0x5F	; 95
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	2f e5       	ldi	r18, 0x5F	; 95
    246c:	30 e0       	ldi	r19, 0x00	; 0
    246e:	f9 01       	movw	r30, r18
    2470:	20 81       	ld	r18, Z
    2472:	20 68       	ori	r18, 0x80	; 128
    2474:	fc 01       	movw	r30, r24
    2476:	20 83       	st	Z, r18
    2478:	00 00       	nop
    247a:	df 91       	pop	r29
    247c:	cf 91       	pop	r28
    247e:	08 95       	ret

00002480 <I2C_init>:
    2480:	cf 93       	push	r28
    2482:	df 93       	push	r29
    2484:	1f 92       	push	r1
    2486:	cd b7       	in	r28, 0x3d	; 61
    2488:	de b7       	in	r29, 0x3e	; 62
    248a:	89 83       	std	Y+1, r24	; 0x01
    248c:	89 81       	ldd	r24, Y+1	; 0x01
    248e:	81 30       	cpi	r24, 0x01	; 1
    2490:	41 f0       	breq	.+16     	; 0x24a2 <I2C_init+0x22>
    2492:	89 81       	ldd	r24, Y+1	; 0x01
    2494:	88 23       	and	r24, r24
    2496:	29 f4       	brne	.+10     	; 0x24a2 <I2C_init+0x22>
    2498:	82 e2       	ldi	r24, 0x22	; 34
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	20 ea       	ldi	r18, 0xA0	; 160
    249e:	fc 01       	movw	r30, r24
    24a0:	20 83       	st	Z, r18
    24a2:	86 e5       	ldi	r24, 0x56	; 86
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	26 e5       	ldi	r18, 0x56	; 86
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	f9 01       	movw	r30, r18
    24ac:	20 81       	ld	r18, Z
    24ae:	24 60       	ori	r18, 0x04	; 4
    24b0:	fc 01       	movw	r30, r24
    24b2:	20 83       	st	Z, r18
    24b4:	80 e2       	ldi	r24, 0x20	; 32
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	28 e4       	ldi	r18, 0x48	; 72
    24ba:	fc 01       	movw	r30, r24
    24bc:	20 83       	st	Z, r18
    24be:	00 00       	nop
    24c0:	0f 90       	pop	r0
    24c2:	df 91       	pop	r29
    24c4:	cf 91       	pop	r28
    24c6:	08 95       	ret

000024c8 <SPI_Init>:
    24c8:	cf 93       	push	r28
    24ca:	df 93       	push	r29
    24cc:	cd b7       	in	r28, 0x3d	; 61
    24ce:	de b7       	in	r29, 0x3e	; 62
    24d0:	8d e2       	ldi	r24, 0x2D	; 45
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	2d e2       	ldi	r18, 0x2D	; 45
    24d6:	30 e0       	ldi	r19, 0x00	; 0
    24d8:	f9 01       	movw	r30, r18
    24da:	20 81       	ld	r18, Z
    24dc:	20 61       	ori	r18, 0x10	; 16
    24de:	fc 01       	movw	r30, r24
    24e0:	20 83       	st	Z, r18
    24e2:	61 e0       	ldi	r22, 0x01	; 1
    24e4:	8d e0       	ldi	r24, 0x0D	; 13
    24e6:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    24ea:	61 e0       	ldi	r22, 0x01	; 1
    24ec:	8f e0       	ldi	r24, 0x0F	; 15
    24ee:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    24f2:	60 e0       	ldi	r22, 0x00	; 0
    24f4:	8e e0       	ldi	r24, 0x0E	; 14
    24f6:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    24fa:	61 e0       	ldi	r22, 0x01	; 1
    24fc:	8c e0       	ldi	r24, 0x0C	; 12
    24fe:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <DIO_setPinDir>
    2502:	8d e2       	ldi	r24, 0x2D	; 45
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	2d e2       	ldi	r18, 0x2D	; 45
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	f9 01       	movw	r30, r18
    250c:	20 81       	ld	r18, Z
    250e:	20 64       	ori	r18, 0x40	; 64
    2510:	fc 01       	movw	r30, r24
    2512:	20 83       	st	Z, r18
    2514:	00 00       	nop
    2516:	df 91       	pop	r29
    2518:	cf 91       	pop	r28
    251a:	08 95       	ret

0000251c <SPI_Write>:
    251c:	cf 93       	push	r28
    251e:	df 93       	push	r29
    2520:	1f 92       	push	r1
    2522:	cd b7       	in	r28, 0x3d	; 61
    2524:	de b7       	in	r29, 0x3e	; 62
    2526:	89 83       	std	Y+1, r24	; 0x01
    2528:	61 e0       	ldi	r22, 0x01	; 1
    252a:	8c e0       	ldi	r24, 0x0C	; 12
    252c:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    2530:	60 e0       	ldi	r22, 0x00	; 0
    2532:	8c e0       	ldi	r24, 0x0C	; 12
    2534:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <DIO_setPinValue>
    2538:	8f e2       	ldi	r24, 0x2F	; 47
    253a:	90 e0       	ldi	r25, 0x00	; 0
    253c:	29 81       	ldd	r18, Y+1	; 0x01
    253e:	fc 01       	movw	r30, r24
    2540:	20 83       	st	Z, r18
    2542:	00 00       	nop
    2544:	8e e2       	ldi	r24, 0x2E	; 46
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	fc 01       	movw	r30, r24
    254a:	80 81       	ld	r24, Z
    254c:	88 1f       	adc	r24, r24
    254e:	88 27       	eor	r24, r24
    2550:	88 1f       	adc	r24, r24
    2552:	88 2f       	mov	r24, r24
    2554:	90 e0       	ldi	r25, 0x00	; 0
    2556:	81 70       	andi	r24, 0x01	; 1
    2558:	99 27       	eor	r25, r25
    255a:	89 2b       	or	r24, r25
    255c:	99 f3       	breq	.-26     	; 0x2544 <SPI_Write+0x28>
    255e:	00 00       	nop
    2560:	0f 90       	pop	r0
    2562:	df 91       	pop	r29
    2564:	cf 91       	pop	r28
    2566:	08 95       	ret

00002568 <TIMER0_initNormalMode>:
    2568:	cf 93       	push	r28
    256a:	df 93       	push	r29
    256c:	cd b7       	in	r28, 0x3d	; 61
    256e:	de b7       	in	r29, 0x3e	; 62
    2570:	83 e5       	ldi	r24, 0x53	; 83
    2572:	90 e0       	ldi	r25, 0x00	; 0
    2574:	23 e5       	ldi	r18, 0x53	; 83
    2576:	30 e0       	ldi	r19, 0x00	; 0
    2578:	f9 01       	movw	r30, r18
    257a:	20 81       	ld	r18, Z
    257c:	2f 7b       	andi	r18, 0xBF	; 191
    257e:	fc 01       	movw	r30, r24
    2580:	20 83       	st	Z, r18
    2582:	83 e5       	ldi	r24, 0x53	; 83
    2584:	90 e0       	ldi	r25, 0x00	; 0
    2586:	23 e5       	ldi	r18, 0x53	; 83
    2588:	30 e0       	ldi	r19, 0x00	; 0
    258a:	f9 01       	movw	r30, r18
    258c:	20 81       	ld	r18, Z
    258e:	27 7f       	andi	r18, 0xF7	; 247
    2590:	fc 01       	movw	r30, r24
    2592:	20 83       	st	Z, r18
    2594:	89 e5       	ldi	r24, 0x59	; 89
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	29 e5       	ldi	r18, 0x59	; 89
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	f9 01       	movw	r30, r18
    259e:	20 81       	ld	r18, Z
    25a0:	21 60       	ori	r18, 0x01	; 1
    25a2:	fc 01       	movw	r30, r24
    25a4:	20 83       	st	Z, r18
    25a6:	00 00       	nop
    25a8:	df 91       	pop	r29
    25aa:	cf 91       	pop	r28
    25ac:	08 95       	ret

000025ae <TIMER0_start>:
    25ae:	cf 93       	push	r28
    25b0:	df 93       	push	r29
    25b2:	1f 92       	push	r1
    25b4:	cd b7       	in	r28, 0x3d	; 61
    25b6:	de b7       	in	r29, 0x3e	; 62
    25b8:	89 83       	std	Y+1, r24	; 0x01
    25ba:	89 81       	ldd	r24, Y+1	; 0x01
    25bc:	88 23       	and	r24, r24
    25be:	e1 f4       	brne	.+56     	; 0x25f8 <TIMER0_start+0x4a>
    25c0:	83 e5       	ldi	r24, 0x53	; 83
    25c2:	90 e0       	ldi	r25, 0x00	; 0
    25c4:	23 e5       	ldi	r18, 0x53	; 83
    25c6:	30 e0       	ldi	r19, 0x00	; 0
    25c8:	f9 01       	movw	r30, r18
    25ca:	20 81       	ld	r18, Z
    25cc:	21 60       	ori	r18, 0x01	; 1
    25ce:	fc 01       	movw	r30, r24
    25d0:	20 83       	st	Z, r18
    25d2:	83 e5       	ldi	r24, 0x53	; 83
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	23 e5       	ldi	r18, 0x53	; 83
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	f9 01       	movw	r30, r18
    25dc:	20 81       	ld	r18, Z
    25de:	2d 7f       	andi	r18, 0xFD	; 253
    25e0:	fc 01       	movw	r30, r24
    25e2:	20 83       	st	Z, r18
    25e4:	83 e5       	ldi	r24, 0x53	; 83
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	23 e5       	ldi	r18, 0x53	; 83
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	f9 01       	movw	r30, r18
    25ee:	20 81       	ld	r18, Z
    25f0:	2b 7f       	andi	r18, 0xFB	; 251
    25f2:	fc 01       	movw	r30, r24
    25f4:	20 83       	st	Z, r18
    25f6:	7b c0       	rjmp	.+246    	; 0x26ee <TIMER0_start+0x140>
    25f8:	89 81       	ldd	r24, Y+1	; 0x01
    25fa:	81 30       	cpi	r24, 0x01	; 1
    25fc:	e1 f4       	brne	.+56     	; 0x2636 <TIMER0_start+0x88>
    25fe:	83 e5       	ldi	r24, 0x53	; 83
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	23 e5       	ldi	r18, 0x53	; 83
    2604:	30 e0       	ldi	r19, 0x00	; 0
    2606:	f9 01       	movw	r30, r18
    2608:	20 81       	ld	r18, Z
    260a:	2e 7f       	andi	r18, 0xFE	; 254
    260c:	fc 01       	movw	r30, r24
    260e:	20 83       	st	Z, r18
    2610:	83 e5       	ldi	r24, 0x53	; 83
    2612:	90 e0       	ldi	r25, 0x00	; 0
    2614:	23 e5       	ldi	r18, 0x53	; 83
    2616:	30 e0       	ldi	r19, 0x00	; 0
    2618:	f9 01       	movw	r30, r18
    261a:	20 81       	ld	r18, Z
    261c:	22 60       	ori	r18, 0x02	; 2
    261e:	fc 01       	movw	r30, r24
    2620:	20 83       	st	Z, r18
    2622:	83 e5       	ldi	r24, 0x53	; 83
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	23 e5       	ldi	r18, 0x53	; 83
    2628:	30 e0       	ldi	r19, 0x00	; 0
    262a:	f9 01       	movw	r30, r18
    262c:	20 81       	ld	r18, Z
    262e:	2b 7f       	andi	r18, 0xFB	; 251
    2630:	fc 01       	movw	r30, r24
    2632:	20 83       	st	Z, r18
    2634:	5c c0       	rjmp	.+184    	; 0x26ee <TIMER0_start+0x140>
    2636:	89 81       	ldd	r24, Y+1	; 0x01
    2638:	82 30       	cpi	r24, 0x02	; 2
    263a:	e1 f4       	brne	.+56     	; 0x2674 <TIMER0_start+0xc6>
    263c:	83 e5       	ldi	r24, 0x53	; 83
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	23 e5       	ldi	r18, 0x53	; 83
    2642:	30 e0       	ldi	r19, 0x00	; 0
    2644:	f9 01       	movw	r30, r18
    2646:	20 81       	ld	r18, Z
    2648:	21 60       	ori	r18, 0x01	; 1
    264a:	fc 01       	movw	r30, r24
    264c:	20 83       	st	Z, r18
    264e:	83 e5       	ldi	r24, 0x53	; 83
    2650:	90 e0       	ldi	r25, 0x00	; 0
    2652:	23 e5       	ldi	r18, 0x53	; 83
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	f9 01       	movw	r30, r18
    2658:	20 81       	ld	r18, Z
    265a:	22 60       	ori	r18, 0x02	; 2
    265c:	fc 01       	movw	r30, r24
    265e:	20 83       	st	Z, r18
    2660:	83 e5       	ldi	r24, 0x53	; 83
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	23 e5       	ldi	r18, 0x53	; 83
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	f9 01       	movw	r30, r18
    266a:	20 81       	ld	r18, Z
    266c:	2b 7f       	andi	r18, 0xFB	; 251
    266e:	fc 01       	movw	r30, r24
    2670:	20 83       	st	Z, r18
    2672:	3d c0       	rjmp	.+122    	; 0x26ee <TIMER0_start+0x140>
    2674:	89 81       	ldd	r24, Y+1	; 0x01
    2676:	83 30       	cpi	r24, 0x03	; 3
    2678:	e1 f4       	brne	.+56     	; 0x26b2 <TIMER0_start+0x104>
    267a:	83 e5       	ldi	r24, 0x53	; 83
    267c:	90 e0       	ldi	r25, 0x00	; 0
    267e:	23 e5       	ldi	r18, 0x53	; 83
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	f9 01       	movw	r30, r18
    2684:	20 81       	ld	r18, Z
    2686:	2e 7f       	andi	r18, 0xFE	; 254
    2688:	fc 01       	movw	r30, r24
    268a:	20 83       	st	Z, r18
    268c:	83 e5       	ldi	r24, 0x53	; 83
    268e:	90 e0       	ldi	r25, 0x00	; 0
    2690:	23 e5       	ldi	r18, 0x53	; 83
    2692:	30 e0       	ldi	r19, 0x00	; 0
    2694:	f9 01       	movw	r30, r18
    2696:	20 81       	ld	r18, Z
    2698:	2d 7f       	andi	r18, 0xFD	; 253
    269a:	fc 01       	movw	r30, r24
    269c:	20 83       	st	Z, r18
    269e:	83 e5       	ldi	r24, 0x53	; 83
    26a0:	90 e0       	ldi	r25, 0x00	; 0
    26a2:	23 e5       	ldi	r18, 0x53	; 83
    26a4:	30 e0       	ldi	r19, 0x00	; 0
    26a6:	f9 01       	movw	r30, r18
    26a8:	20 81       	ld	r18, Z
    26aa:	24 60       	ori	r18, 0x04	; 4
    26ac:	fc 01       	movw	r30, r24
    26ae:	20 83       	st	Z, r18
    26b0:	1e c0       	rjmp	.+60     	; 0x26ee <TIMER0_start+0x140>
    26b2:	89 81       	ldd	r24, Y+1	; 0x01
    26b4:	84 30       	cpi	r24, 0x04	; 4
    26b6:	d9 f4       	brne	.+54     	; 0x26ee <TIMER0_start+0x140>
    26b8:	83 e5       	ldi	r24, 0x53	; 83
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	23 e5       	ldi	r18, 0x53	; 83
    26be:	30 e0       	ldi	r19, 0x00	; 0
    26c0:	f9 01       	movw	r30, r18
    26c2:	20 81       	ld	r18, Z
    26c4:	21 60       	ori	r18, 0x01	; 1
    26c6:	fc 01       	movw	r30, r24
    26c8:	20 83       	st	Z, r18
    26ca:	83 e5       	ldi	r24, 0x53	; 83
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	23 e5       	ldi	r18, 0x53	; 83
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	f9 01       	movw	r30, r18
    26d4:	20 81       	ld	r18, Z
    26d6:	2d 7f       	andi	r18, 0xFD	; 253
    26d8:	fc 01       	movw	r30, r24
    26da:	20 83       	st	Z, r18
    26dc:	83 e5       	ldi	r24, 0x53	; 83
    26de:	90 e0       	ldi	r25, 0x00	; 0
    26e0:	23 e5       	ldi	r18, 0x53	; 83
    26e2:	30 e0       	ldi	r19, 0x00	; 0
    26e4:	f9 01       	movw	r30, r18
    26e6:	20 81       	ld	r18, Z
    26e8:	24 60       	ori	r18, 0x04	; 4
    26ea:	fc 01       	movw	r30, r24
    26ec:	20 83       	st	Z, r18
    26ee:	00 00       	nop
    26f0:	0f 90       	pop	r0
    26f2:	df 91       	pop	r29
    26f4:	cf 91       	pop	r28
    26f6:	08 95       	ret

000026f8 <TIMER0_setCallback>:
    26f8:	cf 93       	push	r28
    26fa:	df 93       	push	r29
    26fc:	00 d0       	rcall	.+0      	; 0x26fe <TIMER0_setCallback+0x6>
    26fe:	cd b7       	in	r28, 0x3d	; 61
    2700:	de b7       	in	r29, 0x3e	; 62
    2702:	9a 83       	std	Y+2, r25	; 0x02
    2704:	89 83       	std	Y+1, r24	; 0x01
    2706:	89 81       	ldd	r24, Y+1	; 0x01
    2708:	9a 81       	ldd	r25, Y+2	; 0x02
    270a:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <OV_ptr+0x1>
    270e:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <OV_ptr>
    2712:	00 00       	nop
    2714:	0f 90       	pop	r0
    2716:	0f 90       	pop	r0
    2718:	df 91       	pop	r29
    271a:	cf 91       	pop	r28
    271c:	08 95       	ret

0000271e <__vector_11>:
    271e:	1f 92       	push	r1
    2720:	0f 92       	push	r0
    2722:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2726:	0f 92       	push	r0
    2728:	11 24       	eor	r1, r1
    272a:	2f 93       	push	r18
    272c:	3f 93       	push	r19
    272e:	4f 93       	push	r20
    2730:	5f 93       	push	r21
    2732:	6f 93       	push	r22
    2734:	7f 93       	push	r23
    2736:	8f 93       	push	r24
    2738:	9f 93       	push	r25
    273a:	af 93       	push	r26
    273c:	bf 93       	push	r27
    273e:	ef 93       	push	r30
    2740:	ff 93       	push	r31
    2742:	cf 93       	push	r28
    2744:	df 93       	push	r29
    2746:	cd b7       	in	r28, 0x3d	; 61
    2748:	de b7       	in	r29, 0x3e	; 62
    274a:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <OV_ptr>
    274e:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <OV_ptr+0x1>
    2752:	fc 01       	movw	r30, r24
    2754:	09 95       	icall
    2756:	00 00       	nop
    2758:	df 91       	pop	r29
    275a:	cf 91       	pop	r28
    275c:	ff 91       	pop	r31
    275e:	ef 91       	pop	r30
    2760:	bf 91       	pop	r27
    2762:	af 91       	pop	r26
    2764:	9f 91       	pop	r25
    2766:	8f 91       	pop	r24
    2768:	7f 91       	pop	r23
    276a:	6f 91       	pop	r22
    276c:	5f 91       	pop	r21
    276e:	4f 91       	pop	r20
    2770:	3f 91       	pop	r19
    2772:	2f 91       	pop	r18
    2774:	0f 90       	pop	r0
    2776:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    277a:	0f 90       	pop	r0
    277c:	1f 90       	pop	r1
    277e:	18 95       	reti

00002780 <__vector_10>:
    2780:	1f 92       	push	r1
    2782:	0f 92       	push	r0
    2784:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    2788:	0f 92       	push	r0
    278a:	11 24       	eor	r1, r1
    278c:	2f 93       	push	r18
    278e:	3f 93       	push	r19
    2790:	4f 93       	push	r20
    2792:	5f 93       	push	r21
    2794:	6f 93       	push	r22
    2796:	7f 93       	push	r23
    2798:	8f 93       	push	r24
    279a:	9f 93       	push	r25
    279c:	af 93       	push	r26
    279e:	bf 93       	push	r27
    27a0:	ef 93       	push	r30
    27a2:	ff 93       	push	r31
    27a4:	cf 93       	push	r28
    27a6:	df 93       	push	r29
    27a8:	cd b7       	in	r28, 0x3d	; 61
    27aa:	de b7       	in	r29, 0x3e	; 62
    27ac:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <CTC_ptr>
    27b0:	90 91 fe 01 	lds	r25, 0x01FE	; 0x8001fe <CTC_ptr+0x1>
    27b4:	fc 01       	movw	r30, r24
    27b6:	09 95       	icall
    27b8:	00 00       	nop
    27ba:	df 91       	pop	r29
    27bc:	cf 91       	pop	r28
    27be:	ff 91       	pop	r31
    27c0:	ef 91       	pop	r30
    27c2:	bf 91       	pop	r27
    27c4:	af 91       	pop	r26
    27c6:	9f 91       	pop	r25
    27c8:	8f 91       	pop	r24
    27ca:	7f 91       	pop	r23
    27cc:	6f 91       	pop	r22
    27ce:	5f 91       	pop	r21
    27d0:	4f 91       	pop	r20
    27d2:	3f 91       	pop	r19
    27d4:	2f 91       	pop	r18
    27d6:	0f 90       	pop	r0
    27d8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    27dc:	0f 90       	pop	r0
    27de:	1f 90       	pop	r1
    27e0:	18 95       	reti

000027e2 <UART_init>:
    27e2:	cf 93       	push	r28
    27e4:	df 93       	push	r29
    27e6:	1f 92       	push	r1
    27e8:	cd b7       	in	r28, 0x3d	; 61
    27ea:	de b7       	in	r29, 0x3e	; 62
    27ec:	8a e2       	ldi	r24, 0x2A	; 42
    27ee:	90 e0       	ldi	r25, 0x00	; 0
    27f0:	2a e2       	ldi	r18, 0x2A	; 42
    27f2:	30 e0       	ldi	r19, 0x00	; 0
    27f4:	f9 01       	movw	r30, r18
    27f6:	20 81       	ld	r18, Z
    27f8:	20 61       	ori	r18, 0x10	; 16
    27fa:	fc 01       	movw	r30, r24
    27fc:	20 83       	st	Z, r18
    27fe:	8a e2       	ldi	r24, 0x2A	; 42
    2800:	90 e0       	ldi	r25, 0x00	; 0
    2802:	2a e2       	ldi	r18, 0x2A	; 42
    2804:	30 e0       	ldi	r19, 0x00	; 0
    2806:	f9 01       	movw	r30, r18
    2808:	20 81       	ld	r18, Z
    280a:	28 60       	ori	r18, 0x08	; 8
    280c:	fc 01       	movw	r30, r24
    280e:	20 83       	st	Z, r18
    2810:	80 e8       	ldi	r24, 0x80	; 128
    2812:	89 83       	std	Y+1, r24	; 0x01
    2814:	8a e2       	ldi	r24, 0x2A	; 42
    2816:	90 e0       	ldi	r25, 0x00	; 0
    2818:	2a e2       	ldi	r18, 0x2A	; 42
    281a:	30 e0       	ldi	r19, 0x00	; 0
    281c:	f9 01       	movw	r30, r18
    281e:	20 81       	ld	r18, Z
    2820:	24 60       	ori	r18, 0x04	; 4
    2822:	fc 01       	movw	r30, r24
    2824:	20 83       	st	Z, r18
    2826:	89 81       	ldd	r24, Y+1	; 0x01
    2828:	84 60       	ori	r24, 0x04	; 4
    282a:	89 83       	std	Y+1, r24	; 0x01
    282c:	89 81       	ldd	r24, Y+1	; 0x01
    282e:	84 60       	ori	r24, 0x04	; 4
    2830:	89 83       	std	Y+1, r24	; 0x01
    2832:	89 81       	ldd	r24, Y+1	; 0x01
    2834:	87 7f       	andi	r24, 0xF7	; 247
    2836:	89 83       	std	Y+1, r24	; 0x01
    2838:	89 81       	ldd	r24, Y+1	; 0x01
    283a:	8f 7e       	andi	r24, 0xEF	; 239
    283c:	89 83       	std	Y+1, r24	; 0x01
    283e:	89 81       	ldd	r24, Y+1	; 0x01
    2840:	8f 7d       	andi	r24, 0xDF	; 223
    2842:	89 83       	std	Y+1, r24	; 0x01
    2844:	80 e4       	ldi	r24, 0x40	; 64
    2846:	90 e0       	ldi	r25, 0x00	; 0
    2848:	29 81       	ldd	r18, Y+1	; 0x01
    284a:	fc 01       	movw	r30, r24
    284c:	20 83       	st	Z, r18
    284e:	89 e2       	ldi	r24, 0x29	; 41
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	27 e6       	ldi	r18, 0x67	; 103
    2854:	fc 01       	movw	r30, r24
    2856:	20 83       	st	Z, r18
    2858:	00 00       	nop
    285a:	0f 90       	pop	r0
    285c:	df 91       	pop	r29
    285e:	cf 91       	pop	r28
    2860:	08 95       	ret

00002862 <UART_sendData>:
    2862:	cf 93       	push	r28
    2864:	df 93       	push	r29
    2866:	1f 92       	push	r1
    2868:	cd b7       	in	r28, 0x3d	; 61
    286a:	de b7       	in	r29, 0x3e	; 62
    286c:	89 83       	std	Y+1, r24	; 0x01
    286e:	00 00       	nop
    2870:	8b e2       	ldi	r24, 0x2B	; 43
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	fc 01       	movw	r30, r24
    2876:	80 81       	ld	r24, Z
    2878:	82 95       	swap	r24
    287a:	86 95       	lsr	r24
    287c:	87 70       	andi	r24, 0x07	; 7
    287e:	88 2f       	mov	r24, r24
    2880:	90 e0       	ldi	r25, 0x00	; 0
    2882:	81 70       	andi	r24, 0x01	; 1
    2884:	99 27       	eor	r25, r25
    2886:	89 2b       	or	r24, r25
    2888:	99 f3       	breq	.-26     	; 0x2870 <UART_sendData+0xe>
    288a:	8c e2       	ldi	r24, 0x2C	; 44
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	29 81       	ldd	r18, Y+1	; 0x01
    2890:	fc 01       	movw	r30, r24
    2892:	20 83       	st	Z, r18
    2894:	00 00       	nop
    2896:	0f 90       	pop	r0
    2898:	df 91       	pop	r29
    289a:	cf 91       	pop	r28
    289c:	08 95       	ret

0000289e <UART_sendString>:
    289e:	cf 93       	push	r28
    28a0:	df 93       	push	r29
    28a2:	00 d0       	rcall	.+0      	; 0x28a4 <UART_sendString+0x6>
    28a4:	1f 92       	push	r1
    28a6:	cd b7       	in	r28, 0x3d	; 61
    28a8:	de b7       	in	r29, 0x3e	; 62
    28aa:	9b 83       	std	Y+3, r25	; 0x03
    28ac:	8a 83       	std	Y+2, r24	; 0x02
    28ae:	19 82       	std	Y+1, r1	; 0x01
    28b0:	0e c0       	rjmp	.+28     	; 0x28ce <UART_sendString+0x30>
    28b2:	89 81       	ldd	r24, Y+1	; 0x01
    28b4:	88 2f       	mov	r24, r24
    28b6:	90 e0       	ldi	r25, 0x00	; 0
    28b8:	2a 81       	ldd	r18, Y+2	; 0x02
    28ba:	3b 81       	ldd	r19, Y+3	; 0x03
    28bc:	82 0f       	add	r24, r18
    28be:	93 1f       	adc	r25, r19
    28c0:	fc 01       	movw	r30, r24
    28c2:	80 81       	ld	r24, Z
    28c4:	0e 94 31 14 	call	0x2862	; 0x2862 <UART_sendData>
    28c8:	89 81       	ldd	r24, Y+1	; 0x01
    28ca:	8f 5f       	subi	r24, 0xFF	; 255
    28cc:	89 83       	std	Y+1, r24	; 0x01
    28ce:	89 81       	ldd	r24, Y+1	; 0x01
    28d0:	88 2f       	mov	r24, r24
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	2a 81       	ldd	r18, Y+2	; 0x02
    28d6:	3b 81       	ldd	r19, Y+3	; 0x03
    28d8:	82 0f       	add	r24, r18
    28da:	93 1f       	adc	r25, r19
    28dc:	fc 01       	movw	r30, r24
    28de:	80 81       	ld	r24, Z
    28e0:	88 23       	and	r24, r24
    28e2:	39 f7       	brne	.-50     	; 0x28b2 <UART_sendString+0x14>
    28e4:	00 00       	nop
    28e6:	0f 90       	pop	r0
    28e8:	0f 90       	pop	r0
    28ea:	0f 90       	pop	r0
    28ec:	df 91       	pop	r29
    28ee:	cf 91       	pop	r28
    28f0:	08 95       	ret

000028f2 <UART_receiveData>:
    28f2:	cf 93       	push	r28
    28f4:	df 93       	push	r29
    28f6:	00 d0       	rcall	.+0      	; 0x28f8 <UART_receiveData+0x6>
    28f8:	cd b7       	in	r28, 0x3d	; 61
    28fa:	de b7       	in	r29, 0x3e	; 62
    28fc:	1a 82       	std	Y+2, r1	; 0x02
    28fe:	19 82       	std	Y+1, r1	; 0x01
    2900:	05 c0       	rjmp	.+10     	; 0x290c <UART_receiveData+0x1a>
    2902:	89 81       	ldd	r24, Y+1	; 0x01
    2904:	9a 81       	ldd	r25, Y+2	; 0x02
    2906:	01 96       	adiw	r24, 0x01	; 1
    2908:	9a 83       	std	Y+2, r25	; 0x02
    290a:	89 83       	std	Y+1, r24	; 0x01
    290c:	8b e2       	ldi	r24, 0x2B	; 43
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	fc 01       	movw	r30, r24
    2912:	80 81       	ld	r24, Z
    2914:	88 1f       	adc	r24, r24
    2916:	88 27       	eor	r24, r24
    2918:	88 1f       	adc	r24, r24
    291a:	88 2f       	mov	r24, r24
    291c:	90 e0       	ldi	r25, 0x00	; 0
    291e:	81 70       	andi	r24, 0x01	; 1
    2920:	99 27       	eor	r25, r25
    2922:	89 2b       	or	r24, r25
    2924:	71 f3       	breq	.-36     	; 0x2902 <UART_receiveData+0x10>
    2926:	8c e2       	ldi	r24, 0x2C	; 44
    2928:	90 e0       	ldi	r25, 0x00	; 0
    292a:	fc 01       	movw	r30, r24
    292c:	80 81       	ld	r24, Z
    292e:	0f 90       	pop	r0
    2930:	0f 90       	pop	r0
    2932:	df 91       	pop	r29
    2934:	cf 91       	pop	r28
    2936:	08 95       	ret

00002938 <__cmpsf2>:
    2938:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <__fp_cmp>
    293c:	08 f4       	brcc	.+2      	; 0x2940 <__cmpsf2+0x8>
    293e:	81 e0       	ldi	r24, 0x01	; 1
    2940:	08 95       	ret

00002942 <__fixunssfsi>:
    2942:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <__fp_splitA>
    2946:	88 f0       	brcs	.+34     	; 0x296a <__fixunssfsi+0x28>
    2948:	9f 57       	subi	r25, 0x7F	; 127
    294a:	98 f0       	brcs	.+38     	; 0x2972 <__fixunssfsi+0x30>
    294c:	b9 2f       	mov	r27, r25
    294e:	99 27       	eor	r25, r25
    2950:	b7 51       	subi	r27, 0x17	; 23
    2952:	b0 f0       	brcs	.+44     	; 0x2980 <__fixunssfsi+0x3e>
    2954:	e1 f0       	breq	.+56     	; 0x298e <__fixunssfsi+0x4c>
    2956:	66 0f       	add	r22, r22
    2958:	77 1f       	adc	r23, r23
    295a:	88 1f       	adc	r24, r24
    295c:	99 1f       	adc	r25, r25
    295e:	1a f0       	brmi	.+6      	; 0x2966 <__fixunssfsi+0x24>
    2960:	ba 95       	dec	r27
    2962:	c9 f7       	brne	.-14     	; 0x2956 <__fixunssfsi+0x14>
    2964:	14 c0       	rjmp	.+40     	; 0x298e <__fixunssfsi+0x4c>
    2966:	b1 30       	cpi	r27, 0x01	; 1
    2968:	91 f0       	breq	.+36     	; 0x298e <__fixunssfsi+0x4c>
    296a:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fp_zero>
    296e:	b1 e0       	ldi	r27, 0x01	; 1
    2970:	08 95       	ret
    2972:	0c 94 7b 15 	jmp	0x2af6	; 0x2af6 <__fp_zero>
    2976:	67 2f       	mov	r22, r23
    2978:	78 2f       	mov	r23, r24
    297a:	88 27       	eor	r24, r24
    297c:	b8 5f       	subi	r27, 0xF8	; 248
    297e:	39 f0       	breq	.+14     	; 0x298e <__fixunssfsi+0x4c>
    2980:	b9 3f       	cpi	r27, 0xF9	; 249
    2982:	cc f3       	brlt	.-14     	; 0x2976 <__fixunssfsi+0x34>
    2984:	86 95       	lsr	r24
    2986:	77 95       	ror	r23
    2988:	67 95       	ror	r22
    298a:	b3 95       	inc	r27
    298c:	d9 f7       	brne	.-10     	; 0x2984 <__fixunssfsi+0x42>
    298e:	3e f4       	brtc	.+14     	; 0x299e <__fixunssfsi+0x5c>
    2990:	90 95       	com	r25
    2992:	80 95       	com	r24
    2994:	70 95       	com	r23
    2996:	61 95       	neg	r22
    2998:	7f 4f       	sbci	r23, 0xFF	; 255
    299a:	8f 4f       	sbci	r24, 0xFF	; 255
    299c:	9f 4f       	sbci	r25, 0xFF	; 255
    299e:	08 95       	ret

000029a0 <__floatunsisf>:
    29a0:	e8 94       	clt
    29a2:	09 c0       	rjmp	.+18     	; 0x29b6 <__floatsisf+0x12>

000029a4 <__floatsisf>:
    29a4:	97 fb       	bst	r25, 7
    29a6:	3e f4       	brtc	.+14     	; 0x29b6 <__floatsisf+0x12>
    29a8:	90 95       	com	r25
    29aa:	80 95       	com	r24
    29ac:	70 95       	com	r23
    29ae:	61 95       	neg	r22
    29b0:	7f 4f       	sbci	r23, 0xFF	; 255
    29b2:	8f 4f       	sbci	r24, 0xFF	; 255
    29b4:	9f 4f       	sbci	r25, 0xFF	; 255
    29b6:	99 23       	and	r25, r25
    29b8:	a9 f0       	breq	.+42     	; 0x29e4 <__floatsisf+0x40>
    29ba:	f9 2f       	mov	r31, r25
    29bc:	96 e9       	ldi	r25, 0x96	; 150
    29be:	bb 27       	eor	r27, r27
    29c0:	93 95       	inc	r25
    29c2:	f6 95       	lsr	r31
    29c4:	87 95       	ror	r24
    29c6:	77 95       	ror	r23
    29c8:	67 95       	ror	r22
    29ca:	b7 95       	ror	r27
    29cc:	f1 11       	cpse	r31, r1
    29ce:	f8 cf       	rjmp	.-16     	; 0x29c0 <__floatsisf+0x1c>
    29d0:	fa f4       	brpl	.+62     	; 0x2a10 <__floatsisf+0x6c>
    29d2:	bb 0f       	add	r27, r27
    29d4:	11 f4       	brne	.+4      	; 0x29da <__floatsisf+0x36>
    29d6:	60 ff       	sbrs	r22, 0
    29d8:	1b c0       	rjmp	.+54     	; 0x2a10 <__floatsisf+0x6c>
    29da:	6f 5f       	subi	r22, 0xFF	; 255
    29dc:	7f 4f       	sbci	r23, 0xFF	; 255
    29de:	8f 4f       	sbci	r24, 0xFF	; 255
    29e0:	9f 4f       	sbci	r25, 0xFF	; 255
    29e2:	16 c0       	rjmp	.+44     	; 0x2a10 <__floatsisf+0x6c>
    29e4:	88 23       	and	r24, r24
    29e6:	11 f0       	breq	.+4      	; 0x29ec <__floatsisf+0x48>
    29e8:	96 e9       	ldi	r25, 0x96	; 150
    29ea:	11 c0       	rjmp	.+34     	; 0x2a0e <__floatsisf+0x6a>
    29ec:	77 23       	and	r23, r23
    29ee:	21 f0       	breq	.+8      	; 0x29f8 <__floatsisf+0x54>
    29f0:	9e e8       	ldi	r25, 0x8E	; 142
    29f2:	87 2f       	mov	r24, r23
    29f4:	76 2f       	mov	r23, r22
    29f6:	05 c0       	rjmp	.+10     	; 0x2a02 <__floatsisf+0x5e>
    29f8:	66 23       	and	r22, r22
    29fa:	71 f0       	breq	.+28     	; 0x2a18 <__floatsisf+0x74>
    29fc:	96 e8       	ldi	r25, 0x86	; 134
    29fe:	86 2f       	mov	r24, r22
    2a00:	70 e0       	ldi	r23, 0x00	; 0
    2a02:	60 e0       	ldi	r22, 0x00	; 0
    2a04:	2a f0       	brmi	.+10     	; 0x2a10 <__floatsisf+0x6c>
    2a06:	9a 95       	dec	r25
    2a08:	66 0f       	add	r22, r22
    2a0a:	77 1f       	adc	r23, r23
    2a0c:	88 1f       	adc	r24, r24
    2a0e:	da f7       	brpl	.-10     	; 0x2a06 <__floatsisf+0x62>
    2a10:	88 0f       	add	r24, r24
    2a12:	96 95       	lsr	r25
    2a14:	87 95       	ror	r24
    2a16:	97 f9       	bld	r25, 7
    2a18:	08 95       	ret

00002a1a <__fp_cmp>:
    2a1a:	99 0f       	add	r25, r25
    2a1c:	00 08       	sbc	r0, r0
    2a1e:	55 0f       	add	r21, r21
    2a20:	aa 0b       	sbc	r26, r26
    2a22:	e0 e8       	ldi	r30, 0x80	; 128
    2a24:	fe ef       	ldi	r31, 0xFE	; 254
    2a26:	16 16       	cp	r1, r22
    2a28:	17 06       	cpc	r1, r23
    2a2a:	e8 07       	cpc	r30, r24
    2a2c:	f9 07       	cpc	r31, r25
    2a2e:	c0 f0       	brcs	.+48     	; 0x2a60 <__fp_cmp+0x46>
    2a30:	12 16       	cp	r1, r18
    2a32:	13 06       	cpc	r1, r19
    2a34:	e4 07       	cpc	r30, r20
    2a36:	f5 07       	cpc	r31, r21
    2a38:	98 f0       	brcs	.+38     	; 0x2a60 <__fp_cmp+0x46>
    2a3a:	62 1b       	sub	r22, r18
    2a3c:	73 0b       	sbc	r23, r19
    2a3e:	84 0b       	sbc	r24, r20
    2a40:	95 0b       	sbc	r25, r21
    2a42:	39 f4       	brne	.+14     	; 0x2a52 <__fp_cmp+0x38>
    2a44:	0a 26       	eor	r0, r26
    2a46:	61 f0       	breq	.+24     	; 0x2a60 <__fp_cmp+0x46>
    2a48:	23 2b       	or	r18, r19
    2a4a:	24 2b       	or	r18, r20
    2a4c:	25 2b       	or	r18, r21
    2a4e:	21 f4       	brne	.+8      	; 0x2a58 <__fp_cmp+0x3e>
    2a50:	08 95       	ret
    2a52:	0a 26       	eor	r0, r26
    2a54:	09 f4       	brne	.+2      	; 0x2a58 <__fp_cmp+0x3e>
    2a56:	a1 40       	sbci	r26, 0x01	; 1
    2a58:	a6 95       	lsr	r26
    2a5a:	8f ef       	ldi	r24, 0xFF	; 255
    2a5c:	81 1d       	adc	r24, r1
    2a5e:	81 1d       	adc	r24, r1
    2a60:	08 95       	ret

00002a62 <__fp_inf>:
    2a62:	97 f9       	bld	r25, 7
    2a64:	9f 67       	ori	r25, 0x7F	; 127
    2a66:	80 e8       	ldi	r24, 0x80	; 128
    2a68:	70 e0       	ldi	r23, 0x00	; 0
    2a6a:	60 e0       	ldi	r22, 0x00	; 0
    2a6c:	08 95       	ret

00002a6e <__fp_nan>:
    2a6e:	9f ef       	ldi	r25, 0xFF	; 255
    2a70:	80 ec       	ldi	r24, 0xC0	; 192
    2a72:	08 95       	ret

00002a74 <__fp_pscA>:
    2a74:	00 24       	eor	r0, r0
    2a76:	0a 94       	dec	r0
    2a78:	16 16       	cp	r1, r22
    2a7a:	17 06       	cpc	r1, r23
    2a7c:	18 06       	cpc	r1, r24
    2a7e:	09 06       	cpc	r0, r25
    2a80:	08 95       	ret

00002a82 <__fp_pscB>:
    2a82:	00 24       	eor	r0, r0
    2a84:	0a 94       	dec	r0
    2a86:	12 16       	cp	r1, r18
    2a88:	13 06       	cpc	r1, r19
    2a8a:	14 06       	cpc	r1, r20
    2a8c:	05 06       	cpc	r0, r21
    2a8e:	08 95       	ret

00002a90 <__fp_round>:
    2a90:	09 2e       	mov	r0, r25
    2a92:	03 94       	inc	r0
    2a94:	00 0c       	add	r0, r0
    2a96:	11 f4       	brne	.+4      	; 0x2a9c <__fp_round+0xc>
    2a98:	88 23       	and	r24, r24
    2a9a:	52 f0       	brmi	.+20     	; 0x2ab0 <__fp_round+0x20>
    2a9c:	bb 0f       	add	r27, r27
    2a9e:	40 f4       	brcc	.+16     	; 0x2ab0 <__fp_round+0x20>
    2aa0:	bf 2b       	or	r27, r31
    2aa2:	11 f4       	brne	.+4      	; 0x2aa8 <__fp_round+0x18>
    2aa4:	60 ff       	sbrs	r22, 0
    2aa6:	04 c0       	rjmp	.+8      	; 0x2ab0 <__fp_round+0x20>
    2aa8:	6f 5f       	subi	r22, 0xFF	; 255
    2aaa:	7f 4f       	sbci	r23, 0xFF	; 255
    2aac:	8f 4f       	sbci	r24, 0xFF	; 255
    2aae:	9f 4f       	sbci	r25, 0xFF	; 255
    2ab0:	08 95       	ret

00002ab2 <__fp_split3>:
    2ab2:	57 fd       	sbrc	r21, 7
    2ab4:	90 58       	subi	r25, 0x80	; 128
    2ab6:	44 0f       	add	r20, r20
    2ab8:	55 1f       	adc	r21, r21
    2aba:	59 f0       	breq	.+22     	; 0x2ad2 <__fp_splitA+0x10>
    2abc:	5f 3f       	cpi	r21, 0xFF	; 255
    2abe:	71 f0       	breq	.+28     	; 0x2adc <__fp_splitA+0x1a>
    2ac0:	47 95       	ror	r20

00002ac2 <__fp_splitA>:
    2ac2:	88 0f       	add	r24, r24
    2ac4:	97 fb       	bst	r25, 7
    2ac6:	99 1f       	adc	r25, r25
    2ac8:	61 f0       	breq	.+24     	; 0x2ae2 <__fp_splitA+0x20>
    2aca:	9f 3f       	cpi	r25, 0xFF	; 255
    2acc:	79 f0       	breq	.+30     	; 0x2aec <__fp_splitA+0x2a>
    2ace:	87 95       	ror	r24
    2ad0:	08 95       	ret
    2ad2:	12 16       	cp	r1, r18
    2ad4:	13 06       	cpc	r1, r19
    2ad6:	14 06       	cpc	r1, r20
    2ad8:	55 1f       	adc	r21, r21
    2ada:	f2 cf       	rjmp	.-28     	; 0x2ac0 <__fp_split3+0xe>
    2adc:	46 95       	lsr	r20
    2ade:	f1 df       	rcall	.-30     	; 0x2ac2 <__fp_splitA>
    2ae0:	08 c0       	rjmp	.+16     	; 0x2af2 <__fp_splitA+0x30>
    2ae2:	16 16       	cp	r1, r22
    2ae4:	17 06       	cpc	r1, r23
    2ae6:	18 06       	cpc	r1, r24
    2ae8:	99 1f       	adc	r25, r25
    2aea:	f1 cf       	rjmp	.-30     	; 0x2ace <__fp_splitA+0xc>
    2aec:	86 95       	lsr	r24
    2aee:	71 05       	cpc	r23, r1
    2af0:	61 05       	cpc	r22, r1
    2af2:	08 94       	sec
    2af4:	08 95       	ret

00002af6 <__fp_zero>:
    2af6:	e8 94       	clt

00002af8 <__fp_szero>:
    2af8:	bb 27       	eor	r27, r27
    2afa:	66 27       	eor	r22, r22
    2afc:	77 27       	eor	r23, r23
    2afe:	cb 01       	movw	r24, r22
    2b00:	97 f9       	bld	r25, 7
    2b02:	08 95       	ret

00002b04 <__gesf2>:
    2b04:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <__fp_cmp>
    2b08:	08 f4       	brcc	.+2      	; 0x2b0c <__gesf2+0x8>
    2b0a:	8f ef       	ldi	r24, 0xFF	; 255
    2b0c:	08 95       	ret

00002b0e <__mulsf3>:
    2b0e:	0e 94 9a 15 	call	0x2b34	; 0x2b34 <__mulsf3x>
    2b12:	0c 94 48 15 	jmp	0x2a90	; 0x2a90 <__fp_round>
    2b16:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__fp_pscA>
    2b1a:	38 f0       	brcs	.+14     	; 0x2b2a <__mulsf3+0x1c>
    2b1c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <__fp_pscB>
    2b20:	20 f0       	brcs	.+8      	; 0x2b2a <__mulsf3+0x1c>
    2b22:	95 23       	and	r25, r21
    2b24:	11 f0       	breq	.+4      	; 0x2b2a <__mulsf3+0x1c>
    2b26:	0c 94 31 15 	jmp	0x2a62	; 0x2a62 <__fp_inf>
    2b2a:	0c 94 37 15 	jmp	0x2a6e	; 0x2a6e <__fp_nan>
    2b2e:	11 24       	eor	r1, r1
    2b30:	0c 94 7c 15 	jmp	0x2af8	; 0x2af8 <__fp_szero>

00002b34 <__mulsf3x>:
    2b34:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <__fp_split3>
    2b38:	70 f3       	brcs	.-36     	; 0x2b16 <__mulsf3+0x8>

00002b3a <__mulsf3_pse>:
    2b3a:	95 9f       	mul	r25, r21
    2b3c:	c1 f3       	breq	.-16     	; 0x2b2e <__mulsf3+0x20>
    2b3e:	95 0f       	add	r25, r21
    2b40:	50 e0       	ldi	r21, 0x00	; 0
    2b42:	55 1f       	adc	r21, r21
    2b44:	62 9f       	mul	r22, r18
    2b46:	f0 01       	movw	r30, r0
    2b48:	72 9f       	mul	r23, r18
    2b4a:	bb 27       	eor	r27, r27
    2b4c:	f0 0d       	add	r31, r0
    2b4e:	b1 1d       	adc	r27, r1
    2b50:	63 9f       	mul	r22, r19
    2b52:	aa 27       	eor	r26, r26
    2b54:	f0 0d       	add	r31, r0
    2b56:	b1 1d       	adc	r27, r1
    2b58:	aa 1f       	adc	r26, r26
    2b5a:	64 9f       	mul	r22, r20
    2b5c:	66 27       	eor	r22, r22
    2b5e:	b0 0d       	add	r27, r0
    2b60:	a1 1d       	adc	r26, r1
    2b62:	66 1f       	adc	r22, r22
    2b64:	82 9f       	mul	r24, r18
    2b66:	22 27       	eor	r18, r18
    2b68:	b0 0d       	add	r27, r0
    2b6a:	a1 1d       	adc	r26, r1
    2b6c:	62 1f       	adc	r22, r18
    2b6e:	73 9f       	mul	r23, r19
    2b70:	b0 0d       	add	r27, r0
    2b72:	a1 1d       	adc	r26, r1
    2b74:	62 1f       	adc	r22, r18
    2b76:	83 9f       	mul	r24, r19
    2b78:	a0 0d       	add	r26, r0
    2b7a:	61 1d       	adc	r22, r1
    2b7c:	22 1f       	adc	r18, r18
    2b7e:	74 9f       	mul	r23, r20
    2b80:	33 27       	eor	r19, r19
    2b82:	a0 0d       	add	r26, r0
    2b84:	61 1d       	adc	r22, r1
    2b86:	23 1f       	adc	r18, r19
    2b88:	84 9f       	mul	r24, r20
    2b8a:	60 0d       	add	r22, r0
    2b8c:	21 1d       	adc	r18, r1
    2b8e:	82 2f       	mov	r24, r18
    2b90:	76 2f       	mov	r23, r22
    2b92:	6a 2f       	mov	r22, r26
    2b94:	11 24       	eor	r1, r1
    2b96:	9f 57       	subi	r25, 0x7F	; 127
    2b98:	50 40       	sbci	r21, 0x00	; 0
    2b9a:	9a f0       	brmi	.+38     	; 0x2bc2 <__mulsf3_pse+0x88>
    2b9c:	f1 f0       	breq	.+60     	; 0x2bda <__mulsf3_pse+0xa0>
    2b9e:	88 23       	and	r24, r24
    2ba0:	4a f0       	brmi	.+18     	; 0x2bb4 <__mulsf3_pse+0x7a>
    2ba2:	ee 0f       	add	r30, r30
    2ba4:	ff 1f       	adc	r31, r31
    2ba6:	bb 1f       	adc	r27, r27
    2ba8:	66 1f       	adc	r22, r22
    2baa:	77 1f       	adc	r23, r23
    2bac:	88 1f       	adc	r24, r24
    2bae:	91 50       	subi	r25, 0x01	; 1
    2bb0:	50 40       	sbci	r21, 0x00	; 0
    2bb2:	a9 f7       	brne	.-22     	; 0x2b9e <__mulsf3_pse+0x64>
    2bb4:	9e 3f       	cpi	r25, 0xFE	; 254
    2bb6:	51 05       	cpc	r21, r1
    2bb8:	80 f0       	brcs	.+32     	; 0x2bda <__mulsf3_pse+0xa0>
    2bba:	0c 94 31 15 	jmp	0x2a62	; 0x2a62 <__fp_inf>
    2bbe:	0c 94 7c 15 	jmp	0x2af8	; 0x2af8 <__fp_szero>
    2bc2:	5f 3f       	cpi	r21, 0xFF	; 255
    2bc4:	e4 f3       	brlt	.-8      	; 0x2bbe <__mulsf3_pse+0x84>
    2bc6:	98 3e       	cpi	r25, 0xE8	; 232
    2bc8:	d4 f3       	brlt	.-12     	; 0x2bbe <__mulsf3_pse+0x84>
    2bca:	86 95       	lsr	r24
    2bcc:	77 95       	ror	r23
    2bce:	67 95       	ror	r22
    2bd0:	b7 95       	ror	r27
    2bd2:	f7 95       	ror	r31
    2bd4:	e7 95       	ror	r30
    2bd6:	9f 5f       	subi	r25, 0xFF	; 255
    2bd8:	c1 f7       	brne	.-16     	; 0x2bca <__mulsf3_pse+0x90>
    2bda:	fe 2b       	or	r31, r30
    2bdc:	88 0f       	add	r24, r24
    2bde:	91 1d       	adc	r25, r1
    2be0:	96 95       	lsr	r25
    2be2:	87 95       	ror	r24
    2be4:	97 f9       	bld	r25, 7
    2be6:	08 95       	ret

00002be8 <strcmp>:
    2be8:	fb 01       	movw	r30, r22
    2bea:	dc 01       	movw	r26, r24
    2bec:	8d 91       	ld	r24, X+
    2bee:	01 90       	ld	r0, Z+
    2bf0:	80 19       	sub	r24, r0
    2bf2:	01 10       	cpse	r0, r1
    2bf4:	d9 f3       	breq	.-10     	; 0x2bec <strcmp+0x4>
    2bf6:	99 0b       	sbc	r25, r25
    2bf8:	08 95       	ret

00002bfa <_exit>:
    2bfa:	f8 94       	cli

00002bfc <__stop_program>:
    2bfc:	ff cf       	rjmp	.-2      	; 0x2bfc <__stop_program>
